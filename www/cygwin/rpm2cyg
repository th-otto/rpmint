#!/bin/sh

#
# Script to generate cygwin *.hint files from rpm packages.
# This only creates the hints and archives,
# after all packages have been added,
# run mksetupini.sh to generate the */setup.ini
#

me="$0"
scriptdir=${0%/*}

. ${scriptdir}/cygfuncs.sh

pkgname="$1"
test "${pkgname}" == "" && {
	echo "missing package name" >&2
	exit 1
}

#
# Do not auto-generate hint file for gcc & binutils,
# these have been manually created
#
case $pkgname in
	gcc* | binutils*) exit 0; ;;
esac

specfile="${topdir}/SPECS/${pkgname}.spec"
if ! test -f "$specfile"; then
	echo "package ${pkgname} not found" >&2
	exit 1
fi

fullname=`sed -n 's/Name:[ \t]*\(.*\)/\1/p' "$specfile" | head -1 | sed -e "s/%{pkgname}/${pkgname}/"`
echo "pkgname: ${fullname}"
version=`sed -n 's/^Version:[ \t]*\(.*\)/\1/p' "$specfile"`
release=`sed -n 's/^Release:[ \t]*\(.*\)/\1/p' "$specfile"`
arch=
if test "$arch" = ""; then
	rpmfile="$RPMS/noarch/${fullname}-${version}-${release}.noarch.rpm"
	if test -f "$rpmfile"; then
		arch="noarch"
	fi
fi
if test "$arch" = ""; then
	rpmfile="$RPMS/x86_64/${fullname}-${version}-${release}.x86_64.rpm"
	if test -f "$rpmfile"; then
		arch="x86_64"
	fi
fi
if test "$arch" = ""; then
	echo "no rpmfile found" >&2
	exit 1
fi
#rpm -q --info "$rpmfile"

pkgdir="$arch/release/${fullname}"
mkdir -p "${pkgdir}"

maintainer=`rpm -q --queryformat '%{packager}' "$rpmfile"`
url=`rpm -q --queryformat '%{url}' "$rpmfile"`
summary=`rpm -q --queryformat '%{summary}' "$rpmfile"`
description=`rpm -q --queryformat '%{description}' "$rpmfile"`
requires=`rpm -q --queryformat '[%{requires}\n]' "$rpmfile" | grep -v rpmlib | grep -v "lib.*\.so" | grep -v /bin/sh`
group=`rpm -q --queryformat '%{group}' "$rpmfile"`
provides=`rpm -q --queryformat '%{provides}' "$rpmfile"`

if test "${requires}" != ""; then
	requires="requires: "`echo ${requires} | sed -e 's/ /,/g'`"
"
fi

case $group in
   System/Libraries) group=libs ;;
   System*) group=system ;;
   Development*) group=devel ;;
   System/Shell) group=shells ;;
   *Archiving*) group=archive ;;
   *) group=Libs ;;
esac

if test "${group}" != ""; then
	group="category: ${group}
"
fi

if test "${provides}" != ""; then
	provides="provides: ${provides}
"
fi


cd "${pkgdir}"

cat << EOF > "${fullname}-${version}-${release}.hint"
sdesc: "${summary}"
ldesc: "${description}"
${requires}${group}${provides}
EOF

cat << EOF > "${fullname}-${version}-${release}-src.hint"
sdesc: "${summary}"
ldesc: "${description}"
homepage: ${url}
${group}
EOF


rm -rf usr etc

rpm2cpio "$rpmfile" | cpio -id
files="usr"
if test -d etc; then files+=" etc"; fi

tar cfJ ${fullname}-${version}-${release}.tar.xz $files
# FIXME: generate proper source package
ln -sf $HOME/packages/$pkgname-$version.tar.xz ${fullname}-${version}-${release}-src.tar.xz

rm -rf usr etc
