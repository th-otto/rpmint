#!/bin/sh

#
# Script to generate debian control files from rpm packages.
# This only creates the control files in the pool.
# After all packages have been added,
# run updatedeb to generate the */Packages and */Release files
#

me="$0"
scriptdir=${0%/*}

. ${scriptdir}/debfuncs.sh

pkgname="$1"
test "${pkgname}" == "" && {
	echo "missing package name" >&2
	exit 1
}

result=0

if test "${pkgname}" = "--all"; then
	pkgnames=`php ../rpm/SPECS/listpkgs.php --names`
else
	pkgnames="$pkgname";
fi
for pkgname in $pkgnames; do
	cd "$here"

	specname="$pkgname"
	specfile="${topdir}/SPECS/${specname}.spec"
	if ! test -f "$specfile"; then
		specname=`echo $pkgname | tr '[[:upper:]]' '[[:lower:]]'`
		specfile="${topdir}/SPECS/${specname}.spec"
		if ! test -f "$specfile"; then
			$ECHO_E "package ${red}${pkgname}${coff} not found" >&2
			result=1
			continue
		fi
	fi
	
	fullname=`sed -n 's/Name[ \t]*:[ \t]*\(.*\)/\1/p' "$specfile" | head -1 | sed -e "s/%{pkgname}/${pkgname}/" | sed -e "s/%{crossmint}/cross-mint-/"`
	echo "pkgname: ${fullname}"
	version=`sed -n 's/^Version[ \t]*:[ \t]*\(.*\)/\1/p' "$specfile" | head -1`
	release=`sed -n 's/^[Rr]elease[ \t]*:[ \t]*\(.*\)/\1/p' "$specfile" | head -1`
	arch=
	case $pkgname in
		bash) version=4.4.23
		;;
	esac
	if test "$arch" = ""; then
		rpmfile="$RPMS/noarch/${fullname}-${version}-${release}.noarch.rpm"
		if test -f "$rpmfile"; then
			arch="all"
		fi
	fi
	if test "$arch" = ""; then
		rpmfile="$RPMS/x86_64/${fullname}-${version}-${release}.x86_64.rpm"
		if test -f "$rpmfile"; then
			arch="amd64"
		fi
	fi
	if test "$arch" = ""; then
		rpmfile="$RPMS/i686/${fullname}-${version}-${release}.i686.rpm"
		if test -f "$rpmfile"; then
			arch="i386"
		fi
	fi
	if test "$arch" = ""; then
		$ECHO_E "${red}$pkgname${coff}: no rpmfile found for ${fullname}-${version}-${release}" >&2
		result=1
		continue
	fi
	#rpm -q --info "$rpmfile"
	
	pkgdir="${DEBIAN}/specs/${pkgname}"
	mkdir -p "${pkgdir}/DEBIAN"
	
	maintainer=`rpm -q --queryformat '%{packager}' "$rpmfile"`
	url=`rpm -q --queryformat '%{url}' "$rpmfile"`
	summary=`rpm -q --queryformat '%{summary}' "$rpmfile"`
	description=`rpm -q --queryformat '%{description}' "$rpmfile" | sed -e 's/^$/./' -e 's/^/ /'`
	requires=`rpm -q --queryformat '[%{requires}\n]' "$rpmfile" | grep -v 'rpmlib(' | grep -v 'cmake(' | grep -v 'config(' | grep -v 'mono(' | grep -v "lib.*\.so" | grep -v /bin/ | grep -v /sbin/ | sed -e 's/pkgconfig(\(.*\))/\1/g' | sort -u`
	group=`rpm -q --queryformat '%{group}' "$rpmfile"`
	provides=`rpm -q --queryformat '[%{provides}\n]' "$rpmfile" | grep -v /bin/ | grep -v /sbin/ | grep -v '(x86-64)' | grep -v 'cmake(' | grep -v 'perl(' | grep -v 'config(' | grep -v 'mono(' | sed -e 's/pkgconfig(\(.*\))/\1/g' | sort -u`
	
	if test "${requires}" != ""; then
		requires="Depends: "`echo ${requires} | sed -e 's/ /,/g'`"
"
	fi
	
	if test "${group}" != ""; then
		group="Section: ${group}
"
	fi
	
	if test "${provides}" != ""; then
		provides="Provides: "`echo ${provides} | sed -e 's/ /,/g'`"
"
	fi
	
	
	cd "${pkgdir}" || exit 1
	
	cat << EOF > "DEBIAN/control"
Package: ${fullname}
Version: ${version}-${release}
Maintainer: ${maintainer}
Architecture: ${arch}
Homepage: ${url}
${requires}${group}${provides}Description: ${summary}
${description}


EOF
	
	
	rm -f *.deb control.tar.xz data.tar.xz debian-binary md5sums control
	dirs="usr etc sbin var"
	rm -rf $dirs
	
	rpm2cpio "$rpmfile" | cpio --quiet -id
	
	>DEBIAN/md5sums
	for dir in $dirs; do
		if test -d $dir; then find $dir -type f -print0 | xargs -0 md5sum >> DEBIAN/md5sums; fi
	done

	rm -rf $dirs
	
	dpkg-deb --build . "$POOL/main" || exit 1
	
	debfile="${fullname}_${version}-${release}_${arch}.deb"
	
done

exit $result
