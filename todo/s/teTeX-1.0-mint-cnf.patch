diff -ur teTeX-1.0-orig/texk/kpathsea/texmf.in teTeX-1.0/texk/kpathsea/texmf.in
--- teTeX-1.0-orig/texk/kpathsea/texmf.in	Sat Jun 19 16:51:16 1999
+++ teTeX-1.0/texk/kpathsea/texmf.in	Mon Nov 29 11:47:36 1999
@@ -88,18 +88,18 @@
 %
 % Remove $VARTEXFONTS from TEXMFDBS if the VARTEXFONTS directory is below
 % one of the TEXMF directories (avoids overlapping ls-R files).
-TEXMFDBS = $TEXMF;$VARTEXFONTS
+TEXMFDBS = $TEXMF:$VARTEXFONTS
 
 % It may be convenient to define TEXMF like this:
 %   TEXMF = {$HOMETEXMF,!!$TEXMFLOCAL,!!$TEXMFMAIN,$HOME}
 % which allows users to set up entire texmf trees, and tells TeX to
 % look in places like ~/tex and ~/bibtex.  If you do this, define TEXMFDBS
 % like this:
-%   TEXMFDBS = $HOMETEXMF;$TEXMFLOCAL;$TEXMFMAIN;$VARTEXFONTS
+%   TEXMFDBS = $HOMETEXMF:$TEXMFLOCAL:$TEXMFMAIN:$VARTEXFONTS
 % or mktexlsr will generate an ls-R file for $HOME when called, which is
 % rarely desirable.  If you do this you'll want to define SYSTEXMF like
 % this:
-%   SYSTEXMF = $TEXMFLOCAL;$TEXMFMAIN
+%   SYSTEXMF = $TEXMFLOCAL:$TEXMFMAIN
 % so that fonts from a user's tree won't escape into the global trees.
 %
 % On some systems, there will be a system tree which contains all the font
@@ -123,138 +123,138 @@
 
 % Plain TeX.  Have the command tex check all directories as a last
 % resort, we may have plain-compatible stuff anywhere.
-TEXINPUTS.tex = .;$TEXMF/tex/{plain,generic,}//
+TEXINPUTS.tex = .:$TEXMF/tex/{plain,generic,}//
 
 % Other plain-based formats.
-TEXINPUTS.amstex = .;$TEXMF/tex/{amstex,plain,generic,}//
-TEXINPUTS.csplain = .;$TEXMF/tex/{csplain,plain,generic,}//
-TEXINPUTS.eplain  = .;$TEXMF/tex/{eplain,plain,generic,}//
-TEXINPUTS.ftex = .;$TEXMF/tex/{formate,plain,generic,}//
-TEXINPUTS.jadetex = .;$TEXMF/tex/{jadetex,plain,generic,}//
-TEXINPUTS.mex = .;$TEXMF/tex/{mex,plain,generic,}//
-TEXINPUTS.texinfo = .;$TEXMF/tex/{texinfo,plain,generic,}//
+TEXINPUTS.amstex = .:$TEXMF/tex/{amstex,plain,generic,}//
+TEXINPUTS.csplain = .:$TEXMF/tex/{csplain,plain,generic,}//
+TEXINPUTS.eplain  = .:$TEXMF/tex/{eplain,plain,generic,}//
+TEXINPUTS.ftex = .:$TEXMF/tex/{formate,plain,generic,}//
+TEXINPUTS.jadetex = .:$TEXMF/tex/{jadetex,plain,generic,}//
+TEXINPUTS.mex = .:$TEXMF/tex/{mex,plain,generic,}//
+TEXINPUTS.texinfo = .:$TEXMF/tex/{texinfo,plain,generic,}//
 
 % LaTeX 2e specific macros are stored in latex/, macros that can only be
 % used with 2.09 in latex209/.  In addition, we look in the directory
 % latex209, useful for macros that were written for 2.09 and do not
 % mention 2e at all, but can be used with 2e.
-TEXINPUTS.cslatex = .;$TEXMF/tex/{cslatex,csplain,latex,generic,}//
-TEXINPUTS.platex  = .;$TEXMF/tex/{platex,latex,generic,}//
-TEXINPUTS.latex = .;$TEXMF/tex/{latex,generic,}//
-TEXINPUTS.latex209 = .;$TEXMF/tex/{latex209,generic,latex,}//
+TEXINPUTS.cslatex = .:$TEXMF/tex/{cslatex,csplain,latex,generic,}//
+TEXINPUTS.platex  = .:$TEXMF/tex/{platex,latex,generic,}//
+TEXINPUTS.latex = .:$TEXMF/tex/{latex,generic,}//
+TEXINPUTS.latex209 = .:$TEXMF/tex/{latex209,generic,latex,}//
 
 % Fontinst needs to read afm files.
-TEXINPUTS.fontinst = .;$TEXMF/tex//;$TEXMF/fonts/afm//
+TEXINPUTS.fontinst = .:$TEXMF/tex//:$TEXMF/fonts/afm//
 
 % MLTeX.
-TEXINPUTS.frlatex = .;$TEXMF/{mltex,tex}/{french,latex,generic,}//
-TEXINPUTS.frtex   = .;$TEXMF/{mltex,tex}/{french,plain,generic,}//
-TEXINPUTS.mllatex = .;$TEXMF/{mltex,tex}/{latex,generic,}//
-TEXINPUTS.mltex = .;$TEXMF/{mltex,tex}/{plain,generic,}//
+TEXINPUTS.frlatex = .:$TEXMF/{mltex,tex}/{french,latex,generic,}//
+TEXINPUTS.frtex   = .:$TEXMF/{mltex,tex}/{french,plain,generic,}//
+TEXINPUTS.mllatex = .:$TEXMF/{mltex,tex}/{latex,generic,}//
+TEXINPUTS.mltex = .:$TEXMF/{mltex,tex}/{plain,generic,}//
 
 % e-TeX.  This form of the input paths is borrowed from teTeX.  A certain
 % variant of TDS is assumed here, unaffected by the build variables.
-TEXINPUTS.elatex   = .;$TEXMF/{etex,tex}/{latex,generic,}//
-TEXINPUTS.etex     = .;$TEXMF/{etex,tex}/{plain,generic,}//
+TEXINPUTS.elatex   = .:$TEXMF/{etex,tex}/{latex,generic,}//
+TEXINPUTS.etex     = .:$TEXMF/{etex,tex}/{plain,generic,}//
 
 % pdfTeX.  This form of the input paths is borrowed from teTeX.  A certain
 % variant of TDS is assumed here, unaffected by the build variables.
-TEXINPUTS.pdfcslatex = .;$TEXMF/{pdftex,tex}/{cslatex,csplain,latex,generic,}//
-TEXINPUTS.pdfcsplain = .;$TEXMF/{pdftex,tex}/{csplain,plain,generic,}//
-TEXINPUTS.pdfjadetex = .;$TEXMF/{pdftex,tex}/{jadetex,plain,generic,}//
-TEXINPUTS.pdflatex = .;$TEXMF/{pdftex,tex}/{latex,generic,}//
-TEXINPUTS.pdfmex   = .;$TEXMF/{pdftex,tex}/{mex,plain,generic,}//
-TEXINPUTS.pdftex   = .;$TEXMF/{pdftex,tex}/{plain,generic,}//
-TEXINPUTS.pdftexinfo = .;$TEXMF/{pdftex,tex}/{texinfo,plain,generic,}//
+TEXINPUTS.pdfcslatex = .:$TEXMF/{pdftex,tex}/{cslatex,csplain,latex,generic,}//
+TEXINPUTS.pdfcsplain = .:$TEXMF/{pdftex,tex}/{csplain,plain,generic,}//
+TEXINPUTS.pdfjadetex = .:$TEXMF/{pdftex,tex}/{jadetex,plain,generic,}//
+TEXINPUTS.pdflatex = .:$TEXMF/{pdftex,tex}/{latex,generic,}//
+TEXINPUTS.pdfmex   = .:$TEXMF/{pdftex,tex}/{mex,plain,generic,}//
+TEXINPUTS.pdftex   = .:$TEXMF/{pdftex,tex}/{plain,generic,}//
+TEXINPUTS.pdftexinfo = .:$TEXMF/{pdftex,tex}/{texinfo,plain,generic,}//
 
 % pdfeTeX.
-TEXINPUTS.pdfelatex = .;$TEXMF/{pdfetex,pdftex,etex,tex}/{latex,generic,}//
-TEXINPUTS.pdfetex   = .;$TEXMF/{pdfetex,pdftex,etex,tex}/{plain,generic,}//
+TEXINPUTS.pdfelatex = .:$TEXMF/{pdfetex,pdftex,etex,tex}/{latex,generic,}//
+TEXINPUTS.pdfetex   = .:$TEXMF/{pdfetex,pdftex,etex,tex}/{plain,generic,}//
 
 % Omega.
-TEXINPUTS.lambda = .;$TEXMF/{omega,tex}/{lambda,latex,generic,}//
-TEXINPUTS.omega = .;$TEXMF/{omega,tex}/{plain,generic,}//
+TEXINPUTS.lambda = .:$TEXMF/{omega,tex}/{lambda,latex,generic,}//
+TEXINPUTS.omega = .:$TEXMF/{omega,tex}/{plain,generic,}//
 
 % Context macros by Hans Hagen:
-TEXINPUTS.context = .;$TEXMF/{pdftex,etex,tex}/{context,plain,generic,}//
+TEXINPUTS.context = .:$TEXMF/{pdftex,etex,tex}/{context,plain,generic,}//
 
 % odd formats  needing their own paths
-TEXINPUTS.lamstex  = .;$TEXMF/tex/{lamstex,plain,generic,}//
-TEXINPUTS.lollipop = .;$TEXMF/tex/{lollipop,plain,generic,}//
+TEXINPUTS.lamstex  = .:$TEXMF/tex/{lamstex,plain,generic,}//
+TEXINPUTS.lollipop = .:$TEXMF/tex/{lollipop,plain,generic,}//
 
 % Earlier entries override later ones, so put this last.
-TEXINPUTS = .;$TEXMF/tex/{generic,}//
+TEXINPUTS = .:$TEXMF/tex/{generic,}//
 
 % Metafont, MetaPost inputs.
-MFINPUTS = .;$TEXMF/metafont//;{$TEXMF/fonts,$VARTEXFONTS}/source//
-MPINPUTS = .;$TEXMF/metapost//
+MFINPUTS = .:$TEXMF/metafont//:{$TEXMF/fonts,$VARTEXFONTS}/source//
+MPINPUTS = .:$TEXMF/metapost//
 
 % Dump files (fmt/base/mem) for vir{tex,mf,mp} to read (see web2c/INSTALL),
 % and string pools (.pool) for ini{tex,mf,mp}.  It is silly that we have six
 % paths and directories here (they all resolve to a single place by default),
 % but historically ...
-TEXFORMATS = .;$TEXMF/web2c
-MFBASES = .;$TEXMF/web2c
-MPMEMS = .;$TEXMF/web2c
-TEXPOOL = .;$TEXMF/web2c
-MFPOOL = .;$TEXMF/web2c
-MPPOOL = .;$TEXMF/web2c
+TEXFORMATS = .:$TEXMF/web2c
+MFBASES = .:$TEXMF/web2c
+MPMEMS = .:$TEXMF/web2c
+TEXPOOL = .:$TEXMF/web2c
+MFPOOL = .:$TEXMF/web2c
+MPPOOL = .:$TEXMF/web2c
 
 % Device-independent font metric files.
-VFFONTS = .;$TEXMF/fonts/vf//
-TFMFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/tfm//
+VFFONTS = .:$TEXMF/fonts/vf//
+TFMFONTS = .:{$TEXMF/fonts,$VARTEXFONTS}/tfm//
 
 % The $MAKETEX_MODE below means the drivers will not use a cx font when
 % the mode is ricoh.  If no mode is explicitly specified, kpse_prog_init
 % sets MAKETEX_MODE to /, so all subdirectories are searched.  See the manual.
 % The modeless part guarantees that bitmaps for PostScript fonts are found.
-PKFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/pk/{$MAKETEX_MODE,modeless}//
+PKFONTS = .:{$TEXMF/fonts,$VARTEXFONTS}/pk/{$MAKETEX_MODE,modeless}//
 
 % Similarly for the GF format, which only remains in existence because
 % Metafont outputs it (and MF isn't going to change).
-GFFONTS = .;$TEXMF/fonts/gf/$MAKETEX_MODE//
+GFFONTS = .:$TEXMF/fonts/gf/$MAKETEX_MODE//
 
 % A backup for PKFONTS and GFFONTS. Not used for anything.
-GLYPHFONTS = .;$TEXMF/fonts
+GLYPHFONTS = .:$TEXMF/fonts
 
 % A place to puth everything that doesn't fit the other font categories.
-MISCFONTS = .;$TEXMF/fonts/misc//
+MISCFONTS = .:$TEXMF/fonts/misc//
 
 % For texfonts.map and included map files used by mktexpk.
 % See ftp://ftp.tug.org/tex/fontname.tar.gz.
-TEXFONTMAPS = .;$TEXMF/fontname
+TEXFONTMAPS = .:$TEXMF/fontname
 
 % BibTeX bibliographies and style files.
-BIBINPUTS = .;$TEXMF/bibtex/{bib,}//
-BSTINPUTS = .;$TEXMF/bibtex/{bst,}//
+BIBINPUTS = .:$TEXMF/bibtex/{bib,}//
+BSTINPUTS = .:$TEXMF/bibtex/{bst,}//
 
 % MFT style files.
-MFTINPUTS = .;$TEXMF/mft//
+MFTINPUTS = .:$TEXMF/mft//
 
 % PostScript headers, prologues (.pro), encodings (.enc) and fonts.
-TEXPSHEADERS = .;$TEXMF/{dvips,pdftex,tex,fonts/type1}//
+TEXPSHEADERS = .:$TEXMF/{dvips,pdftex,tex,fonts/type1}//
 
 % PostScript Type 1 outline fonts.
-T1FONTS = .;$TEXMF/fonts/type1//
+T1FONTS = .:$TEXMF/fonts/type1//
 
 % PostScript AFM metric files.
-AFMFONTS = .;$TEXMF/fonts/afm//
+AFMFONTS = .:$TEXMF/fonts/afm//
 
 % TrueType outline fonts.
-TTFONTS = .;$TEXMF/fonts/truetype//
+TTFONTS = .:$TEXMF/fonts/truetype//
 
 % Type 42 outline fonts.
-T42FONTS = .;$TEXMF/fonts/type42//
+T42FONTS = .:$TEXMF/fonts/type42//
 
 % Dvips' config.* files (this name should not start with `TEX'!).
-TEXCONFIG = .;$TEXMF/dvips//
+TEXCONFIG = .:$TEXMF/dvips//
 
 % Makeindex style (.ist) files.
-INDEXSTYLE = .;$TEXMF/makeindex//
+INDEXSTYLE = .:$TEXMF/makeindex//
 
 % Used by DMP (ditroff-to-mpx), called by makempx -troff.
 TRFONTS = /usr/lib/font/devpost
-MPSUPPORT = .;$TEXMF/metapost/support
+MPSUPPORT = .:$TEXMF/metapost/support
 
 % For xdvi to find mime.types and .mailcap, if they do not exist in
 % $HOME.  These are single directories, not paths.
@@ -263,24 +263,24 @@
 MAILCAPLIBDIR = @prefix@/etc
 
 % TeX documentation and source files, for use with kpsewhich.
-TEXDOCS = .;$TEXMF/doc//
-TEXSOURCES = .;$TEXMF/source//
+TEXDOCS = .:$TEXMF/doc//
+TEXSOURCES = .:$TEXMF/source//
 
 % Omega-related fonts and other files.  The odd construction for OFMFONTS
 % makes it behave in the face of a definition of TFMFONTS.  Unfortunately
 % no default substitution would take place for TFMFONTS, so an explicit
 % path is retained.
-OFMFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/{ofm,tfm}//;$TFMFONTS
-OPLFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/opl//
-OVFFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/ovf//
-OVPFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/ovp//
-OTPINPUTS = .;$TEXMF/omega/otp//
-OCPINPUTS = .;$TEXMF/omega/ocp//
+OFMFONTS = .:{$TEXMF/fonts,$VARTEXFONTS}/{ofm,tfm}//:$TFMFONTS
+OPLFONTS = .:{$TEXMF/fonts,$VARTEXFONTS}/opl//
+OVFFONTS = .:{$TEXMF/fonts,$VARTEXFONTS}/ovf//
+OVPFONTS = .:{$TEXMF/fonts,$VARTEXFONTS}/ovp//
+OTPINPUTS = .:$TEXMF/omega/otp//
+OCPINPUTS = .:$TEXMF/omega/ocp//
 
 % Some additional input variables for several programs.  If you add
 % a program that uses the 'other text files' or 'other binary files'
 % search formats, you'll want to add their variables here as well.
-T4HTINPUTS   = .;$TEXMF/tex4ht//
+T4HTINPUTS   = .:$TEXMF/tex4ht//
 
 %% The mktex* scripts rely on KPSE_DOT. Do not set it in the environment.
 KPSE_DOT = .
@@ -295,7 +295,7 @@
 %
 % For security reasons, it is better not to have . part of the path.
 % 
-TEXMFCNF = $SELFAUTODIR/share/texmf/web2c;{$SELFAUTOLOC,$SELFAUTODIR,$SELFAUTOPARENT}{,{/share,}/texmf{.local,}/web2c};$TETEXDIR;@web2c@
+TEXMFCNF = $SELFAUTODIR/share/texmf/web2c:{$SELFAUTOLOC,$SELFAUTODIR,$SELFAUTOPARENT}{,{/share,}/texmf{.local,}/web2c}:$TETEXDIR:@web2c@
 
 
 
diff -ur teTeX-1.0-orig/texmf/web2c/texmf.cnf teTeX-1.0/texmf/web2c/texmf.cnf
--- teTeX-1.0-orig/texmf/web2c/texmf.cnf	Sun Jun  6 09:54:32 1999
+++ teTeX-1.0/texmf/web2c/texmf.cnf	Mon Nov 29 11:42:54 1999
@@ -33,7 +33,7 @@
 % 
 % // means to search subdirectories (recursively).
 % A leading !! means to look only in the ls-R db, never on the disk.
-% A leading/trailing/doubled ; in the paths will be expanded into the
+% A leading/trailing/doubled : in the paths will be expanded into the
 %   compile-time default. Probably not what you want.
 % 
 % You can use brace notation, for example: /usr/local/{mytex:othertex}
@@ -88,18 +88,18 @@
 %
 % Remove $VARTEXFONTS from TEXMFDBS if the VARTEXFONTS directory is below
 % one of the TEXMF directories (avoids overlapping ls-R files).
-TEXMFDBS = $TEXMF;$VARTEXFONTS
+TEXMFDBS = $TEXMF:$VARTEXFONTS
 
 % It may be convenient to define TEXMF like this:
 %   TEXMF = {$HOMETEXMF,!!$TEXMFLOCAL,!!$TEXMFMAIN,$HOME}
 % which allows users to set up entire texmf trees, and tells TeX to
 % look in places like ~/tex and ~/bibtex.  If you do this, define TEXMFDBS
 % like this:
-%   TEXMFDBS = $HOMETEXMF;$TEXMFLOCAL;$TEXMFMAIN;$VARTEXFONTS
+%   TEXMFDBS = $HOMETEXMF:$TEXMFLOCAL:$TEXMFMAIN:$VARTEXFONTS
 % or mktexlsr will generate an ls-R file for $HOME when called, which is
 % rarely desirable.  If you do this you'll want to define SYSTEXMF like
 % this:
-%   SYSTEXMF = $TEXMFLOCAL;$TEXMFMAIN
+%   SYSTEXMF = $TEXMFLOCAL:$TEXMFMAIN
 % so that fonts from a user's tree won't escape into the global trees.
 %
 % On some systems, there will be a system tree which contains all the font
@@ -123,138 +123,138 @@
 
 % Plain TeX.  Have the command tex check all directories as a last
 % resort, we may have plain-compatible stuff anywhere.
-TEXINPUTS.tex = .;$TEXMF/tex/{plain,generic,}//
+TEXINPUTS.tex = .:$TEXMF/tex/{plain,generic,}//
 
 % Other plain-based formats.
-TEXINPUTS.amstex = .;$TEXMF/tex/{amstex,plain,generic,}//
-TEXINPUTS.csplain = .;$TEXMF/tex/{csplain,plain,generic,}//
-TEXINPUTS.eplain  = .;$TEXMF/tex/{eplain,plain,generic,}//
-TEXINPUTS.ftex = .;$TEXMF/tex/{formate,plain,generic,}//
-TEXINPUTS.jadetex = .;$TEXMF/tex/{jadetex,plain,generic,}//
-TEXINPUTS.mex = .;$TEXMF/tex/{mex,plain,generic,}//
-TEXINPUTS.texinfo = .;$TEXMF/tex/{texinfo,plain,generic,}//
+TEXINPUTS.amstex = .:$TEXMF/tex/{amstex,plain,generic,}//
+TEXINPUTS.csplain = .:$TEXMF/tex/{csplain,plain,generic,}//
+TEXINPUTS.eplain  = .:$TEXMF/tex/{eplain,plain,generic,}//
+TEXINPUTS.ftex = .:$TEXMF/tex/{formate,plain,generic,}//
+TEXINPUTS.jadetex = .:$TEXMF/tex/{jadetex,plain,generic,}//
+TEXINPUTS.mex = .:$TEXMF/tex/{mex,plain,generic,}//
+TEXINPUTS.texinfo = .:$TEXMF/tex/{texinfo,plain,generic,}//
 
 % LaTeX 2e specific macros are stored in latex/, macros that can only be
 % used with 2.09 in latex209/.  In addition, we look in the directory
 % latex209, useful for macros that were written for 2.09 and do not
 % mention 2e at all, but can be used with 2e.
-TEXINPUTS.cslatex = .;$TEXMF/tex/{cslatex,csplain,latex,generic,}//
-TEXINPUTS.platex  = .;$TEXMF/tex/{platex,latex,generic,}//
-TEXINPUTS.latex = .;$TEXMF/tex/{latex,generic,}//
-TEXINPUTS.latex209 = .;$TEXMF/tex/{latex209,generic,latex,}//
+TEXINPUTS.cslatex = .:$TEXMF/tex/{cslatex,csplain,latex,generic,}//
+TEXINPUTS.platex  = .:$TEXMF/tex/{platex,latex,generic,}//
+TEXINPUTS.latex = .:$TEXMF/tex/{latex,generic,}//
+TEXINPUTS.latex209 = .:$TEXMF/tex/{latex209,generic,latex,}//
 
 % Fontinst needs to read afm files.
-TEXINPUTS.fontinst = .;$TEXMF/tex//;$TEXMF/fonts/afm//
+TEXINPUTS.fontinst = .:$TEXMF/tex//:$TEXMF/fonts/afm//
 
 % MLTeX.
-TEXINPUTS.frlatex = .;$TEXMF/{mltex,tex}/{french,latex,generic,}//
-TEXINPUTS.frtex   = .;$TEXMF/{mltex,tex}/{french,plain,generic,}//
-TEXINPUTS.mllatex = .;$TEXMF/{mltex,tex}/{latex,generic,}//
-TEXINPUTS.mltex = .;$TEXMF/{mltex,tex}/{plain,generic,}//
+TEXINPUTS.frlatex = .:$TEXMF/{mltex,tex}/{french,latex,generic,}//
+TEXINPUTS.frtex   = .:$TEXMF/{mltex,tex}/{french,plain,generic,}//
+TEXINPUTS.mllatex = .:$TEXMF/{mltex,tex}/{latex,generic,}//
+TEXINPUTS.mltex = .:$TEXMF/{mltex,tex}/{plain,generic,}//
 
 % e-TeX.  This form of the input paths is borrowed from teTeX.  A certain
 % variant of TDS is assumed here, unaffected by the build variables.
-TEXINPUTS.elatex   = .;$TEXMF/{etex,tex}/{latex,generic,}//
-TEXINPUTS.etex     = .;$TEXMF/{etex,tex}/{plain,generic,}//
+TEXINPUTS.elatex   = .:$TEXMF/{etex,tex}/{latex,generic,}//
+TEXINPUTS.etex     = .:$TEXMF/{etex,tex}/{plain,generic,}//
 
 % pdfTeX.  This form of the input paths is borrowed from teTeX.  A certain
 % variant of TDS is assumed here, unaffected by the build variables.
-TEXINPUTS.pdfcslatex = .;$TEXMF/{pdftex,tex}/{cslatex,csplain,latex,generic,}//
-TEXINPUTS.pdfcsplain = .;$TEXMF/{pdftex,tex}/{csplain,plain,generic,}//
-TEXINPUTS.pdfjadetex = .;$TEXMF/{pdftex,tex}/{jadetex,plain,generic,}//
-TEXINPUTS.pdflatex = .;$TEXMF/{pdftex,tex}/{latex,generic,}//
-TEXINPUTS.pdfmex   = .;$TEXMF/{pdftex,tex}/{mex,plain,generic,}//
-TEXINPUTS.pdftex   = .;$TEXMF/{pdftex,tex}/{plain,generic,}//
-TEXINPUTS.pdftexinfo = .;$TEXMF/{pdftex,tex}/{texinfo,plain,generic,}//
+TEXINPUTS.pdfcslatex = .:$TEXMF/{pdftex,tex}/{cslatex,csplain,latex,generic,}//
+TEXINPUTS.pdfcsplain = .:$TEXMF/{pdftex,tex}/{csplain,plain,generic,}//
+TEXINPUTS.pdfjadetex = .:$TEXMF/{pdftex,tex}/{jadetex,plain,generic,}//
+TEXINPUTS.pdflatex = .:$TEXMF/{pdftex,tex}/{latex,generic,}//
+TEXINPUTS.pdfmex   = .:$TEXMF/{pdftex,tex}/{mex,plain,generic,}//
+TEXINPUTS.pdftex   = .:$TEXMF/{pdftex,tex}/{plain,generic,}//
+TEXINPUTS.pdftexinfo = .:$TEXMF/{pdftex,tex}/{texinfo,plain,generic,}//
 
 % pdfeTeX.
-TEXINPUTS.pdfelatex = .;$TEXMF/{pdfetex,pdftex,etex,tex}/{latex,generic,}//
-TEXINPUTS.pdfetex   = .;$TEXMF/{pdfetex,pdftex,etex,tex}/{plain,generic,}//
+TEXINPUTS.pdfelatex = .:$TEXMF/{pdfetex,pdftex,etex,tex}/{latex,generic,}//
+TEXINPUTS.pdfetex   = .:$TEXMF/{pdfetex,pdftex,etex,tex}/{plain,generic,}//
 
 % Omega.
-TEXINPUTS.lambda = .;$TEXMF/{omega,tex}/{lambda,latex,generic,}//
-TEXINPUTS.omega = .;$TEXMF/{omega,tex}/{plain,generic,}//
+TEXINPUTS.lambda = .:$TEXMF/{omega,tex}/{lambda,latex,generic,}//
+TEXINPUTS.omega = .:$TEXMF/{omega,tex}/{plain,generic,}//
 
 % Context macros by Hans Hagen:
-TEXINPUTS.context = .;$TEXMF/{pdftex,etex,tex}/{context,plain,generic,}//
+TEXINPUTS.context = .:$TEXMF/{pdftex,etex,tex}/{context,plain,generic,}//
 
 % odd formats  needing their own paths
-TEXINPUTS.lamstex  = .;$TEXMF/tex/{lamstex,plain,generic,}//
-TEXINPUTS.lollipop = .;$TEXMF/tex/{lollipop,plain,generic,}//
+TEXINPUTS.lamstex  = .:$TEXMF/tex/{lamstex,plain,generic,}//
+TEXINPUTS.lollipop = .:$TEXMF/tex/{lollipop,plain,generic,}//
 
 % Earlier entries override later ones, so put this last.
-TEXINPUTS = .;$TEXMF/tex/{generic,}//
+TEXINPUTS = .:$TEXMF/tex/{generic,}//
 
 % Metafont, MetaPost inputs.
-MFINPUTS = .;$TEXMF/metafont//;{$TEXMF/fonts,$VARTEXFONTS}/source//
-MPINPUTS = .;$TEXMF/metapost//
+MFINPUTS = .:$TEXMF/metafont//:{$TEXMF/fonts,$VARTEXFONTS}/source//
+MPINPUTS = .:$TEXMF/metapost//
 
 % Dump files (fmt/base/mem) for vir{tex,mf,mp} to read (see web2c/INSTALL),
 % and string pools (.pool) for ini{tex,mf,mp}.  It is silly that we have six
 % paths and directories here (they all resolve to a single place by default),
 % but historically ...
-TEXFORMATS = .;$TEXMF/web2c
-MFBASES = .;$TEXMF/web2c
-MPMEMS = .;$TEXMF/web2c
-TEXPOOL = .;$TEXMF/web2c
-MFPOOL = .;$TEXMF/web2c
-MPPOOL = .;$TEXMF/web2c
+TEXFORMATS = .:$TEXMF/web2c
+MFBASES = .:$TEXMF/web2c
+MPMEMS = .:$TEXMF/web2c
+TEXPOOL = .:$TEXMF/web2c
+MFPOOL = .:$TEXMF/web2c
+MPPOOL = .:$TEXMF/web2c
 
 % Device-independent font metric files.
-VFFONTS = .;$TEXMF/fonts/vf//
-TFMFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/tfm//
+VFFONTS = .:$TEXMF/fonts/vf//
+TFMFONTS = .:{$TEXMF/fonts,$VARTEXFONTS}/tfm//
 
 % The $MAKETEX_MODE below means the drivers will not use a cx font when
 % the mode is ricoh.  If no mode is explicitly specified, kpse_prog_init
 % sets MAKETEX_MODE to /, so all subdirectories are searched.  See the manual.
 % The modeless part guarantees that bitmaps for PostScript fonts are found.
-PKFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/pk/{$MAKETEX_MODE,modeless}//
+PKFONTS = .:{$TEXMF/fonts,$VARTEXFONTS}/pk/{$MAKETEX_MODE,modeless}//
 
 % Similarly for the GF format, which only remains in existence because
 % Metafont outputs it (and MF isn't going to change).
-GFFONTS = .;$TEXMF/fonts/gf/$MAKETEX_MODE//
+GFFONTS = .:$TEXMF/fonts/gf/$MAKETEX_MODE//
 
 % A backup for PKFONTS and GFFONTS. Not used for anything.
-GLYPHFONTS = .;$TEXMF/fonts
+GLYPHFONTS = .:$TEXMF/fonts
 
 % A place to puth everything that doesn't fit the other font categories.
-MISCFONTS = .;$TEXMF/fonts/misc//
+MISCFONTS = .:$TEXMF/fonts/misc//
 
 % For texfonts.map and included map files used by mktexpk.
 % See ftp://ftp.tug.org/tex/fontname.tar.gz.
-TEXFONTMAPS = .;$TEXMF/fontname
+TEXFONTMAPS = .:$TEXMF/fontname
 
 % BibTeX bibliographies and style files.
-BIBINPUTS = .;$TEXMF/bibtex/{bib,}//
-BSTINPUTS = .;$TEXMF/bibtex/{bst,}//
+BIBINPUTS = .:$TEXMF/bibtex/{bib,}//
+BSTINPUTS = .:$TEXMF/bibtex/{bst,}//
 
 % MFT style files.
-MFTINPUTS = .;$TEXMF/mft//
+MFTINPUTS = .:$TEXMF/mft//
 
 % PostScript headers, prologues (.pro), encodings (.enc) and fonts.
-TEXPSHEADERS = .;$TEXMF/{dvips,pdftex,tex,fonts/type1}//
+TEXPSHEADERS = .:$TEXMF/{dvips,pdftex,tex,fonts/type1}//
 
 % PostScript Type 1 outline fonts.
-T1FONTS = .;$TEXMF/fonts/type1//
+T1FONTS = .:$TEXMF/fonts/type1//
 
 % PostScript AFM metric files.
-AFMFONTS = .;$TEXMF/fonts/afm//
+AFMFONTS = .:$TEXMF/fonts/afm//
 
 % TrueType outline fonts.
-TTFONTS = .;$TEXMF/fonts/truetype//
+TTFONTS = .:$TEXMF/fonts/truetype//
 
 % Type 42 outline fonts.
-T42FONTS = .;$TEXMF/fonts/type42//
+T42FONTS = .:$TEXMF/fonts/type42//
 
 % Dvips' config.* files (this name should not start with `TEX'!).
-TEXCONFIG = .;$TEXMF/dvips//
+TEXCONFIG = .:$TEXMF/dvips//
 
 % Makeindex style (.ist) files.
-INDEXSTYLE = .;$TEXMF/makeindex//
+INDEXSTYLE = .:$TEXMF/makeindex//
 
 % Used by DMP (ditroff-to-mpx), called by makempx -troff.
 TRFONTS = /usr/lib/font/devpost
-MPSUPPORT = .;$TEXMF/metapost/support
+MPSUPPORT = .:$TEXMF/metapost/support
 
 % For xdvi to find mime.types and .mailcap, if they do not exist in
 % $HOME.  These are single directories, not paths.
@@ -263,24 +263,24 @@
 MAILCAPLIBDIR = $SELFAUTOPARENT/etc
 
 % TeX documentation and source files, for use with kpsewhich.
-TEXDOCS = .;$TEXMF/doc//
-TEXSOURCES = .;$TEXMF/source//
+TEXDOCS = .:$TEXMF/doc//
+TEXSOURCES = .:$TEXMF/source//
 
 % Omega-related fonts and other files.  The odd construction for OFMFONTS
 % makes it behave in the face of a definition of TFMFONTS.  Unfortunately
 % no default substitution would take place for TFMFONTS, so an explicit
 % path is retained.
-OFMFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/{ofm,tfm}//;$TFMFONTS
-OPLFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/opl//
-OVFFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/ovf//
-OVPFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/ovp//
-OTPINPUTS = .;$TEXMF/omega/otp//
-OCPINPUTS = .;$TEXMF/omega/ocp//
+OFMFONTS = .:{$TEXMF/fonts,$VARTEXFONTS}/{ofm,tfm}//:$TFMFONTS
+OPLFONTS = .:{$TEXMF/fonts,$VARTEXFONTS}/opl//
+OVFFONTS = .:{$TEXMF/fonts,$VARTEXFONTS}/ovf//
+OVPFONTS = .:{$TEXMF/fonts,$VARTEXFONTS}/ovp//
+OTPINPUTS = .:$TEXMF/omega/otp//
+OCPINPUTS = .:$TEXMF/omega/ocp//
 
 % Some additional input variables for several programs.  If you add
 % a program that uses the 'other text files' or 'other binary files'
 % search formats, you'll want to add their variables here as well.
-T4HTINPUTS   = .;$TEXMF/tex4ht//
+T4HTINPUTS   = .:$TEXMF/tex4ht//
 
 %% The mktex* scripts rely on KPSE_DOT. Do not set it in the environment.
 KPSE_DOT = .
