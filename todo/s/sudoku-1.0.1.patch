diff -ur sudoku-1.0.1.orig/Makefile sudoku-1.0.1/Makefile
--- sudoku-1.0.1.orig/Makefile	2005-10-22 16:07:24.000000000 +0200
+++ sudoku-1.0.1/Makefile	2005-10-22 16:19:43.000000000 +0200
@@ -4,32 +4,22 @@
 # the public domain by Michael Kennett (July 2005), and can be
 # used freely by anybody for any purpose.
 
-OWN=-o bin
-GRP=-g operator
+OWN=-o root
+GRP=-g cwrootoperator
 
 # Minix requires compilation flags for a clean compile
 sudoku: sudoku.c
-	if [ -x /usr/bin/uname -a `/usr/bin/uname` = Minix ] ; then \
-	DEFS="-D_MINIX -D_POSIX_SOURCE" ; fi ; \
-	$(CC) -o sudoku $$DEFS sudoku.c -lcurses
+	$(CC) -o sudoku -O2 -D_POSIX_SOURCE sudoku.c -lcurses
 
 clean:
 	rm -f sudoku
 
 # Simple support for alternate systems
 install: sudoku sudoku.6
-	if [ -x /usr/bin/uname -a `/usr/bin/uname` = Minix ] ; then \
-	install -s -S 8kw $(OWN) $(GRP) -m 755 sudoku /usr/bin/sudoku ; \
-	else \
-	install -s $(OWN) $(GRP) -m 755 sudoku /usr/bin/sudoku ; \
-	fi
+	install $(OWN) $(GRP) -m 755 sudoku /usr/games/sudoku
+	strip /usr/games/sudoku
 	install -d $(OWN) $(GRP) -m 755 /usr/lib/sudoku
 	install $(OWN) $(GRP) -m 644 template /usr/lib/sudoku/template
-	if [ -d /usr/man/man6 ] ; then \
-	install $(OWN) $(GRP) -m 644 sudoku.6 /usr/man/man6/sudoku.6 ; \
-	elif [ -d /usr/share/man/man6 ] ; then \
-	install $(OWN) $(GRP) -m 644 sudoku.6 /usr/share/man/man6/sudoku.6 ; \
-	else \
-	echo Warning: Manual page not installed ; \
-	fi
+	install $(OWN) $(GRP) -m 644 sudoku.6 /usr/share/man/man6/sudoku.6
+	gzip /usr/share/man/man6/sudoku.6
 
diff -ur sudoku-1.0.1.orig/sudoku.6 sudoku-1.0.1/sudoku.6
--- sudoku-1.0.1.orig/sudoku.6	2005-10-22 16:07:24.000000000 +0200
+++ sudoku-1.0.1/sudoku.6	2005-10-22 16:08:19.000000000 +0200
@@ -56,7 +56,7 @@
 
 In contrast, it is not possible to uniquely determine the value of `\fIx\fR'
 with the given information - it could take either the value 2 or 5.
-.bp
+
 The board now contains the squares:
 
   5 . 8 | 6 7 1 | . . .    It is now possible to determine the values
diff -ur sudoku-1.0.1.orig/sudoku.c sudoku-1.0.1/sudoku.c
--- sudoku-1.0.1.orig/sudoku.c	2005-10-22 16:07:24.000000000 +0200
+++ sudoku-1.0.1/sudoku.c	2006-02-03 23:24:18.000000000 +0100
@@ -331,26 +331,32 @@
 void
 html( FILE * f, const char * title )
 {
-    int i;
+    int i,x,y,z;
 
     fprintf( f, "<html><head>" );
     if( 0 != title )
         fprintf( f, "<title>%s</title>", title );
     fprintf( f,
-"</head><body>"
-"<table align=\"center\" border=\"1\" cellpadding=\"3\" cellspacing=\"1\" rules=\"all\">\n"
+"</head><body><h2 align=\"center\">%s</h2>"
+"<table width=\"50%\" align=\"center\" border=\"1\" cellpadding=\"3\" cellspacing=\"1\" rules=\"all\">\n", title
 );
     for( i = 0 ; i < 81 ; ++i )
     {
-        if( 0 == i % 9 )
+    x = i % 9;
+    y = i / 9;
+    z = x/3 + y/3*3; 
+        if( 0 == x )
             fprintf( f, "<tr>" );
-        fprintf( f, "<td>" );
+	if( 0 == z % 2 )
+	    fprintf( f, "<td align=\"center\" bgcolor=\"#FFFF99\">" );
+        else
+            fprintf( f, "<td align=\"center\">" );
         if( IS_EMPTY( i ) )
             fprintf( f, "&nbsp;" );
         else
             fprintf( f, "%d", GET_DIGIT( board[ i ] ) );
         fprintf( f, "</td>" );
-        if( 8 == i % 9 )
+        if( 8 == x )
             fprintf( f, "</tr>\n" );
     }
     fprintf( f,
@@ -1837,9 +1843,9 @@
 
     /* Read character input (raw processing mode) */
     i = strlen( userfile );
-    while( '\r' != ( ch = getkey( ) ) )
+    while( '\n' != ( ch = getkey( ) ) )
     {
-        if( 0x08 == ch || VKEY_LEFT == ch ) /* destructive backspace */
+        if( 0x7f == ch || 0x08 == ch || VKEY_LEFT == ch ) /* destructive backspace */
         {
             if( 0 < i )
             {
