diff -rupN bash-4.4.orig/builtins/read.def bash-4.4/builtins/read.def
--- bash-4.4.orig/builtins/read.def	2017-10-24 01:17:54.403886648 +0200
+++ bash-4.4/builtins/read.def	2017-10-24 01:21:50.555881509 +0200
@@ -386,7 +386,7 @@ read_builtin (list)
 
   input_is_tty = isatty (fd);
   if (input_is_tty == 0)
-#ifndef __CYGWIN__
+#if !defined(__CYGWIN__) && !defined(__MINT__)
     input_is_pipe = (lseek (fd, 0L, SEEK_CUR) < 0) && (errno == ESPIPE);
 #else
     input_is_pipe = 1;
diff -rupN bash-4.4.orig/execute_cmd.c bash-4.4/execute_cmd.c
--- bash-4.4.orig/execute_cmd.c	2016-08-26 13:10:08.000000000 +0200
+++ bash-4.4/execute_cmd.c	2017-10-24 01:18:54.223885346 +0200
@@ -4554,6 +4554,12 @@ execute_builtin (builtin, words, flags,
       discard_unwind_frame ("eval_builtin");
     }
 
+#ifdef __MINT__
+  /* Clear any ouput errors from redirected builtins.  */
+  clearerr (stdout);
+  clearerr (stderr);
+#endif
+
   return (result);
 }
 
diff -rupN bash-4.4.orig/jobs.c bash-4.4/jobs.c
--- bash-4.4.orig/jobs.c	2017-10-24 01:17:54.419886647 +0200
+++ bash-4.4/jobs.c	2017-10-24 01:18:54.223885346 +0200
@@ -352,7 +352,7 @@ static int jobs_list_frozen;
 
 static char retcode_name_buffer[64];
 
-#if !defined (_POSIX_VERSION)
+#if !defined (_POSIX_VERSION) && !defined (__MINT__)
 
 /* These are definitions to map POSIX 1003.1 functions onto existing BSD
    library functions and system calls. */
@@ -2751,6 +2751,9 @@ wait_for (pid)
 	  sigemptyset (&suspend_set);
 	  sigsuspend (&suspend_set);
 #else /* !WAITPID_BROKEN */
+#ifdef __MINT__
+# define MUST_UNBLOCK_CHLD
+#endif
 #  if defined (MUST_UNBLOCK_CHLD)
 	  struct sigaction act, oact;
 	  sigset_t nullset, chldset;
diff -rupN bash-4.4.orig/lib/sh/oslib.c bash-4.4/lib/sh/oslib.c
--- bash-4.4.orig/lib/sh/oslib.c	2013-10-14 15:12:57.000000000 +0200
+++ bash-4.4/lib/sh/oslib.c	2017-10-24 01:19:51.763884094 +0200
@@ -233,6 +233,8 @@ killpg (pgrp, sig)
 }
 #endif /* !HAVE_KILLPG */
 
+#ifndef __MINT__
+/* We really have a bogus mkfifo, want to hide it tho'.  */
 #if !defined (HAVE_MKFIFO) && defined (PROCESS_SUBSTITUTION)
 int
 mkfifo (path, mode)
@@ -246,6 +248,7 @@ mkfifo (path, mode)
 #endif /* !S_IFIFO */
 }
 #endif /* !HAVE_MKFIFO && PROCESS_SUBSTITUTION */
+#endif /* not __MINT__ */
 
 #define DEFAULT_MAXGROUPS 64
 
--- bash-4.4/builtins/gen-helpfiles.c.orig	2017-10-24 01:45:58.467850001 +0200
+++ bash-4.4/builtins/gen-helpfiles.c	2017-10-24 01:46:05.795849842 +0200
@@ -26,11 +26,12 @@
 #  include <config.h>
 #else	/* CROSS_COMPILING */
 /* A conservative set of defines based on POSIX/SUS3/XPG6 */
-#  define HAVE_UNISTD_H
-#  define HAVE_STRING_H
-#  define HAVE_STDLIB_H
+#  define HAVE_UNISTD_H 1
+#  define HAVE_STRING_H 1
+#  define HAVE_STDLIB_H 1
 
-#  define HAVE_RENAME
+#  define HAVE_RENAME 1
+#  include <stdint.h>
 #endif /* CROSS_COMPILING */
 
 #if defined (HAVE_UNISTD_H)
--- bash-4.4/nojobs.c.orig	2020-08-24 22:35:23.706201438 +0200
+++ bash-4.4/nojobs.c	2020-08-24 22:35:44.186202046 +0200
@@ -76,7 +76,6 @@
 extern int interactive, interactive_shell, login_shell;
 extern int subshell_environment;
 extern int last_command_exit_value, last_command_exit_signal;
-extern int interrupt_immediately;
 extern sh_builtin_func_t *this_shell_builtin;
 #if defined (HAVE_POSIX_SIGNALS)
 extern sigset_t top_level_mask;
--- bash-4.4/parse.y.orig	2020-08-24 22:33:48.730198616 +0200
+++ bash-4.4/parse.y	2020-08-24 22:34:25.674199713 +0200
@@ -206,7 +206,7 @@
 static char *error_token_from_token __P((int));
 static char *error_token_from_text __P((void));
 static void print_offending_line __P((void));
-static void report_syntax_error __P((char *));
+static void report_syntax_error __P((const char *));
 
 static void handle_eof_input_unit __P((void));
 static void prompt_again __P((void));
@@ -5861,7 +5861,7 @@
 yyerror (msg)
      const char *msg;
 {
-  report_syntax_error ((char *)NULL);
+  report_syntax_error (NULL);
   reset_parser ();
   return (0);
 }
@@ -5968,8 +5968,7 @@
    then place it in MESSAGE, otherwise pass NULL and this will figure
    out an appropriate message for you. */
 static void
-report_syntax_error (message)
-     char *message;
+report_syntax_error (const char *message)
 {
   char *msg, *p;
 
