---
 Makefile.in        |    2 +-
 config-top.h       |   16 ++++++++++------
 doc/Makefile.in    |    2 +-
 doc/bash.1         |    7 +++++--
 general.h          |    3 +++
 parse.y            |    2 +-
 shell.c            |    4 +++-
 support/bashbug.sh |    2 +-
 support/man2html.c |    1 +
 support/rlvers.sh  |    6 +++---
 support/shobj-conf |    5 +++--
 tests/glob.tests   |    4 ++--
 tests/run-intl     |    2 +-
 tests/run-read     |    2 +-
 14 files changed, 36 insertions(+), 22 deletions(-)

--- a/Makefile.in
+++ b/Makefile.in	2017-09-25 09:08:48.341515472 +0000
@@ -447,7 +447,7 @@ SOURCES	 = $(CSOURCES) $(HSOURCES) $(BUI
 # headers in top-level source directory that get installed by install-headers
 INSTALLED_HEADERS = shell.h bashjmp.h command.h syntax.h general.h error.h \
 		    variables.h array.h assoc.h arrayfunc.h quit.h dispose_cmd.h \
-		    make_cmd.h subst.h sig.h externs.h builtins.h \
+		    make_cmd.h subst.h sig.h externs.h builtins.h bashline.h \
 		    bashtypes.h xmalloc.h config-top.h config-bot.h \
 		    bashintl.h bashansi.h bashjmp.h alias.h hashlib.h \
 		    conftypes.h unwind_prot.h jobs.h siglist.h
--- a/config-top.h
+++ b/config-top.h	2017-09-25 09:08:06.210296290 +0000
@@ -60,17 +60,21 @@
    due to EPIPE. */
 /* #define DONT_REPORT_BROKEN_PIPE_WRITE_ERRORS */
 
+#ifndef _PATH_DEFPATH
+# include <paths.h>
+#endif
+
 /* The default value of the PATH variable. */
 #ifndef DEFAULT_PATH_VALUE
 #define DEFAULT_PATH_VALUE \
-  "/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:."
+  "/usr/local/bin:" _PATH_DEFPATH ":."
 #endif
 
 /* The value for PATH when invoking `command -p'.  This is only used when
    the Posix.2 confstr () function, or CS_PATH define are not present. */
 #ifndef STANDARD_UTILS_PATH
 #define STANDARD_UTILS_PATH \
-  "/bin:/usr/bin:/sbin:/usr/sbin:/etc:/usr/etc"
+  _PATH_STDPATH
 #endif
 
 /* Default primary and secondary prompt strings. */
@@ -87,20 +91,20 @@
 #define DEFAULT_BASHRC "~/.bashrc"
 
 /* System-wide .bashrc file for interactive shells. */
-/* #define SYS_BASHRC "/etc/bash.bashrc" */
+#define SYS_BASHRC "/etc/bash.bashrc"
 
 /* System-wide .bash_logout for login shells. */
-/* #define SYS_BASH_LOGOUT "/etc/bash.bash_logout" */
+#define SYS_BASH_LOGOUT "/etc/bash.bash_logout"
 
 /* Define this to make non-interactive shells begun with argv[0][0] == '-'
    run the startup files when not in posix mode. */
-/* #define NON_INTERACTIVE_LOGIN_SHELLS */
+#define NON_INTERACTIVE_LOGIN_SHELLS
 
 /* Define this if you want bash to try to check whether it's being run by
    sshd and source the .bashrc if so (like the rshd behavior).  This checks
    for the presence of SSH_CLIENT or SSH2_CLIENT in the initial environment,
    which can be fooled under certain not-uncommon circumstances. */
-/* #define SSH_SOURCE_BASHRC */
+#define SSH_SOURCE_BASHRC
 
 /* Define if you want the case-capitalizing operators (~[~]) and the
    `capcase' variable attribute (declare -c). */
--- a/doc/Makefile.in
+++ b/doc/Makefile.in	2017-09-25 09:08:06.210296290 +0000
@@ -154,7 +154,7 @@ BASHREF_FILES = $(srcdir)/bashref.texi $
 #	$(RM) $@
 #	-${TEXI2PDF} $<
 
-all: ps info dvi text html $(MAN2HTML)
+all: info html $(MAN2HTML)
 nodvi: ps info text html
 everything: all pdf
 
--- a/doc/bash.1
+++ b/doc/bash.1	2017-09-25 09:08:06.214296216 +0000
@@ -5238,8 +5238,8 @@ file (the \fIinputrc\fP file).
 The name of this file is taken from the value of the
 .SM
 .B INPUTRC
-variable.  If that variable is unset, the default is
-.IR ~/.inputrc .
+environment variable. If that variable is unset, readline will read both
+.IR /etc/inputrc " and " ~/.inputrc .
 When a program which uses the readline library starts up, the
 initialization file is read, and the key bindings and variables
 are set.
@@ -10561,6 +10561,9 @@ The individual login shell cleanup file,
 .TP
 .FN ~/.inputrc
 Individual \fIreadline\fP initialization file
+.TP
+.FN /etc/inputrc
+System \fBreadline\fP initialization file
 .PD
 .SH AUTHORS
 Brian Fox, Free Software Foundation
--- a/general.h
+++ b/general.h	2017-09-25 09:08:06.214296216 +0000
@@ -21,10 +21,13 @@
 #if !defined (_GENERAL_H_)
 #define _GENERAL_H_
 
+#include <time.h>
+#include <sys/types.h>
 #include "stdc.h"
 
 #include "bashtypes.h"
 #include "chartypes.h"
+#include "bashline.h"
 
 #if defined (HAVE_SYS_RESOURCE_H) && defined (RLIMTYPE)
 #  if defined (HAVE_SYS_TIME_H)
--- a/parse.y
+++ b/parse.y	2017-09-25 09:08:06.214296216 +0000
@@ -1426,7 +1426,7 @@ input_file_descriptor ()
 
 #if defined (READLINE)
 char *current_readline_prompt = (char *)NULL;
-char *current_readline_line = (char *)NULL;
+unsigned char *current_readline_line = (unsigned char *)NULL;
 int current_readline_line_index = 0;
 
 static int
--- a/shell.c
+++ b/shell.c	2017-09-25 09:08:06.214296216 +0000
@@ -44,6 +44,7 @@
 
 #if defined (HAVE_UNISTD_H)
 #  include <unistd.h>
+#  include <grp.h>
 #endif
 
 #include "bashintl.h"
@@ -500,7 +501,7 @@ main (argc, argv, env)
   if (dump_translatable_strings)
     read_but_dont_execute = 1;
 
-  if (running_setuid && privileged_mode == 0)
+  if (running_setuid && privileged_mode == 0 /* && act_like_sh == 0 */)
     disable_priv_mode ();
 
   /* Need to get the argument to a -c option processed in the
@@ -1276,6 +1277,7 @@ disable_priv_mode ()
 {
   int e;
 
+  setgroups(0, NULL);
   if (setuid (current_user.uid) < 0)
     {
       e = errno;
--- a/support/bashbug.sh
+++ b/support/bashbug.sh	2017-09-25 09:08:06.214296216 +0000
@@ -1,4 +1,4 @@
-#!/bin/sh -
+#!/bin/bash -
 #
 # bashbug - create a bug report and mail it to the bug address
 #
--- a/support/man2html.c
+++ b/support/man2html.c	2017-09-25 09:08:06.214296216 +0000
@@ -78,6 +78,7 @@
 #include <time.h>
 #include <sys/time.h>
 #include <errno.h>
+#include <unistd.h>
 
 #define NULL_TERMINATED(n) ((n) + 1)
 
--- a/support/rlvers.sh
+++ b/support/rlvers.sh	2017-09-25 09:08:06.214296216 +0000
@@ -27,10 +27,10 @@ TDIR=$TMPDIR/rlvers
 
 # defaults
 CC=cc
-RL_LIBDIR=/usr/local/lib
-RL_INCDIR=/usr/local/include
+RL_LIBDIR=/lib
+RL_INCDIR=/usr/include
 
-TERMCAP_LIB="-ltermcap"
+echo 'int main () { return 0; }' | gcc -ltinfo -o /dev/null -xc - > /dev/null 2>&1 && TERMCAP_LIB="-ltinfo" || TERMCAP_LIB="-lncurses"
 
 # cannot rely on the presence of getopts
 while [ $# -gt 0 ]; do
--- a/support/shobj-conf
+++ b/support/shobj-conf	2017-09-25 09:08:06.214296216 +0000
@@ -126,10 +126,11 @@ sunos5*|solaris2*)
 linux*-*|gnu*-*|k*bsd*-gnu-*|freebsd*-gentoo)
 	SHOBJ_CFLAGS=-fPIC
 	SHOBJ_LD='${CC}'
-	SHOBJ_LDFLAGS='-shared -Wl,-soname,$@'
+	SHOBJ_LDFLAGS='-shared'
 
-	SHLIB_XLDFLAGS='-Wl,-rpath,$(libdir) -Wl,-soname,`basename $@ $(SHLIB_MINOR)`'
+	SHLIB_XLDFLAGS='-Wl,-rpath-link,$(libdir) -Wl,-soname,`basename $@ $(SHLIB_MINOR)`'
 	SHLIB_LIBVERSION='$(SHLIB_LIBSUFF).$(SHLIB_MAJOR)$(SHLIB_MINOR)'
+	echo 'int main () { return 0; }' | gcc -ltinfo -o /dev/null -xc - > /dev/null 2>&1 && SHLIB_LIBS=-ltinfo || SHLIB_LIBS=-lncurses
 	;;
 
 freebsd2*)
--- a/tests/glob.tests
+++ b/tests/glob.tests	2017-09-25 09:08:06.214296216 +0000
@@ -12,8 +12,8 @@ ${THIS_SH} ./glob1.sub
 
 MYDIR=$PWD	# save where we are
 
-TESTDIR=/tmp/glob-test
-mkdir $TESTDIR
+TESTDIR=${TMPDIR:=/tmp}/glob-test
+mkdir -p $TESTDIR
 builtin cd $TESTDIR || { echo $0: cannot cd to $TESTDIR >&2 ; exit 1; }
 rm -rf *
 
--- a/tests/run-intl
+++ b/tests/run-intl	2017-09-25 09:08:06.214296216 +0000
@@ -5,4 +5,4 @@ echo "warning: some of these tests will
 echo "warning: locales installed on your system." >&2
 
 ${THIS_SH} ./intl.tests > ${BASH_TSTOUT}
-diff $AFLAG ${BASH_TSTOUT} intl.right && rm -f ${BASH_TSTOUT}
+diff -w $AFLAG ${BASH_TSTOUT} intl.right && rm -f ${BASH_TSTOUT}
--- a/tests/run-read
+++ b/tests/run-read	2017-09-25 09:08:06.214296216 +0000
@@ -1,4 +1,4 @@
 echo "warning: please do not consider output differing only in the amount of" >&2
 echo "warning: white space to be an error." >&2
 ${THIS_SH} ./read.tests > ${BASH_TSTOUT} 2>&1
-diff ${BASH_TSTOUT} read.right && rm -f ${BASH_TSTOUT}
+diff -w ${BASH_TSTOUT} read.right && rm -f ${BASH_TSTOUT}
