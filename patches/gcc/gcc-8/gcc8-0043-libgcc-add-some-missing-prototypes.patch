From 73c2081861c468a1a49cff4648e64bda13834db2 Mon Sep 17 00:00:00 2001
From: Thorsten Otto <admin@tho-otto.de>
Date: Sat, 2 Mar 2019 15:54:19 +0100
Subject: [PATCH] libgcc: add some missing prototypes

---
 gcc/config/m68k/m68k.h           |  4 ++-
 libgcc/config/m68k/fpgnulib.c    | 47 ++++++++++++++++++++++++++------
 libgcc/config/m68k/mint-atomic.c |  4 +++
 3 files changed, 45 insertions(+), 10 deletions(-)

diff --git a/gcc/config/m68k/m68k.h b/gcc/config/m68k/m68k.h
index 955e7da3002..b906d27d3cd 100644
--- a/gcc/config/m68k/m68k.h
+++ b/gcc/config/m68k/m68k.h
@@ -546,9 +546,10 @@ extern enum reg_class regno_reg_class[];
    The function name __transfer_from_trampoline is not actually used.
    The function definition just permits use of "asm with operands"
    (though the operand list is empty).  */
+void __transfer_from_trampoline (void);
 #define TRANSFER_FROM_TRAMPOLINE				\
 void								\
-__transfer_from_trampoline ()					\
+__transfer_from_trampoline (void)					\
 {								\
   register char *a0 asm (M68K_STATIC_CHAIN_REG_NAME);		\
   asm (GLOBAL_ASM_OP "___trampoline");				\
@@ -557,6 +558,7 @@ __transfer_from_trampoline ()					\
   asm volatile ("move%.l %1,%0" : "=a" (a0) : "m" (a0[18]));	\
   asm ("rts":);							\
 }
+
 
 /* There are two registers that can always be eliminated on the m68k.
    The frame pointer and the arg pointer can be replaced by either the
diff --git a/libgcc/config/m68k/fpgnulib.c b/libgcc/config/m68k/fpgnulib.c
index 2e17f32fb60..5e12d736ba9 100644
--- a/libgcc/config/m68k/fpgnulib.c
+++ b/libgcc/config/m68k/fpgnulib.c
@@ -102,6 +102,44 @@ union long_double_long
       unsigned long lower;
     } l;
 };
+
+/* Prototypes for functions defined here in case we use them.  */
+int __unordsf2(float a, float b);
+int __unorddf2(double a, double b);
+double __floatunsidf (unsigned long a1);
+double __floatsidf (long a1);
+float __floatunsisf (unsigned long l);
+float __floatsisf (long l);
+double __extendsfdf2 (float a1);
+float __truncdfsf2 (double a1);
+long __fixdfsi (double a1);
+long __fixsfsi (float a1);
+long __cmpdf2 (double x1, double x2);
+
+#if defined(EXTFLOAT) && !defined (__mcoldfire__)
+int __unordxf2(long double a, long double b);
+long double __extenddfxf2 (double d);
+double __truncxfdf2 (long double ld);
+long double __extendsfxf2 (float f);
+float __truncxfsf2 (long double ld);
+long double __floatsixf (long l);
+long double __floatunsixf (unsigned long l);
+long __fixxfsi (long double ld);
+long double __addxf3 (long double x1, long double x2);
+long double __subxf3 (long double x1, long double x2);
+long double __mulxf3 (long double x1, long double x2);
+long double __divxf3 (long double x1, long double x2);
+long double __negxf2 (long double x1);
+long __cmpxf2 (long double x1, long double x2);
+long __eqxf2 (long double x1, long double x2);
+long __nexf2 (long double x1, long double x2);
+long __ltxf2 (long double x1, long double x2);
+long __lexf2 (long double x1, long double x2);
+long __gtxf2 (long double x1, long double x2);
+long __gexf2 (long double x1, long double x2);
+
+#endif
+
 
 #ifndef EXTFLOAT
 
@@ -387,15 +425,6 @@ __fixsfsi (float a1)
 
    We assume all numbers are normalized, don't do any rounding, etc.  */
 
-/* Prototypes for the above in case we use them.  */
-double __floatunsidf (unsigned long);
-double __floatsidf (long);
-float __floatsisf (long);
-double __extendsfdf2 (float);
-float __truncdfsf2 (double);
-long __fixdfsi (double);
-long __fixsfsi (float);
-
 int
 __unordxf2(long double a, long double b)
 {
diff --git a/libgcc/config/m68k/mint-atomic.c b/libgcc/config/m68k/mint-atomic.c
index 1f50e91da21..45a8411a604 100644
--- a/libgcc/config/m68k/mint-atomic.c
+++ b/libgcc/config/m68k/mint-atomic.c
@@ -66,7 +66,11 @@ __kernel_cmpxchg (uint32_t *mem, uint32_t oldval, uint32_t newval)
 #endif
 }
 
+#ifdef __ELF__
 #define HIDDEN __attribute__ ((visibility ("hidden")))
+#else
+#define HIDDEN
+#endif
 
 /* Big endian masks  */
 #define INVERT_MASK_1 24
-- 
2.24.0

