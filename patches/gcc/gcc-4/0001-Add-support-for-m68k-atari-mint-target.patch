From 0eca7b4bdc27f99f6c039255d5ebbe95a0ef7407 Mon Sep 17 00:00:00 2001
From: Thorsten Otto <admin@tho-otto.de>
Date: Sat, 6 May 2017 05:47:38 +0200
Subject: [PATCH] Add support for m68k-atari-mint target

---
 boehm-gc/configure                            |   6 +
 config-ml.in                                  |  17 ++
 config.guess                                  |  12 +-
 configure                                     |   6 +
 configure.ac                                  |   6 +
 gcc/config.gcc                                |   9 +
 gcc/config/m68k/lb1sf68.asm                   |   4 +
 gcc/config/m68k/m68k.h                        |   5 +-
 gcc/config/m68k/math-68881.h                  |  75 ++++----
 gcc/config/m68k/mint.h                        | 176 ++++++++++++++++++
 gcc/config/m68k/t-mint                        |  41 ++++
 gcc/configure                                 |   4 +
 gcc/df-problems.c                             |  11 +-
 libdecnumber/decNumberLocal.h                 |   2 +-
 libffi/configure                              |   6 +
 libgcc/config.host                            |   2 +
 libgfortran/configure                         |   6 +
 libgomp/configure                             |   6 +
 libiberty/configure                           |   1 +
 libiberty/configure.ac                        |   1 +
 libiberty/hex.c                               |   2 +-
 libiberty/safe-ctype.c                        |   2 +-
 libjava/classpath/configure                   |   6 +
 libjava/configure                             |   6 +
 libjava/libltdl/configure                     |   6 +
 libmudflap/configure                          |   6 +
 libmudflap/mf-hooks2.c                        |   4 +
 libmudflap/mf-runtime.h                       | 136 ++++++++++++++
 libobjc/configure                             |   6 +
 libssp/configure                              |   6 +
 libssp/ssp.c                                  |  10 +
 libstdc++-v3/config/os/mint/ctype_base.h      |  67 +++++++
 libstdc++-v3/config/os/mint/ctype_inline.h    |  75 ++++++++
 libstdc++-v3/config/os/mint/ctype_noninline.h |  92 +++++++++
 libstdc++-v3/config/os/mint/os_defines.h      |  36 ++++
 libstdc++-v3/configure                        |   8 +-
 libstdc++-v3/configure.host                   |   4 +
 libstdc++-v3/crossconfig.m4                   |   2 +-
 libtool.m4                                    |   6 +
 zlib/configure                                |   6 +
 40 files changed, 836 insertions(+), 46 deletions(-)
 create mode 100644 gcc/config/m68k/mint.h
 create mode 100644 gcc/config/m68k/t-mint
 create mode 100644 libstdc++-v3/config/os/mint/ctype_base.h
 create mode 100644 libstdc++-v3/config/os/mint/ctype_inline.h
 create mode 100644 libstdc++-v3/config/os/mint/ctype_noninline.h
 create mode 100644 libstdc++-v3/config/os/mint/os_defines.h

diff --git a/boehm-gc/configure b/boehm-gc/configure
index 019054da22a..92996f9dc49 100755
--- a/boehm-gc/configure
+++ b/boehm-gc/configure
@@ -5655,6 +5655,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
diff --git a/config-ml.in b/config-ml.in
index 2dd0d5181f2..59a96b07afb 100644
--- a/config-ml.in
+++ b/config-ml.in
@@ -351,6 +351,23 @@ m68*-*-*)
 	    esac
 	  done
 	fi
+	case "${host}" in
+	  *-*-mint*)
+	    case "${srcdir}" in
+	      */libgcc ) : ;;
+	      *)
+	        old_multidirs="${multidirs}"
+	        multidirs=""
+	        for x in ${old_multidirs}; do
+		  case "$x" in
+		    *mshort ) : ;;
+		    *) multidirs="${multidirs} ${x}" ;;
+		  esac
+		done
+		;;
+	    esac
+	    ;;
+	esac
 	;;
 mips*-*-*)
 	if [ x$enable_single_float = xno ]
diff --git a/config.guess b/config.guess
index 6eeea023eb9..4e19ae06ba5 100755
--- a/config.guess
+++ b/config.guess
@@ -395,22 +395,22 @@ case "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" in
     # MiNT.  But MiNT is downward compatible to TOS, so this should
     # be no problem.
     atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)
-        echo m68k-atari-mint${UNAME_RELEASE}
+        echo m68k-atari-mint
 	exit ;;
     atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)
-	echo m68k-atari-mint${UNAME_RELEASE}
+	echo m68k-atari-mint
         exit ;;
     *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)
-        echo m68k-atari-mint${UNAME_RELEASE}
+        echo m68k-atari-mint
 	exit ;;
     milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)
-        echo m68k-milan-mint${UNAME_RELEASE}
+        echo m68k-milan-mint
         exit ;;
     hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)
-        echo m68k-hades-mint${UNAME_RELEASE}
+        echo m68k-hades-mint
         exit ;;
     *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)
-        echo m68k-unknown-mint${UNAME_RELEASE}
+        echo m68k-unknown-mint
         exit ;;
     m68k:machten:*:*)
 	echo m68k-apple-machten${UNAME_RELEASE}
diff --git a/configure b/configure
index 6be5e9d2b60..40e6b530976 100755
--- a/configure
+++ b/configure
@@ -3077,6 +3077,9 @@ if test x$enable_libmudflap = x ; then
     *-*-freebsd*)
         # Enable libmudflap by default in FreeBSD.
 	;;
+    *-*-mint*)
+        # Enable libmudflap by default in MiNT.
+	;;
     *)
         # Disable it by default everywhere else.
 	noconfigdirs="$noconfigdirs target-libmudflap"
@@ -3449,6 +3452,9 @@ case "${target}" in
   m68k-*-coff*)
     noconfigdirs="$noconfigdirs ${libgcj}"
     ;;
+  m68k-*-mint*)
+    noconfigdirs="$noconfigdirs target-libiberty ${libgcj}"
+    ;;
   m68*-*-* | fido-*-*)
     libgloss_dir=m68k
     ;;
diff --git a/configure.ac b/configure.ac
index ba6d84da43b..41a4c614856 100644
--- a/configure.ac
+++ b/configure.ac
@@ -523,6 +523,9 @@ if test x$enable_libmudflap = x ; then
     *-*-freebsd*)
         # Enable libmudflap by default in FreeBSD.
 	;;
+    *-*-mint*)
+        # Enable libmudflap by default in MiNT.
+	;;
     *)
         # Disable it by default everywhere else.
 	noconfigdirs="$noconfigdirs target-libmudflap"
@@ -895,6 +898,9 @@ case "${target}" in
   m68k-*-coff*)
     noconfigdirs="$noconfigdirs ${libgcj}"
     ;;
+  m68k-*-mint*)
+    noconfigdirs="$noconfigdirs target-libiberty ${libgcj}"
+    ;;
   m68*-*-* | fido-*-*)
     libgloss_dir=m68k
     ;;
diff --git a/gcc/config.gcc b/gcc/config.gcc
index 6dc2427bc7c..6df36803d99 100644
--- a/gcc/config.gcc
+++ b/gcc/config.gcc
@@ -1809,6 +1809,15 @@ m68k-*-linux*)		# Motorola m68k's running GNU/Linux
 	    tmake_file="$tmake_file m68k/t-slibgcc-elf-ver"
 	fi
 	;;
+m68k-*-mint*)
+	default_m68k_cpu=68000
+	default_cf_cpu=5475
+	tm_file="${tm_file} m68k/mint.h"
+	tm_defines="${tm_defines} MOTOROLA=1"
+	tmake_file="m68k/t-floatlib m68k/t-mint"
+	gas=yes
+	gnu_ld=yes
+	;;
 m68k-*-rtems*)
 	default_m68k_cpu=68020
 	default_cf_cpu=5206
diff --git a/gcc/config/m68k/lb1sf68.asm b/gcc/config/m68k/lb1sf68.asm
index 0339a092c4f..654f42d5d6f 100644
--- a/gcc/config/m68k/lb1sf68.asm
+++ b/gcc/config/m68k/lb1sf68.asm
@@ -666,7 +666,9 @@ ROUND_TO_MINUS    = 3 | round result towards minus infinity
 	.globl SYM (__negdf2)
 	.globl SYM (__cmpdf2)
 	.globl SYM (__cmpdf2_internal)
+#ifdef __ELF__
 	.hidden SYM (__cmpdf2_internal)
+#endif
 
 	.text
 	.even
@@ -2581,7 +2583,9 @@ ROUND_TO_MINUS    = 3 | round result towards minus infinity
 	.globl SYM (__negsf2)
 	.globl SYM (__cmpsf2)
 	.globl SYM (__cmpsf2_internal)
+#ifdef __ELF__
 	.hidden SYM (__cmpsf2_internal)
+#endif
 
 | These are common routines to return and signal exceptions.	
 
diff --git a/gcc/config/m68k/m68k.h b/gcc/config/m68k/m68k.h
index 71b7c4f273f..441836b8b22 100644
--- a/gcc/config/m68k/m68k.h
+++ b/gcc/config/m68k/m68k.h
@@ -138,7 +138,10 @@ along with GCC; see the file COPYING3.  If not see
 	}								\
 									\
       if (TARGET_68881)							\
-	builtin_define ("__HAVE_68881__");				\
+	{								\
+	  builtin_define ("__HAVE_68881__");				\
+	  builtin_define ("__M68881__"); /* Non-standard */		\
+	}								\
 									\
       if (TARGET_COLDFIRE)						\
 	{								\
diff --git a/gcc/config/m68k/math-68881.h b/gcc/config/m68k/math-68881.h
index 6d9f8b2d4a1..9fad2950508 100644
--- a/gcc/config/m68k/math-68881.h
+++ b/gcc/config/m68k/math-68881.h
@@ -44,6 +44,16 @@
 
 #include <errno.h>
 
+/* GCC 4.3 and above with -std=c99 or -std=gnu99 implements ISO C99
+   inline semantics, unless -fgnu89-inline is used.  */
+#ifdef __cplusplus
+# define __MATH_68881_INLINE inline
+#elif defined __GNUC_STDC_INLINE__
+# define __MATH_68881_INLINE extern __inline __attribute__ ((__gnu_inline__))
+#else
+# define __MATH_68881_INLINE extern __inline
+#endif
+
 #undef HUGE_VAL
 #ifdef __sun__
 /* The Sun assembler fails to handle the hex constant in the usual defn.  */
@@ -64,7 +74,7 @@
 })
 #endif
 
-__inline extern double
+__MATH_68881_INLINE double
 sin (double x)
 {
   double value;
@@ -75,7 +85,7 @@ sin (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 cos (double x)
 {
   double value;
@@ -86,7 +96,7 @@ cos (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 tan (double x)
 {
   double value;
@@ -97,7 +107,7 @@ tan (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 asin (double x)
 {
   double value;
@@ -108,7 +118,7 @@ asin (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 acos (double x)
 {
   double value;
@@ -119,7 +129,7 @@ acos (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 atan (double x)
 {
   double value;
@@ -130,7 +140,7 @@ atan (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 atan2 (double y, double x)
 {
   double pi, pi_over_2;
@@ -187,7 +197,7 @@ atan2 (double y, double x)
     }
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 sinh (double x)
 {
   double value;
@@ -198,7 +208,7 @@ sinh (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 cosh (double x)
 {
   double value;
@@ -209,7 +219,7 @@ cosh (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 tanh (double x)
 {
   double value;
@@ -220,7 +230,7 @@ tanh (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 atanh (double x)
 {
   double value;
@@ -231,7 +241,7 @@ atanh (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 exp (double x)
 {
   double value;
@@ -242,7 +252,7 @@ exp (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 expm1 (double x)
 {
   double value;
@@ -253,7 +263,7 @@ expm1 (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 log (double x)
 {
   double value;
@@ -264,7 +274,7 @@ log (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 log1p (double x)
 {
   double value;
@@ -275,7 +285,7 @@ log1p (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 log10 (double x)
 {
   double value;
@@ -286,7 +296,7 @@ log10 (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 sqrt (double x)
 {
   double value;
@@ -297,13 +307,13 @@ sqrt (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 hypot (double x, double y)
 {
   return sqrt (x*x + y*y);
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 pow (double x, double y)
 {
   if (x > 0)
@@ -352,7 +362,7 @@ pow (double x, double y)
     }
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 fabs (double x)
 {
   double value;
@@ -363,7 +373,7 @@ fabs (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 ceil (double x)
 {
   int rounding_mode, round_up;
@@ -385,7 +395,7 @@ ceil (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 floor (double x)
 {
   int rounding_mode, round_down;
@@ -408,7 +418,7 @@ floor (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 rint (double x)
 {
   int rounding_mode, round_nearest;
@@ -430,7 +440,7 @@ rint (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 fmod (double x, double y)
 {
   double value;
@@ -442,7 +452,7 @@ fmod (double x, double y)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 drem (double x, double y)
 {
   double value;
@@ -454,19 +464,20 @@ drem (double x, double y)
   return value;
 }
 
-__inline extern double
-scalb (double x, int n)
+__MATH_68881_INLINE double
+scalb (double x, double n)
 {
   double value;
+  int exp = (int)(n);
 
   __asm ("fscale%.l %2,%0"
 	 : "=f" (value)
 	 : "0" (x),
-	   "dmi" (n));
+	   "dmi" (exp));
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 logb (double x)
 {
   double exponent;
@@ -477,7 +488,7 @@ logb (double x)
   return exponent;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 ldexp (double x, int n)
 {
   double value;
@@ -489,7 +500,7 @@ ldexp (double x, int n)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 frexp (double x, int *exp)
 {
   double float_exponent;
@@ -514,7 +525,7 @@ frexp (double x, int *exp)
   return mantissa;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 modf (double x, double *ip)
 {
   double temp;
diff --git a/gcc/config/m68k/mint.h b/gcc/config/m68k/mint.h
new file mode 100644
index 00000000000..16cb864cb76
--- /dev/null
+++ b/gcc/config/m68k/mint.h
@@ -0,0 +1,176 @@
+/* Definitions of target machine for GNU compiler.
+   Atari ST TOS/MiNT.
+   Copyright (C) 1994, 1995, 2007, 2008, 2009, 2010, 2011
+   Free Software Foundation, Inc.
+
+This file is part of GCC.
+
+GCC is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 3, or (at your option)
+any later version.
+
+GCC is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with GCC; see the file COPYING3.  If not see
+<http://www.gnu.org/licenses/>.  */
+
+/* Here are four prefixes that are used by asm_fprintf to
+   facilitate customization for alternate assembler syntaxes.
+   Machines with no likelihood of an alternate syntax need not
+   define these and need not use asm_fprintf.  */
+
+/* The prefix for register names.  Note that REGISTER_NAMES
+   is supposed to include this prefix. Also note that this is NOT an
+   fprintf format string, it is a literal string */
+
+#undef REGISTER_PREFIX
+#define REGISTER_PREFIX "%"
+
+/* The prefix for local (compiler generated) labels.
+   These labels will not appear in the symbol table.  */
+
+#undef LOCAL_LABEL_PREFIX
+#define LOCAL_LABEL_PREFIX "."
+
+#undef ASM_COMMENT_START
+#define ASM_COMMENT_START "|"
+
+#undef WCHAR_TYPE
+#define WCHAR_TYPE "short unsigned int"
+
+#undef WCHAR_TYPE_SIZE
+#define WCHAR_TYPE_SIZE SHORT_TYPE_SIZE
+
+#undef TARGET_OS_CPP_BUILTINS
+#define TARGET_OS_CPP_BUILTINS()		\
+  do						\
+    {						\
+      builtin_define ("__MINT__");		\
+      builtin_define_std ("atarist");		\
+      builtin_assert ("machine=atari");		\
+      builtin_assert ("system=mint");		\
+    }						\
+  while (0)
+
+/* The following defines are nonstandard
+   and are kept only for compatibility
+   with older versions of GCC for MiNT.  */
+
+#undef CPP_SPEC
+#define CPP_SPEC			\
+  "%{m68000:-D__M68000__} "		\
+  "%{mc68020:-D__M68020__} "		\
+  "%{m68020:-D__M68020__} "		\
+  "%{m68030:-D__M68020__} "		\
+  "%{m68040:-D__M68020__} "		\
+  "%{m68060:-D__M68020__} "		\
+  "%{m68020-40:-D__M68020__} "		\
+  "%{m68020-60:-D__M68020__} "		\
+  "%{!m680*:%{!mc680*:-D__M68000__}} "	\
+  "%{mshort:-D__MSHORT__}"
+
+#define STARTFILE_SPEC	"%{pg|p|profile:gcrt0.o%s;:crt0.o%s}"
+#define LIB_SPEC	"-lc"
+
+/* Every structure or union's size must be a multiple of 2 bytes.  */
+#define STRUCTURE_SIZE_BOUNDARY 16
+
+/* The -g option generates stabs debug information.  */
+#define DBX_DEBUGGING_INFO 1
+
+/* This is the assembler directive to equate two values.  */
+#undef SET_ASM_OP
+#define SET_ASM_OP		"\t.set\t"
+
+/* This is how we tell the assembler that a symbol is weak.  */
+#undef ASM_WEAKEN_LABEL
+#define ASM_WEAKEN_LABEL(FILE,NAME) \
+  do { fputs ("\t.weak\t", FILE); assemble_name (FILE, NAME); \
+       fputc ('\n', FILE); } while (0)
+
+/* Don't default to pcc-struct-return, because gcc is the only compiler, and
+   we want to retain compatibility with older gcc versions.  */
+#define DEFAULT_PCC_STRUCT_RETURN 0
+
+/* The system headers are C++-aware.  */
+#define NO_IMPLICIT_EXTERN_C
+
+/* By default, the vtable entries are void pointers, the so the alignment
+   is the same as pointer alignment.  The value of this macro specifies
+   the alignment of the vtable entry in bits.  It should be defined only
+   when special alignment is necessary.
+
+   MiNT: The default value of 32 is too much and unsupported by a.out-mintprg.
+*/
+#define TARGET_VTABLE_ENTRY_ALIGN 16
+
+/* If we have a definition of INCOMING_RETURN_ADDR_RTX, assume that
+   the rest of the DWARF 2 frame unwind support is also provided.
+   
+   MiNT: DWARF 2 frame unwind is not supported by a.out-mint.
+*/
+#define DWARF2_UNWIND_INFO 0
+
+/* config/m68k.md has an explicit reference to the program counter,
+   prefix this by the register prefix.  */
+
+#define ASM_RETURN_CASE_JUMP				\
+  do {							\
+    if (TARGET_COLDFIRE)				\
+      {							\
+	if (ADDRESS_REG_P (operands[0]))		\
+	  return "jmp %%pc@(2,%0:l)";			\
+	else						\
+	  return "ext%.l %0\n\tjmp %%pc@(2,%0:l)";	\
+      }							\
+    else						\
+      return "jmp %%pc@(2,%0:w)";			\
+  } while (0)
+
+/* The ADDR_DIFF_VEC must exactly follow the previous instruction.  */
+
+#undef ADDR_VEC_ALIGN
+#define ADDR_VEC_ALIGN(ADDR_VEC) 0
+
+/* If defined, a C expression whose value is a string containing the
+   assembler operation to identify the following data as uninitialized global
+   data.  */
+
+#define BSS_SECTION_ASM_OP "\t.bss"
+
+/* A C statement (sans semicolon) to output to the stdio stream
+   FILE the assembler definition of uninitialized global DECL named
+   NAME whose size is SIZE bytes and alignment is ALIGN bytes.
+   Try to use asm_output_aligned_bss to implement this macro.  */
+
+#define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN) \
+  asm_output_aligned_bss (FILE, DECL, NAME, SIZE, ALIGN)
+
+/* Disable -fpic and -fPIC since bsr.l _label@PLTPC
+   is unsupported by the assembler.  */
+
+#undef  SUBTARGET_OVERRIDE_OPTIONS
+#define SUBTARGET_OVERRIDE_OPTIONS					\
+do {									\
+  if (flag_pic && !TARGET_PCREL)					\
+      error ("-f%s is not supported on this target",			\
+	       (flag_pic > 1) ? "PIC" : "pic");				\
+} while (0)
+
+
+/* Workaround for GCC bug #35067 about multiple thunks.  */
+
+#undef MAKE_DECL_ONE_ONLY
+#define MAKE_DECL_ONE_ONLY(DECL) (DECL_WEAK (DECL) = 1)
+
+/* Avoid requiring -static with -fmudflap like in config/bfin/uclinux.h */
+#define MFWRAP_SPEC " %{fmudflap|fmudflapth: \
+ --wrap=malloc --wrap=free --wrap=calloc --wrap=realloc\
+ --wrap=mmap --wrap=munmap --wrap=alloca\
+ %{fmudflapth: --wrap=pthread_create\
+}} %{fmudflap|fmudflapth: --wrap=main}"
diff --git a/gcc/config/m68k/t-mint b/gcc/config/m68k/t-mint
new file mode 100644
index 00000000000..64604e24997
--- /dev/null
+++ b/gcc/config/m68k/t-mint
@@ -0,0 +1,41 @@
+# 
+# Use multiple libraries
+# 
+
+MULTILIB_OPTIONS = m68020-60/mcpu=5475 mshort
+
+MULTILIB_DIRNAMES = m68020-60 m5475 mshort
+
+MULTILIB_MATCHES = \
+	m68020-60=m68881 \
+	m68020-60=m68020 \
+	m68020-60=m68020-40 \
+	m68020-60=mc68020 \
+	m68020-60=m68030 \
+	m68020-60=m68040 \
+	m68020-60=m68060 \
+	m68020-60=mcpu?68020 \
+	m68020-60=mcpu?68030 \
+	m68020-60=mcpu?68040 \
+	m68020-60=mcpu?68060 \
+	m68020-60=march?68020 \
+	m68020-60=march?68030 \
+	m68020-60=march?68040 \
+	m68020-60=march?68060 \
+	mcpu?5475=mcfv4e \
+	mcpu?5475=mcpu?5470 \
+	mcpu?5475=mcpu?5471 \
+	mcpu?5475=mcpu?5472 \
+	mcpu?5475=mcpu?5473 \
+	mcpu?5475=mcpu?5474 \
+	mcpu?5475=mcpu?547x \
+	mcpu?5475=mcpu?5480 \
+	mcpu?5475=mcpu?5481 \
+	mcpu?5475=mcpu?5482 \
+	mcpu?5475=mcpu?5483 \
+	mcpu?5475=mcpu?5484 \
+	mcpu?5475=mcpu?5485 \
+	mcpu?5475=mcpu?548x
+
+LIBGCC = stmp-multilib
+INSTALL_LIBGCC = install-multilib
diff --git a/gcc/configure b/gcc/configure
index c8caff252f4..f21de36e0b0 100755
--- a/gcc/configure
+++ b/gcc/configure
@@ -12103,6 +12103,10 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)
     # This has been around since 386BSD, at least.  Likely further.
     if test -x /sbin/sysctl; then
diff --git a/gcc/df-problems.c b/gcc/df-problems.c
index c3901b8bd34..58a8c64c461 100644
--- a/gcc/df-problems.c
+++ b/gcc/df-problems.c
@@ -4037,7 +4037,10 @@ can_move_insns_across (rtx from, rtx to, rtx across_from, rtx across_to,
 	  if (bitmap_intersect_p (merge_set, test_use)
 	      || bitmap_intersect_p (merge_use, test_set))
 	    break;
-	  max_to = insn;
+#ifdef HAVE_cc0
+	  if (!sets_cc0_p (insn))
+#endif
+	    max_to = insn;
 	}
       next = NEXT_INSN (insn);
       if (insn == to)
@@ -4074,7 +4077,11 @@ can_move_insns_across (rtx from, rtx to, rtx across_from, rtx across_to,
     {
       if (NONDEBUG_INSN_P (insn))
 	{
-	  if (!bitmap_intersect_p (test_set, local_merge_live))
+	  if (!bitmap_intersect_p (test_set, local_merge_live)
+#ifdef HAVE_cc0
+	      && !sets_cc0_p (insn)
+#endif
+	      )
 	    {
 	      max_to = insn;
 	      break;
diff --git a/libdecnumber/decNumberLocal.h b/libdecnumber/decNumberLocal.h
index dca79e51db7..24fb7f690d2 100644
--- a/libdecnumber/decNumberLocal.h
+++ b/libdecnumber/decNumberLocal.h
@@ -188,7 +188,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
   #if (DECNUMMAXE != DEC_MAX_EMAX)
     #error Maximum exponent mismatch
   #endif
-  #if (DECNUMMINE != DEC_MIN_EMIN)
+  #if !(DECNUMMINE == DEC_MIN_EMIN) /* gcc 2.95.3 has bug in '!=' operator for negative constants */
     #error Minimum exponent mismatch
   #endif
 
diff --git a/libffi/configure b/libffi/configure
index 6b38089d8c8..ffec21ec9d7 100755
--- a/libffi/configure
+++ b/libffi/configure
@@ -5065,6 +5065,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
diff --git a/libgcc/config.host b/libgcc/config.host
index 25e949e0fe3..622ccdf5f26 100644
--- a/libgcc/config.host
+++ b/libgcc/config.host
@@ -387,6 +387,8 @@ m68k-*-linux*)		# Motorola m68k's running GNU/Linux
 				# with ELF format using glibc 2
 				# aka the GNU/Linux C library 6.
 	;;
+m68k-*-mint*)
+	;;
 m68k-*-rtems*)
 	;;
 mcore-*-elf)
diff --git a/libgfortran/configure b/libgfortran/configure
index 1e61aeb4910..4f0e5767636 100755
--- a/libgfortran/configure
+++ b/libgfortran/configure
@@ -6649,6 +6649,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
diff --git a/libgomp/configure b/libgomp/configure
index 6f25c6f5eb9..0dd65c77434 100755
--- a/libgomp/configure
+++ b/libgomp/configure
@@ -5381,6 +5381,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
diff --git a/libiberty/configure b/libiberty/configure
index bdabe8d1a35..1304e0a6106 100755
--- a/libiberty/configure
+++ b/libiberty/configure
@@ -4850,6 +4850,7 @@ esac
 if [ "${shared}" = "yes" ]; then
   case "${host}" in
     *-*-cygwin*)	;;
+    *-*-mint*)		;;
     alpha*-*-linux*)	PICFLAG=-fPIC ;;
     arm*-*-*)		PICFLAG=-fPIC ;;
     hppa*-*-*)		PICFLAG=-fPIC ;;
diff --git a/libiberty/configure.ac b/libiberty/configure.ac
index 9f1ff04938e..df4a9d75b2c 100644
--- a/libiberty/configure.ac
+++ b/libiberty/configure.ac
@@ -201,6 +201,7 @@ esac
 if [[ "${shared}" = "yes" ]]; then
   case "${host}" in
     *-*-cygwin*)	;;
+    *-*-mint*)		;;
     alpha*-*-linux*)	PICFLAG=-fPIC ;;
     arm*-*-*)		PICFLAG=-fPIC ;;
     hppa*-*-*)		PICFLAG=-fPIC ;;
diff --git a/libiberty/hex.c b/libiberty/hex.c
index 5eeafdbd158..696d914e776 100644
--- a/libiberty/hex.c
+++ b/libiberty/hex.c
@@ -24,7 +24,7 @@ Boston, MA 02110-1301, USA.  */
 #include "libiberty.h"
 #include "safe-ctype.h" /* for HOST_CHARSET_ASCII */
 
-#if EOF != -1
+#if !(EOF == -1)	/* gcc 2.95.3 has bug in '!=' operator for negative constants */
  #error "hex.c requires EOF == -1"
 #endif
 
diff --git a/libiberty/safe-ctype.c b/libiberty/safe-ctype.c
index 0972b4b354f..7418139d325 100644
--- a/libiberty/safe-ctype.c
+++ b/libiberty/safe-ctype.c
@@ -119,7 +119,7 @@ sets of characters:
 #include <safe-ctype.h>
 #include <stdio.h>  /* for EOF */
 
-#if EOF != -1
+#if !(EOF == -1)	/* gcc 2.95.3 has bug in '!=' operator for negative constants */
  #error "<safe-ctype.h> requires EOF == -1"
 #endif
 
diff --git a/libjava/classpath/configure b/libjava/classpath/configure
index a25f5f75a47..e0962284e72 100755
--- a/libjava/classpath/configure
+++ b/libjava/classpath/configure
@@ -6376,6 +6376,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
diff --git a/libjava/configure b/libjava/configure
index d660561801d..bf035eb1e9c 100755
--- a/libjava/configure
+++ b/libjava/configure
@@ -7613,6 +7613,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
diff --git a/libjava/libltdl/configure b/libjava/libltdl/configure
index 35b89dc5551..f10b8012781 100755
--- a/libjava/libltdl/configure
+++ b/libjava/libltdl/configure
@@ -5502,6 +5502,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
diff --git a/libmudflap/configure b/libmudflap/configure
index 441299f6552..adf55002e68 100755
--- a/libmudflap/configure
+++ b/libmudflap/configure
@@ -5153,6 +5153,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
diff --git a/libmudflap/mf-hooks2.c b/libmudflap/mf-hooks2.c
index 5649e1c5882..1eea4cd544d 100644
--- a/libmudflap/mf-hooks2.c
+++ b/libmudflap/mf-hooks2.c
@@ -1668,6 +1668,8 @@ WRAPPER2(int, system, const char *string)
 }
 
 
+#ifdef HAVE_DLFCN_H
+
 WRAPPER2(void *, dlopen, const char *path, int flags)
 {
   void *p;
@@ -1735,6 +1737,8 @@ WRAPPER2(void *, dlsym, void *handle, char *symbol)
   return p;
 }
 
+#endif /* HAVE_DLFCN_H */
+
 
 #if defined (HAVE_SYS_IPC_H) && defined (HAVE_SYS_SEM_H) && defined (HAVE_SYS_SHM_H)
 
diff --git a/libmudflap/mf-runtime.h b/libmudflap/mf-runtime.h
index 4c512d5a690..662180fe28a 100644
--- a/libmudflap/mf-runtime.h
+++ b/libmudflap/mf-runtime.h
@@ -97,6 +97,7 @@ extern int __mf_set_options (const char *opts);
    instrumented modules are meant to be affected.  */
 
 #ifdef _MUDFLAP
+#ifndef __USER_LABEL_PREFIX__
 #pragma redefine_extname memcpy __mfwrap_memcpy
 #pragma redefine_extname memmove __mfwrap_memmove
 #pragma redefine_extname memset __mfwrap_memset
@@ -230,6 +231,141 @@ extern int __mf_set_options (const char *opts);
 #pragma redefine_extname getprotoent __mfwrap_getprotoent
 #pragma redefine_extname getprotobyname __mfwrap_getprotobyname
 #pragma redefine_extname getprotobynumber __mfwrap_getprotobynumber
+#else
+#pragma redefine_extname memcpy ___mfwrap_memcpy
+#pragma redefine_extname memmove ___mfwrap_memmove
+#pragma redefine_extname memset ___mfwrap_memset
+#pragma redefine_extname memcmp ___mfwrap_memcmp
+#pragma redefine_extname memchr ___mfwrap_memchr
+#pragma redefine_extname memrchr ___mfwrap_memrchr
+#pragma redefine_extname strcpy ___mfwrap_strcpy
+#pragma redefine_extname strncpy ___mfwrap_strncpy
+#pragma redefine_extname strcat ___mfwrap_strcat
+#pragma redefine_extname strncat ___mfwrap_strncat
+#pragma redefine_extname strcmp ___mfwrap_strcmp
+#pragma redefine_extname strcasecmp ___mfwrap_strcasecmp
+#pragma redefine_extname strncmp ___mfwrap_strncmp
+#pragma redefine_extname strncasecmp ___mfwrap_strncasecmp
+#pragma redefine_extname strdup ___mfwrap_strdup
+#pragma redefine_extname strndup ___mfwrap_strndup
+#pragma redefine_extname strchr ___mfwrap_strchr
+#pragma redefine_extname strrchr ___mfwrap_strrchr
+#pragma redefine_extname strstr ___mfwrap_strstr
+#pragma redefine_extname memmem ___mfwrap_memmem
+#pragma redefine_extname strlen ___mfwrap_strlen
+#pragma redefine_extname strnlen ___mfwrap_strnlen
+#pragma redefine_extname bzero ___mfwrap_bzero
+#pragma redefine_extname bcopy ___mfwrap_bcopy
+#pragma redefine_extname bcmp ___mfwrap_bcmp
+#pragma redefine_extname index ___mfwrap_index
+#pragma redefine_extname rindex ___mfwrap_rindex
+#pragma redefine_extname asctime ___mfwrap_asctime
+#pragma redefine_extname ctime ___mfwrap_ctime
+#pragma redefine_extname gmtime ___mfwrap_gmtime
+#pragma redefine_extname localtime ___mfwrap_localtime
+#pragma redefine_extname time ___mfwrap_time
+#pragma redefine_extname strerror ___mfwrap_strerror
+#pragma redefine_extname fopen ___mfwrap_fopen
+#pragma redefine_extname fdopen ___mfwrap_fdopen
+#pragma redefine_extname freopen ___mfwrap_freopen
+#pragma redefine_extname fclose ___mfwrap_fclose
+#pragma redefine_extname fread ___mfwrap_fread
+#pragma redefine_extname fwrite ___mfwrap_fwrite
+#pragma redefine_extname fgetc ___mfwrap_fgetc
+#pragma redefine_extname fgets ___mfwrap_fgets
+#pragma redefine_extname getc ___mfwrap_getc
+#pragma redefine_extname gets ___mfwrap_gets
+#pragma redefine_extname ungetc ___mfwrap_ungetc
+#pragma redefine_extname fputc ___mfwrap_fputc
+#pragma redefine_extname fputs ___mfwrap_fputs
+#pragma redefine_extname putc ___mfwrap_putc
+#pragma redefine_extname puts ___mfwrap_puts
+#pragma redefine_extname clearerr ___mfwrap_clearerr
+#pragma redefine_extname feof ___mfwrap_feof
+#pragma redefine_extname ferror ___mfwrap_ferror
+#pragma redefine_extname fileno ___mfwrap_fileno
+#pragma redefine_extname printf ___mfwrap_printf
+#pragma redefine_extname fprintf ___mfwrap_fprintf
+#pragma redefine_extname sprintf ___mfwrap_sprintf
+#pragma redefine_extname snprintf ___mfwrap_snprintf
+#pragma redefine_extname vprintf ___mfwrap_vprintf
+#pragma redefine_extname vfprintf ___mfwrap_vfprintf
+#pragma redefine_extname vsprintf ___mfwrap_vsprintf
+#pragma redefine_extname vsnprintf ___mfwrap_vsnprintf
+#pragma redefine_extname access ___mfwrap_access
+#pragma redefine_extname remove ___mfwrap_remove
+#pragma redefine_extname fflush ___mfwrap_fflush
+#pragma redefine_extname fseek ___mfwrap_fseek
+#pragma redefine_extname ftell ___mfwrap_ftell
+#pragma redefine_extname rewind ___mfwrap_rewind
+#pragma redefine_extname fgetpos ___mfwrap_fgetpos
+#pragma redefine_extname fsetpos ___mfwrap_fsetpos
+#pragma redefine_extname stat ___mfwrap_stat
+#pragma redefine_extname fstat ___mfwrap_fstat
+#pragma redefine_extname lstat ___mfwrap_lstat
+#pragma redefine_extname mkfifo ___mfwrap_mkfifo
+#pragma redefine_extname setvbuf ___mfwrap_setvbuf
+#pragma redefine_extname setbuf ___mfwrap_setbuf
+#pragma redefine_extname setbuffer ___mfwrap_setbuffer
+#pragma redefine_extname setlinebuf ___mfwrap_setlinebuf
+#pragma redefine_extname opendir ___mfwrap_opendir
+#pragma redefine_extname closedir ___mfwrap_closedir
+#pragma redefine_extname readdir ___mfwrap_readdir
+#pragma redefine_extname recv ___mfwrap_recv
+#pragma redefine_extname recvfrom ___mfwrap_recvfrom
+#pragma redefine_extname recvmsg ___mfwrap_recvmsg
+#pragma redefine_extname send ___mfwrap_send
+#pragma redefine_extname sendto ___mfwrap_sendto
+#pragma redefine_extname sendmsg ___mfwrap_sendmsg
+#pragma redefine_extname setsockopt ___mfwrap_setsockopt
+#pragma redefine_extname getsockopt ___mfwrap_getsockopt
+#pragma redefine_extname accept ___mfwrap_accept
+#pragma redefine_extname bind ___mfwrap_bind
+#pragma redefine_extname connect ___mfwrap_connect
+#pragma redefine_extname gethostname ___mfwrap_gethostname
+#pragma redefine_extname sethostname ___mfwrap_sethostname
+#pragma redefine_extname gethostbyname ___mfwrap_gethostbyname
+#pragma redefine_extname wait ___mfwrap_wait
+#pragma redefine_extname waitpid ___mfwrap_waitpid
+#pragma redefine_extname popen ___mfwrap_popen
+#pragma redefine_extname pclose ___mfwrap_pclose
+#pragma redefine_extname execve ___mfwrap_execve
+#pragma redefine_extname execv ___mfwrap_execv
+#pragma redefine_extname execvp ___mfwrap_execvp
+#pragma redefine_extname system ___mfwrap_system
+#pragma redefine_extname dlopen ___mfwrap_dlopen
+#pragma redefine_extname dlerror ___mfwrap_dlerror
+#pragma redefine_extname dlsym ___mfwrap_dlsym
+#pragma redefine_extname dlclose ___mfwrap_dlclose
+#pragma redefine_extname fopen64 ___mfwrap_fopen64
+#pragma redefine_extname freopen64 ___mfwrap_freopen64
+#pragma redefine_extname stat64 ___mfwrap_stat64
+#pragma redefine_extname fseeko64 ___mfwrap_fseeko64
+#pragma redefine_extname ftello64 ___mfwrap_ftello64
+#pragma redefine_extname semop ___mfwrap_semop
+#pragma redefine_extname semctl ___mfwrap_semctl
+#pragma redefine_extname shmctl ___mfwrap_shmctl
+#pragma redefine_extname shmat ___mfwrap_shmat
+#pragma redefine_extname shmdt ___mfwrap_shmdt
+#pragma redefine_extname __ctype_b_loc ___mfwrap___ctype_b_loc
+#pragma redefine_extname __ctype_toupper_loc ___mfwrap___ctype_toupper_loc
+#pragma redefine_extname __ctype_tolower_loc ___mfwrap___ctype_tolower_loc
+#pragma redefine_extname getlogin ___mfwrap_getlogin
+#pragma redefine_extname cuserid ___mfwrap_cuserid
+#pragma redefine_extname getpwnam ___mfwrap_getpwnam
+#pragma redefine_extname getpwuid ___mfwrap_getpwuid
+#pragma redefine_extname getgrnam ___mfwrap_getgrnam
+#pragma redefine_extname getgrgid ___mfwrap_getgrgid
+#pragma redefine_extname getservent ___mfwrap_getservent
+#pragma redefine_extname getservbyname ___mfwrap_getservbyname
+#pragma redefine_extname getservbyport ___mfwrap_getservbyport
+#pragma redefine_extname gai_strerror ___mfwrap_gai_strerror
+#pragma redefine_extname getmntent ___mfwrap_getmntent
+#pragma redefine_extname inet_ntoa ___mfwrap_inet_ntoa
+#pragma redefine_extname getprotoent ___mfwrap_getprotoent
+#pragma redefine_extname getprotobyname ___mfwrap_getprotobyname
+#pragma redefine_extname getprotobynumber ___mfwrap_getprotobynumber
+#endif
 
 /* Disable glibc macros.  */
 #define __NO_STRING_INLINES
diff --git a/libobjc/configure b/libobjc/configure
index e6f0afdfa3b..24dc36faf20 100755
--- a/libobjc/configure
+++ b/libobjc/configure
@@ -4812,6 +4812,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
diff --git a/libssp/configure b/libssp/configure
index bd3f5662c4b..b693b539b83 100755
--- a/libssp/configure
+++ b/libssp/configure
@@ -5185,6 +5185,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
diff --git a/libssp/ssp.c b/libssp/ssp.c
index aaa5a322c8d..886dd8160d3 100644
--- a/libssp/ssp.c
+++ b/libssp/ssp.c
@@ -63,6 +63,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 #ifdef HAVE_SYSLOG_H
 # include <syslog.h>
 #endif
+#ifdef __MINT__
+#include <mint/osbind.h>
+#endif
 
 void *__stack_chk_guard = 0;
 
@@ -98,6 +101,9 @@ fail (const char *msg1, size_t msg1len, const char *msg3)
 {
 #ifdef __GNU_LIBRARY__
   extern char * __progname;
+#elif defined (__MINT__)
+  extern char * program_invocation_short_name;
+  #define __progname program_invocation_short_name
 #else
   static const char __progname[] = "";
 #endif
@@ -139,6 +145,9 @@ fail (const char *msg1, size_t msg1len, const char *msg3)
     syslog (LOG_CRIT, msg3);
 #endif /* HAVE_SYSLOG_H */
 
+#ifdef __MINT__
+    Pterm(127);
+#else
   /* Try very hard to exit.  Note that signals may be blocked preventing
      the first two options from working.  The use of volatile is here to
      prevent optimizers from "knowing" that __builtin_trap is called first,
@@ -160,6 +169,7 @@ fail (const char *msg1, size_t msg1len, const char *msg3)
           break;
         }
   }
+#endif
 }
 
 void
diff --git a/libstdc++-v3/config/os/mint/ctype_base.h b/libstdc++-v3/config/os/mint/ctype_base.h
new file mode 100644
index 00000000000..d6b3ec7d56a
--- /dev/null
+++ b/libstdc++-v3/config/os/mint/ctype_base.h
@@ -0,0 +1,67 @@
+// Locale support -*- C++ -*-
+
+// Copyright (C) 1997-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+//
+// ISO C++ 14882: 22.1  Locales
+//
+
+//  We don't use the C-locale masks defined in usr/include/ctype.h
+//  because those masks do not conform to the requirements of 22.2.1.
+//  In particular, a separate 'print' bitmask does not exist (isprint(c)
+//  relies on a combination of flags) and the  '_ALPHA' mask is also a
+//  combination of simple bitmasks.  Thus, we define libstdc++-specific
+//  masks here, based on the generic masks, and the corresponding
+//  classic_table in ctype_noninline.h.
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  /// @brief  Base class for ctype.
+  struct ctype_base
+  {
+    // Non-standard typedefs.
+    typedef const int* 		__to_type;
+
+    // NB: Offsets into ctype<char>::_M_table force a particular size
+    // on the mask type. Because of this, we don't use an enum.
+    typedef unsigned short 	mask;   
+    static const mask upper	= 1 << 0;
+    static const mask lower	= 1 << 1;
+    static const mask alpha	= 1 << 2;
+    static const mask digit	= 1 << 3;
+    static const mask xdigit	= 1 << 4;
+    static const mask space	= 1 << 5;
+    static const mask print	= 1 << 6;
+    static const mask graph	= (1 << 2) | (1 << 3) | (1 << 9);  // alnum|punct
+    static const mask cntrl	= 1 << 8;
+    static const mask punct 	= 1 << 9;
+    static const mask alnum	= (1 << 2) | (1 << 3);  // alpha|digit
+#if __cplusplus >= 201103L
+    static const mask blank	= 1 << 10;
+#endif
+  };
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
diff --git a/libstdc++-v3/config/os/mint/ctype_inline.h b/libstdc++-v3/config/os/mint/ctype_inline.h
new file mode 100644
index 00000000000..586c2aeab3e
--- /dev/null
+++ b/libstdc++-v3/config/os/mint/ctype_inline.h
@@ -0,0 +1,75 @@
+// Locale support -*- C++ -*-
+
+// Copyright (C) 2000-2016 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+/** @file bits/ctype_inline.h
+ *  This is an internal header file, included by other library headers.
+ *  Do not attempt to use it directly. @headername{locale}
+ */
+
+//
+// ISO C++ 14882: 22.1  Locales
+//
+
+// ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)
+// functions go in ctype.cc
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  bool
+  ctype<char>::
+  is(mask __m, char __c) const
+  { return (_M_table[static_cast<unsigned char>(__c) ] & __m); }
+
+
+  const char*
+  ctype<char>::
+  is(const char* __low, const char* __high, mask* __vec) const
+  {
+    while (__low < __high)
+      *__vec++ = _M_table[static_cast<unsigned char>(*__low++)];
+    return __high;
+  }
+
+  const char*
+  ctype<char>::
+  scan_is(mask __m, const char* __low, const char* __high) const
+  {
+    while (__low < __high && !this->is(__m, *__low))
+      ++__low;
+    return __low;
+  }
+
+  const char*
+  ctype<char>::
+  scan_not(mask __m, const char* __low, const char* __high) const
+  {
+    while (__low < __high && this->is(__m, *__low) != 0)
+      ++__low;
+    return __low;
+  }
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
diff --git a/libstdc++-v3/config/os/mint/ctype_noninline.h b/libstdc++-v3/config/os/mint/ctype_noninline.h
new file mode 100644
index 00000000000..30045899f76
--- /dev/null
+++ b/libstdc++-v3/config/os/mint/ctype_noninline.h
@@ -0,0 +1,92 @@
+// Locale support -*- C++ -*-
+
+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2009, 2010
+//  Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+/** @file bits/ctype_noninline.h
+ *  This is an internal header file, included by other library headers.
+ *  Do not attempt to use it directly. @headername{locale}
+ */
+
+//
+// ISO C++ 14882: 22.1  Locales
+//
+  
+// Information as gleaned from /usr/include/ctype.h
+
+  const ctype_base::mask*
+  ctype<char>::classic_table() throw()
+  { return 0; }
+
+  ctype<char>::ctype(__c_locale, const mask* __table, bool __del, 
+		     size_t __refs) 
+  : facet(__refs), _M_del(__table != 0 && __del), 
+  _M_toupper(NULL), _M_tolower(NULL), 
+  _M_table(__table ? __table : classic_table()) 
+  { 
+    memset(_M_widen, 0, sizeof(_M_widen));
+    _M_widen_ok = 0;
+    memset(_M_narrow, 0, sizeof(_M_narrow));
+    _M_narrow_ok = 0;
+  }
+
+  ctype<char>::ctype(const mask* __table, bool __del, size_t __refs) 
+  : facet(__refs), _M_del(__table != 0 && __del), 
+  _M_toupper(NULL), _M_tolower(NULL), 
+  _M_table(__table ? __table : classic_table())
+  { 
+    memset(_M_widen, 0, sizeof(_M_widen));
+    _M_widen_ok = 0;
+    memset(_M_narrow, 0, sizeof(_M_narrow));
+    _M_narrow_ok = 0;
+  }
+
+  char
+  ctype<char>::do_toupper(char __c) const
+  { return ::toupper((int) __c); }
+
+  const char*
+  ctype<char>::do_toupper(char* __low, const char* __high) const
+  {
+    while (__low < __high)
+      {
+	*__low = ::toupper((int) *__low);
+	++__low;
+      }
+    return __high;
+  }
+
+  char
+  ctype<char>::do_tolower(char __c) const
+  { return ::tolower((int) __c); }
+
+  const char* 
+  ctype<char>::do_tolower(char* __low, const char* __high) const
+  {
+    while (__low < __high)
+      {
+	*__low = ::tolower((int) *__low);
+	++__low;
+      }
+    return __high;
+  }
diff --git a/libstdc++-v3/config/os/mint/os_defines.h b/libstdc++-v3/config/os/mint/os_defines.h
new file mode 100644
index 00000000000..3199bf30bb3
--- /dev/null
+++ b/libstdc++-v3/config/os/mint/os_defines.h
@@ -0,0 +1,36 @@
+// Specific definitions for generic platforms  -*- C++ -*-
+
+// Copyright (C) 2000, 2009, 2010 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+/** @file bits/os_defines.h
+ *  This is an internal header file, included by other library headers.
+ *  Do not attempt to use it directly. @headername{iosfwd}
+ */
+
+#ifndef _GLIBCXX_OS_DEFINES
+#define _GLIBCXX_OS_DEFINES 1
+
+// System-specific #define, typedefs, corrections, etc, go here.  This
+// file will come before all others.
+
+#endif
diff --git a/libstdc++-v3/configure b/libstdc++-v3/configure
index 84b6ea94a01..125a7206e31 100755
--- a/libstdc++-v3/configure
+++ b/libstdc++-v3/configure
@@ -5890,6 +5890,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
@@ -44718,7 +44724,7 @@ $as_echo "#define HAVE_TLS 1" >>confdefs.h
 	;;
     esac
     ;;
-  *-linux* | *-uclinux* | *-gnu* | *-kfreebsd*-gnu | *-knetbsd*-gnu)
+  *-linux* | *-uclinux* | *-gnu* | *-kfreebsd*-gnu | *-knetbsd*-gnu | *-mint*)
 
   # All these tests are for C++; save the language and the compiler flags.
   # The CXXFLAGS thing is suspicious, but based on similar bits previously
diff --git a/libstdc++-v3/configure.host b/libstdc++-v3/configure.host
index e29404c026f..123dea6a0ff 100644
--- a/libstdc++-v3/configure.host
+++ b/libstdc++-v3/configure.host
@@ -258,6 +258,10 @@ case "${host_os}" in
     error_constants_dir="os/mingw32"
     OPT_LDFLAGS="${OPT_LDFLAGS} \$(lt_host_flags)"
     ;;
+  mint*)
+    SECTION_FLAGS="${SECTION_FLAGS} -D_GNU_SOURCE"
+    os_include_dir="os/mint"
+    ;;
   netbsd*)
     os_include_dir="os/bsd/netbsd"
     ;;
diff --git a/libstdc++-v3/crossconfig.m4 b/libstdc++-v3/crossconfig.m4
index 2d0a4a83ded..2964c93cd25 100644
--- a/libstdc++-v3/crossconfig.m4
+++ b/libstdc++-v3/crossconfig.m4
@@ -141,7 +141,7 @@ case "${host}" in
 	;;
     esac
     ;;
-  *-linux* | *-uclinux* | *-gnu* | *-kfreebsd*-gnu | *-knetbsd*-gnu)
+  *-linux* | *-uclinux* | *-gnu* | *-kfreebsd*-gnu | *-knetbsd*-gnu | *-mint*)
     GLIBCXX_CHECK_COMPILER_FEATURES
     GLIBCXX_CHECK_LINKER_FEATURES
     GLIBCXX_CHECK_MATH_SUPPORT
diff --git a/libtool.m4 b/libtool.m4
index 67321a7d070..c4d4b98e3c2 100644
--- a/libtool.m4
+++ b/libtool.m4
@@ -1500,6 +1500,12 @@ AC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)
     # This has been around since 386BSD, at least.  Likely further.
     if test -x /sbin/sysctl; then
diff --git a/zlib/configure b/zlib/configure
index f7fe2b7bd51..263badc4901 100755
--- a/zlib/configure
+++ b/zlib/configure
@@ -4652,6 +4652,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
-- 
2.24.0

