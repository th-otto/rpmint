diff --git a/Makefile.in b/Makefile.in
old mode 100644
new mode 100755
index b824e0a0ca1..feea638d721
--- a/Makefile.in
+++ b/Makefile.in
@@ -12001,14 +12001,14 @@ configure-gmp: stage_current
 maybe-configure-gmp: configure-gmp
 configure-gmp: 
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	test ! -f $(HOST_SUBDIR)/gmp/Makefile || exit 0; \
 	$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp; \
 	$(HOST_EXPORTS)  \
 	echo Configuring in $(HOST_SUBDIR)/gmp; \
 	cd "$(HOST_SUBDIR)/gmp" || exit 1; \
 	case $(srcdir) in \
-	  /* | [A-Za-z]:[\\/]*) topdir=$(srcdir) ;; \
+	  /* | [A-Za-z]:[\\/]*) topdir=$$s ;; \
 	  *) topdir=`echo $(HOST_SUBDIR)/gmp/ | \
 		sed -e 's,\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \
 	esac; \
@@ -12031,7 +12031,7 @@ configure-stage1-gmp:
 	@[ $(current_stage) = stage1 ] || $(MAKE) stage1-start
 	@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGE1_TFLAGS)"; \
 	test ! -f $(HOST_SUBDIR)/gmp/Makefile || exit 0; \
 	$(HOST_EXPORTS) \
@@ -12042,7 +12042,7 @@ configure-stage1-gmp:
 	$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp; \
 	cd $(HOST_SUBDIR)/gmp || exit 1; \
 	case $(srcdir) in \
-	  /* | [A-Za-z]:[\\/]*) topdir=$(srcdir) ;; \
+	  /* | [A-Za-z]:[\\/]*) topdir=$$s ;; \
 	  *) topdir=`echo $(HOST_SUBDIR)/gmp/ | \
 		sed -e 's,\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \
 	esac; \
@@ -12064,7 +12064,7 @@ configure-stage2-gmp:
 	@[ $(current_stage) = stage2 ] || $(MAKE) stage2-start
 	@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGE2_TFLAGS)"; \
 	test ! -f $(HOST_SUBDIR)/gmp/Makefile || exit 0; \
 	$(HOST_EXPORTS) \
@@ -12076,7 +12076,7 @@ configure-stage2-gmp:
 	$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp; \
 	cd $(HOST_SUBDIR)/gmp || exit 1; \
 	case $(srcdir) in \
-	  /* | [A-Za-z]:[\\/]*) topdir=$(srcdir) ;; \
+	  /* | [A-Za-z]:[\\/]*) topdir=$$s ;; \
 	  *) topdir=`echo $(HOST_SUBDIR)/gmp/ | \
 		sed -e 's,\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \
 	esac; \
@@ -12098,7 +12098,7 @@ configure-stage3-gmp:
 	@[ $(current_stage) = stage3 ] || $(MAKE) stage3-start
 	@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGE3_TFLAGS)"; \
 	test ! -f $(HOST_SUBDIR)/gmp/Makefile || exit 0; \
 	$(HOST_EXPORTS) \
@@ -12110,7 +12110,7 @@ configure-stage3-gmp:
 	$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp; \
 	cd $(HOST_SUBDIR)/gmp || exit 1; \
 	case $(srcdir) in \
-	  /* | [A-Za-z]:[\\/]*) topdir=$(srcdir) ;; \
+	  /* | [A-Za-z]:[\\/]*) topdir=$$s ;; \
 	  *) topdir=`echo $(HOST_SUBDIR)/gmp/ | \
 		sed -e 's,\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \
 	esac; \
@@ -12132,7 +12132,7 @@ configure-stage4-gmp:
 	@[ $(current_stage) = stage4 ] || $(MAKE) stage4-start
 	@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGE4_TFLAGS)"; \
 	test ! -f $(HOST_SUBDIR)/gmp/Makefile || exit 0; \
 	$(HOST_EXPORTS) \
@@ -12144,7 +12144,7 @@ configure-stage4-gmp:
 	$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp; \
 	cd $(HOST_SUBDIR)/gmp || exit 1; \
 	case $(srcdir) in \
-	  /* | [A-Za-z]:[\\/]*) topdir=$(srcdir) ;; \
+	  /* | [A-Za-z]:[\\/]*) topdir=$$s ;; \
 	  *) topdir=`echo $(HOST_SUBDIR)/gmp/ | \
 		sed -e 's,\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \
 	esac; \
@@ -12166,7 +12166,7 @@ configure-stageprofile-gmp:
 	@[ $(current_stage) = stageprofile ] || $(MAKE) stageprofile-start
 	@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGEprofile_TFLAGS)"; \
 	test ! -f $(HOST_SUBDIR)/gmp/Makefile || exit 0; \
 	$(HOST_EXPORTS) \
@@ -12178,7 +12178,7 @@ configure-stageprofile-gmp:
 	$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp; \
 	cd $(HOST_SUBDIR)/gmp || exit 1; \
 	case $(srcdir) in \
-	  /* | [A-Za-z]:[\\/]*) topdir=$(srcdir) ;; \
+	  /* | [A-Za-z]:[\\/]*) topdir=$$s ;; \
 	  *) topdir=`echo $(HOST_SUBDIR)/gmp/ | \
 		sed -e 's,\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \
 	esac; \
@@ -12200,7 +12200,7 @@ configure-stagefeedback-gmp:
 	@[ $(current_stage) = stagefeedback ] || $(MAKE) stagefeedback-start
 	@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGEfeedback_TFLAGS)"; \
 	test ! -f $(HOST_SUBDIR)/gmp/Makefile || exit 0; \
 	$(HOST_EXPORTS) \
@@ -12212,7 +12212,7 @@ configure-stagefeedback-gmp:
 	$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp; \
 	cd $(HOST_SUBDIR)/gmp || exit 1; \
 	case $(srcdir) in \
-	  /* | [A-Za-z]:[\\/]*) topdir=$(srcdir) ;; \
+	  /* | [A-Za-z]:[\\/]*) topdir=$$s ;; \
 	  *) topdir=`echo $(HOST_SUBDIR)/gmp/ | \
 		sed -e 's,\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \
 	esac; \
@@ -12234,7 +12234,7 @@ configure-stageautoprofile-gmp:
 	@[ $(current_stage) = stageautoprofile ] || $(MAKE) stageautoprofile-start
 	@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGEautoprofile_TFLAGS)"; \
 	test ! -f $(HOST_SUBDIR)/gmp/Makefile || exit 0; \
 	$(HOST_EXPORTS) \
@@ -12246,7 +12246,7 @@ configure-stageautoprofile-gmp:
 	$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp; \
 	cd $(HOST_SUBDIR)/gmp || exit 1; \
 	case $(srcdir) in \
-	  /* | [A-Za-z]:[\\/]*) topdir=$(srcdir) ;; \
+	  /* | [A-Za-z]:[\\/]*) topdir=$$s ;; \
 	  *) topdir=`echo $(HOST_SUBDIR)/gmp/ | \
 		sed -e 's,\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \
 	esac; \
@@ -12268,7 +12268,7 @@ configure-stageautofeedback-gmp:
 	@[ $(current_stage) = stageautofeedback ] || $(MAKE) stageautofeedback-start
 	@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGEautofeedback_TFLAGS)"; \
 	test ! -f $(HOST_SUBDIR)/gmp/Makefile || exit 0; \
 	$(HOST_EXPORTS) \
@@ -12280,7 +12280,7 @@ configure-stageautofeedback-gmp:
 	$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp; \
 	cd $(HOST_SUBDIR)/gmp || exit 1; \
 	case $(srcdir) in \
-	  /* | [A-Za-z]:[\\/]*) topdir=$(srcdir) ;; \
+	  /* | [A-Za-z]:[\\/]*) topdir=$$s ;; \
 	  *) topdir=`echo $(HOST_SUBDIR)/gmp/ | \
 		sed -e 's,\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \
 	esac; \
@@ -12539,7 +12539,7 @@ TARGET-stagefeedback-gmp = $(TARGET-gmp)
 all-stagefeedback-gmp: configure-stagefeedback-gmp
 	@[ $(current_stage) = stagefeedback ] || $(MAKE) stagefeedback-start
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGEfeedback_TFLAGS)"; \
 	$(HOST_EXPORTS) \
 	$(POSTSTAGE1_HOST_EXPORTS)  \
@@ -12581,7 +12581,7 @@ TARGET-stageautoprofile-gmp = $(TARGET-gmp)
 all-stageautoprofile-gmp: configure-stageautoprofile-gmp
 	@[ $(current_stage) = stageautoprofile ] || $(MAKE) stageautoprofile-start
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGEautoprofile_TFLAGS)"; \
 	$(HOST_EXPORTS) \
 	$(POSTSTAGE1_HOST_EXPORTS)  \
@@ -12623,7 +12623,7 @@ TARGET-stageautofeedback-gmp = $(TARGET-gmp)
 all-stageautofeedback-gmp: configure-stageautofeedback-gmp
 	@[ $(current_stage) = stageautofeedback ] || $(MAKE) stageautofeedback-start
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGEautofeedback_TFLAGS)"; \
 	$(HOST_EXPORTS) \
 	$(POSTSTAGE1_HOST_EXPORTS)  \
@@ -13334,7 +13334,7 @@ TARGET-mpfr=all
 maybe-all-mpfr: all-mpfr
 all-mpfr: configure-mpfr
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	$(HOST_EXPORTS)  \
 	(cd $(HOST_SUBDIR)/mpfr && \
 	  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS) AM_CFLAGS="-DNO_ASM" \
@@ -13354,7 +13354,7 @@ TARGET-stage1-mpfr = $(TARGET-mpfr)
 all-stage1-mpfr: configure-stage1-mpfr
 	@[ $(current_stage) = stage1 ] || $(MAKE) stage1-start
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGE1_TFLAGS)"; \
 	$(HOST_EXPORTS)  \
 	cd $(HOST_SUBDIR)/mpfr && \
@@ -13397,7 +13397,7 @@ TARGET-stage2-mpfr = $(TARGET-mpfr)
 all-stage2-mpfr: configure-stage2-mpfr
 	@[ $(current_stage) = stage2 ] || $(MAKE) stage2-start
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGE2_TFLAGS)"; \
 	$(HOST_EXPORTS) \
 	$(POSTSTAGE1_HOST_EXPORTS)  \
@@ -13439,7 +13439,7 @@ TARGET-stage3-mpfr = $(TARGET-mpfr)
 all-stage3-mpfr: configure-stage3-mpfr
 	@[ $(current_stage) = stage3 ] || $(MAKE) stage3-start
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGE3_TFLAGS)"; \
 	$(HOST_EXPORTS) \
 	$(POSTSTAGE1_HOST_EXPORTS)  \
@@ -13481,7 +13481,7 @@ TARGET-stage4-mpfr = $(TARGET-mpfr)
 all-stage4-mpfr: configure-stage4-mpfr
 	@[ $(current_stage) = stage4 ] || $(MAKE) stage4-start
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGE4_TFLAGS)"; \
 	$(HOST_EXPORTS) \
 	$(POSTSTAGE1_HOST_EXPORTS)  \
@@ -13523,7 +13523,7 @@ TARGET-stageprofile-mpfr = $(TARGET-mpfr)
 all-stageprofile-mpfr: configure-stageprofile-mpfr
 	@[ $(current_stage) = stageprofile ] || $(MAKE) stageprofile-start
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGEprofile_TFLAGS)"; \
 	$(HOST_EXPORTS) \
 	$(POSTSTAGE1_HOST_EXPORTS)  \
@@ -13565,7 +13565,7 @@ TARGET-stagefeedback-mpfr = $(TARGET-mpfr)
 all-stagefeedback-mpfr: configure-stagefeedback-mpfr
 	@[ $(current_stage) = stagefeedback ] || $(MAKE) stagefeedback-start
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGEfeedback_TFLAGS)"; \
 	$(HOST_EXPORTS) \
 	$(POSTSTAGE1_HOST_EXPORTS)  \
@@ -13607,7 +13607,7 @@ TARGET-stageautoprofile-mpfr = $(TARGET-mpfr)
 all-stageautoprofile-mpfr: configure-stageautoprofile-mpfr
 	@[ $(current_stage) = stageautoprofile ] || $(MAKE) stageautoprofile-start
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGEautoprofile_TFLAGS)"; \
 	$(HOST_EXPORTS) \
 	$(POSTSTAGE1_HOST_EXPORTS)  \
@@ -13649,7 +13649,7 @@ TARGET-stageautofeedback-mpfr = $(TARGET-mpfr)
 all-stageautofeedback-mpfr: configure-stageautofeedback-mpfr
 	@[ $(current_stage) = stageautofeedback ] || $(MAKE) stageautofeedback-start
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGEautofeedback_TFLAGS)"; \
 	$(HOST_EXPORTS) \
 	$(POSTSTAGE1_HOST_EXPORTS)  \
@@ -13691,7 +13691,7 @@ maybe-check-mpfr: check-mpfr
 check-mpfr:
 	@: $(MAKE); $(unstage)
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	$(HOST_EXPORTS) $(EXTRA_HOST_EXPORTS) \
 	(cd $(HOST_SUBDIR)/mpfr && \
 	  $(MAKE) $(FLAGS_TO_PASS) AM_CFLAGS="-DNO_ASM" $(EXTRA_BOOTSTRAP_FLAGS) check)
@@ -13727,7 +13727,7 @@ info-mpfr: \
     configure-mpfr 
 	@[ -f ./mpfr/Makefile ] || exit 0; \
 	r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	$(HOST_EXPORTS) \
 	for flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS="-DNO_ASM"; do \
 	  eval `echo "$$flag" | sed -e "s|^\([^=]*\)=\(.*\)|\1='\2'; export \1|"`; \
@@ -13752,7 +13752,7 @@ dvi-mpfr: \
     configure-mpfr 
 	@[ -f ./mpfr/Makefile ] || exit 0; \
 	r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	$(HOST_EXPORTS) \
 	for flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS="-DNO_ASM"; do \
 	  eval `echo "$$flag" | sed -e "s|^\([^=]*\)=\(.*\)|\1='\2'; export \1|"`; \
@@ -13777,7 +13777,7 @@ pdf-mpfr: \
     configure-mpfr 
 	@[ -f ./mpfr/Makefile ] || exit 0; \
 	r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	$(HOST_EXPORTS) \
 	for flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS="-DNO_ASM"; do \
 	  eval `echo "$$flag" | sed -e "s|^\([^=]*\)=\(.*\)|\1='\2'; export \1|"`; \
@@ -13802,7 +13802,7 @@ html-mpfr: \
     configure-mpfr 
 	@[ -f ./mpfr/Makefile ] || exit 0; \
 	r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	$(HOST_EXPORTS) \
 	for flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS="-DNO_ASM"; do \
 	  eval `echo "$$flag" | sed -e "s|^\([^=]*\)=\(.*\)|\1='\2'; export \1|"`; \
@@ -13827,7 +13827,7 @@ TAGS-mpfr: \
     configure-mpfr 
 	@[ -f ./mpfr/Makefile ] || exit 0; \
 	r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	$(HOST_EXPORTS) \
 	for flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS="-DNO_ASM"; do \
 	  eval `echo "$$flag" | sed -e "s|^\([^=]*\)=\(.*\)|\1='\2'; export \1|"`; \
@@ -13853,7 +13853,7 @@ install-info-mpfr: \
     info-mpfr 
 	@[ -f ./mpfr/Makefile ] || exit 0; \
 	r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	$(HOST_EXPORTS) \
 	for flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS="-DNO_ASM"; do \
 	  eval `echo "$$flag" | sed -e "s|^\([^=]*\)=\(.*\)|\1='\2'; export \1|"`; \
@@ -13879,7 +13879,7 @@ install-pdf-mpfr: \
     pdf-mpfr 
 	@[ -f ./mpfr/Makefile ] || exit 0; \
 	r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	$(HOST_EXPORTS) \
 	for flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS="-DNO_ASM"; do \
 	  eval `echo "$$flag" | sed -e "s|^\([^=]*\)=\(.*\)|\1='\2'; export \1|"`; \
@@ -13905,7 +13905,7 @@ install-html-mpfr: \
     html-mpfr 
 	@[ -f ./mpfr/Makefile ] || exit 0; \
 	r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	$(HOST_EXPORTS) \
 	for flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS="-DNO_ASM"; do \
 	  eval `echo "$$flag" | sed -e "s|^\([^=]*\)=\(.*\)|\1='\2'; export \1|"`; \
@@ -13930,7 +13930,7 @@ installcheck-mpfr: \
     configure-mpfr 
 	@[ -f ./mpfr/Makefile ] || exit 0; \
 	r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	$(HOST_EXPORTS) \
 	for flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS="-DNO_ASM"; do \
 	  eval `echo "$$flag" | sed -e "s|^\([^=]*\)=\(.*\)|\1='\2'; export \1|"`; \
diff --git a/config-ml.in b/config-ml.in
index 47f153350e4..410f3848e3c 100644
--- a/config-ml.in
+++ b/config-ml.in
@@ -346,6 +346,36 @@ m68*-*-*)
 	    esac
 	  done
 	fi
+	case "${host}" in
+	  *-*-mint*)
+            # mshort variants are only generated for libgcc
+            # mfastcall variants are only generated for libgcc & libstdc++
+	    case "${srcdir}" in
+	      */libgcc ) : ;;
+	      */libstdc++-v3)
+	        old_multidirs="${multidirs}"
+	        multidirs=""
+	        for x in ${old_multidirs}; do
+		  case "$x" in
+		    *mshort* ) : ;;
+		    *) multidirs="${multidirs} ${x}" ;;
+		  esac
+		done
+		;;
+	      *)
+	        old_multidirs="${multidirs}"
+	        multidirs=""
+	        for x in ${old_multidirs}; do
+		  case "$x" in
+		    *mshort* ) : ;;
+		    *mfastcall* ) : ;;
+		    *) multidirs="${multidirs} ${x}" ;;
+		  esac
+		done
+		;;
+	    esac
+	    ;;
+	esac
 	;;
 mips*-*-*)
 	if [ x$enable_single_float = xno ]
diff --git a/config.guess b/config.guess
index 69ed3e573bb..2e96c95816e 100755
--- a/config.guess
+++ b/config.guess
@@ -439,22 +439,22 @@ case "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" in
     # MiNT.  But MiNT is downward compatible to TOS, so this should
     # be no problem.
     atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)
-	echo m68k-atari-mint${UNAME_RELEASE}
+	echo m68k-atari-mint
 	exit ;;
     atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)
-	echo m68k-atari-mint${UNAME_RELEASE}
+	echo m68k-atari-mint
 	exit ;;
     *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)
-	echo m68k-atari-mint${UNAME_RELEASE}
+	echo m68k-atari-mint
 	exit ;;
     milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)
-	echo m68k-milan-mint${UNAME_RELEASE}
+	echo m68k-milan-mint
 	exit ;;
     hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)
-	echo m68k-hades-mint${UNAME_RELEASE}
+	echo m68k-hades-mint
 	exit ;;
     *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)
-	echo m68k-unknown-mint${UNAME_RELEASE}
+	echo m68k-unknown-mint
 	exit ;;
     m68k:machten:*:*)
 	echo m68k-apple-machten${UNAME_RELEASE}
diff --git a/config.sub b/config.sub
index 62b82599d98..53c208f6954 100755
--- a/config.sub
+++ b/config.sub
@@ -235,6 +235,10 @@ case $os in
 	-psos*)
 		os=-psos
 		;;
+	-mintelf)
+		basic_machine=m68k-atari
+		os=-mintelf
+		;;
 	-mint | -mint[0-9]*)
 		basic_machine=m68k-atari
 		os=-mint
@@ -1527,6 +1531,9 @@ case $os in
 	-xenix)
 		os=-xenix
 		;;
+	-*mintelf)
+		os=-mintelf
+		;;
 	-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)
 		os=-mint
 		;;
diff --git a/config/lib-ld.m4 b/config/lib-ld.m4
index 11d0ce77342..947835568a4 100644
--- a/config/lib-ld.m4
+++ b/config/lib-ld.m4
@@ -47,7 +47,7 @@ if test "$GCC" = yes; then
   # Check if gcc -print-prog-name=ld gives a path.
   AC_MSG_CHECKING([for ld used by GCC])
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
diff --git a/config/lthostflags.m4 b/config/lthostflags.m4
index bc0f59ee79e..253e7aa6b06 100644
--- a/config/lthostflags.m4
+++ b/config/lthostflags.m4
@@ -13,7 +13,7 @@ AC_DEFUN([ACX_LT_HOST_FLAGS], [
 AC_REQUIRE([AC_CANONICAL_SYSTEM])
 
 case $host in
-  *-cygwin* | *-mingw*)
+  *-cygwin* | *-mingw* | *-msys*)
     # 'host' will be top-level target in the case of a target lib,
     # we must compare to with_cross_host to decide if this is a native
     # or cross-compiler and select where to install dlls appropriately.
diff --git a/config/mmap.m4 b/config/mmap.m4
index fba0d9d3657..5342ed8ab2c 100644
--- a/config/mmap.m4
+++ b/config/mmap.m4
@@ -42,7 +42,7 @@ else
    # Systems known to be in this category are Windows (all variants),
    # VMS, and Darwin.
    case "$host_os" in
-     *vms* | cygwin* | pe | mingw* | darwin* | ultrix* | hpux10* | hpux11.00)
+     *vms* | cygwin* | pe | mingw* | msys* | darwin* | ultrix* | hpux10* | hpux11.00)
         gcc_cv_func_mmap_dev_zero=no ;;
      *)
         gcc_cv_func_mmap_dev_zero=yes;;
@@ -74,7 +74,7 @@ else
    # above for use of /dev/zero.
    # Systems known to be in this category are Windows, VMS, and SCO Unix.
    case "$host_os" in
-     *vms* | cygwin* | pe | mingw* | sco* | udk* )
+     *vms* | cygwin* | pe | mingw* | msys* | sco* | udk* )
         gcc_cv_func_mmap_anon=no ;;
      *)
         gcc_cv_func_mmap_anon=yes;;
diff --git a/config/picflag.m4 b/config/picflag.m4
index 8b106f9af88..b136478cf36 100644
--- a/config/picflag.m4
+++ b/config/picflag.m4
@@ -25,7 +25,9 @@ case "${$2}" in
 	;;
     i[[34567]]86-*-cygwin* | x86_64-*-cygwin*)
 	;;
-    i[[34567]]86-*-mingw* | x86_64-*-mingw*)
+    i[[34567]]86-*-mingw* | x86_64-*-mingw* | x86_64-*-msys*)
+	;;
+    *-*-mint*)
 	;;
     i[[34567]]86-*-interix[[3-9]]*)
 	# Interix 3.x gcc -fpic/-fPIC options generate broken code.
diff --git a/configure b/configure
index 32ee91f949e..9522779ec12 100755
--- a/configure
+++ b/configure
@@ -3163,6 +3163,9 @@ if test x$enable_libgomp = x ; then
 	;;
     nvptx*-*-*)
 	;;
+    *-*-mint*)
+        # Enable libmudflap by default in MiNT.
+	;;
     *)
 	noconfigdirs="$noconfigdirs target-libgomp"
 	;;
@@ -3527,6 +3530,9 @@ case "${target}" in
   m68hc11-*-*|m6811-*-*|m68hc12-*-*|m6812-*-*)
     libgloss_dir=m68hc11
     ;;
+  m68k-*-mint*)
+    noconfigdirs="$noconfigdirs target-libiberty"
+    ;;
   m68*-*-* | fido-*-*)
     libgloss_dir=m68k
     ;;
@@ -7541,7 +7547,7 @@ case "$target" in
   x86_64-*mingw* | *-w64-mingw*)
   # MinGW-w64 does not use newlib, nor does it use winsup. It may,
   # however, use a symlink named 'mingw' in ${prefix} .
-    FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L${prefix}/${target}/lib -L${prefix}/mingw/lib -isystem ${prefix}/${target}/include -isystem ${prefix}/mingw/include'
+    FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L${prefix}/${target}/lib -L${prefix}/lib -isystem ${prefix}/${target}/include -isystem ${prefix}/include'
     ;;
   *-mingw*)
   # MinGW can't be handled as Cygwin above since it does not use newlib.
diff --git a/configure.ac b/configure.ac
index 12377499295..27962da2ef1 100644
--- a/configure.ac
+++ b/configure.ac
@@ -515,6 +515,9 @@ if test x$enable_libgomp = x ; then
 	;;
     nvptx*-*-*)
 	;;
+    *-*-mint*)
+        # Enable libmudflap by default in MiNT.
+	;;
     *)
 	noconfigdirs="$noconfigdirs target-libgomp"
 	;;
@@ -855,6 +858,9 @@ case "${target}" in
   m68hc11-*-*|m6811-*-*|m68hc12-*-*|m6812-*-*)
     libgloss_dir=m68hc11
     ;;
+  m68k-*-mint*)
+    noconfigdirs="$noconfigdirs target-libiberty"
+    ;;
   m68*-*-* | fido-*-*)
     libgloss_dir=m68k
     ;;
@@ -3134,7 +3140,7 @@ case "$target" in
   x86_64-*mingw* | *-w64-mingw*)
   # MinGW-w64 does not use newlib, nor does it use winsup. It may,
   # however, use a symlink named 'mingw' in ${prefix} .
-    FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L${prefix}/${target}/lib -L${prefix}/mingw/lib -isystem ${prefix}/${target}/include -isystem ${prefix}/mingw/include'
+    FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L${prefix}/${target}/lib -L${prefix}/lib -isystem ${prefix}/${target}/include -isystem ${prefix}/include'
     ;;
   *-mingw*)
   # MinGW can't be handled as Cygwin above since it does not use newlib.
diff --git a/fixincludes/configure b/fixincludes/configure
index e4b03fd588c..6c7149b4d83 100755
--- a/fixincludes/configure
+++ b/fixincludes/configure
@@ -4754,7 +4754,8 @@ else
   case $host in
 	i?86-*-msdosdjgpp* | \
 	i?86-*-mingw32* | \
-	x86_64-*-mingw32* | \
+	x86_64-*-mingw* | \
+	*-*-msys* | \
 	*-*-beos* | \
         *-*-*vms*)
 		TARGET=twoprocess
@@ -5286,7 +5287,7 @@ else
    # Systems known to be in this category are Windows (all variants),
    # VMS, and Darwin.
    case "$host_os" in
-     *vms* | cygwin* | pe | mingw* | darwin* | ultrix* | hpux10* | hpux11.00)
+     *vms* | cygwin* | pe | mingw* | msys* | darwin* | ultrix* | hpux10* | hpux11.00)
         gcc_cv_func_mmap_dev_zero=no ;;
      *)
         gcc_cv_func_mmap_dev_zero=yes;;
@@ -5343,7 +5344,7 @@ else
    # above for use of /dev/zero.
    # Systems known to be in this category are Windows, VMS, and SCO Unix.
    case "$host_os" in
-     *vms* | cygwin* | pe | mingw* | sco* | udk* )
+     *vms* | cygwin* | pe | mingw* | msys* | sco* | udk* )
         gcc_cv_func_mmap_anon=no ;;
      *)
         gcc_cv_func_mmap_anon=yes;;
diff --git a/fixincludes/configure.ac b/fixincludes/configure.ac
index 190f5382874..4bcea1aee43 100644
--- a/fixincludes/configure.ac
+++ b/fixincludes/configure.ac
@@ -52,7 +52,8 @@ fi],
 [case $host in
 	i?86-*-msdosdjgpp* | \
 	i?86-*-mingw32* | \
-	x86_64-*-mingw32* | \
+	x86_64-*-mingw* | \
+	*-*-msys* | \
 	*-*-beos* | \
         *-*-*vms*)
 		TARGET=twoprocess
diff --git a/fixincludes/mkfixinc.sh b/fixincludes/mkfixinc.sh
index 0f9648608e9..58604ca1c6d 100755
--- a/fixincludes/mkfixinc.sh
+++ b/fixincludes/mkfixinc.sh
@@ -13,7 +13,7 @@ target=fixinc.sh
 case $machine in
     i?86-*-cygwin* | \
     i?86-*-mingw32* | \
-    x86_64-*-mingw32* | \
+    x86_64-*-mingw* | \
     powerpc-*-eabisim* | \
     powerpc-*-eabi*    | \
     powerpc-*-rtems*   | \
diff --git a/gcc/Makefile.in b/gcc/Makefile.in
index f675e073ecc..7307e8f3ffc 100644
--- a/gcc/Makefile.in
+++ b/gcc/Makefile.in
@@ -436,7 +436,7 @@ USER_H_INC_NEXT_POST = @user_headers_inc_next_post@
 # The GCC to use for compiling crt*.o.
 # Usually the one we just built.
 # Don't use this as a dependency--use $(GCC_PASSES).
-GCC_FOR_TARGET = $(STAGE_CC_WRAPPER) ./xgcc -B./ -B$(build_tooldir)/bin/ -isystem $(build_tooldir)/include -isystem $(build_tooldir)/sys-include -L$(objdir)/../ld
+GCC_FOR_TARGET = $(STAGE_CC_WRAPPER) ./xgcc -B./ -B$(mingw_build_tooldir)/bin/ -isystem $(mingw_build_tooldir)/include -isystem $(mingw_build_tooldir)/sys-include -L$(objdir)/../ld
 
 # Set if the compiler was configured with --with-build-sysroot.
 SYSROOT_CFLAGS_FOR_TARGET = @SYSROOT_CFLAGS_FOR_TARGET@
@@ -674,6 +674,10 @@ man7ext = .7
 objext = .o
 exeext = @host_exeext@
 build_exeext = @build_exeext@
+EVAL_MINGW := case `uname -s` in MINGW*) echo yes;; *) echo no;; esac
+MINGW := $(shell $(EVAL_MINGW))
+mingw_srcdir := $(shell if test "${MINGW}" = yes; then cmd //c echo ${srcdir}; else echo ${srcdir}; fi)
+mingw_build_tooldir := $(shell if test "${MINGW}" = yes; then cmd //c echo ${build_tooldir}; else echo ${build_tooldir}; fi)
 
 # Directory in which to put man pages.
 mandir = @mandir@
@@ -887,7 +891,7 @@ REVISION_s  := "\"\""
 endif
 
 # Shorthand variables for dependency lists.
-DUMPFILE_H = $(srcdir)/../libcpp/include/line-map.h dumpfile.h
+DUMPFILE_H = $(mingw_srcdir)/../libcpp/include/line-map.h dumpfile.h
 VEC_H = vec.h statistics.h $(GGC_H)
 HASH_TABLE_H = $(HASHTAB_H) hash-table.h $(GGC_H)
 EXCEPT_H = except.h $(HASHTAB_H)
@@ -952,21 +956,21 @@ GCC_H = gcc.h version.h $(DIAGNOSTIC_CORE_H)
 GGC_H = ggc.h gtype-desc.h statistics.h
 TIMEVAR_H = timevar.h timevar.def
 INSN_ATTR_H = insn-attr.h insn-attr-common.h $(INSN_ADDR_H)
-INSN_ADDR_H = $(srcdir)/insn-addr.h
+INSN_ADDR_H = $(mingw_srcdir)/insn-addr.h
 C_COMMON_H = c-family/c-common.h c-family/c-common.def $(TREE_H) \
 	$(SPLAY_TREE_H) $(CPPLIB_H) $(GGC_H) $(DIAGNOSTIC_CORE_H)
 C_PRAGMA_H = c-family/c-pragma.h $(CPPLIB_H)
 C_TREE_H = c/c-tree.h $(C_COMMON_H) $(DIAGNOSTIC_H)
-SYSTEM_H = system.h hwint.h $(srcdir)/../include/libiberty.h \
-	$(srcdir)/../include/safe-ctype.h $(srcdir)/../include/filenames.h
+SYSTEM_H = system.h hwint.h $(mingw_srcdir)/../include/libiberty.h \
+	$(mingw_srcdir)/../include/safe-ctype.h $(mingw_srcdir)/../include/filenames.h
 PREDICT_H = predict.h predict.def
-CPPLIB_H = $(srcdir)/../libcpp/include/line-map.h \
-	$(srcdir)/../libcpp/include/cpplib.h
-INPUT_H = $(srcdir)/../libcpp/include/line-map.h input.h
+CPPLIB_H = $(mingw_srcdir)/../libcpp/include/line-map.h \
+	$(mingw_srcdir)/../libcpp/include/cpplib.h
+INPUT_H = $(mingw_srcdir)/../libcpp/include/line-map.h input.h
 OPTS_H = $(INPUT_H) $(VEC_H) opts.h $(OBSTACK_H)
-SYMTAB_H = $(srcdir)/../libcpp/include/symtab.h $(OBSTACK_H)
-CPP_ID_DATA_H = $(CPPLIB_H) $(srcdir)/../libcpp/include/cpp-id-data.h
-CPP_INTERNAL_H = $(srcdir)/../libcpp/internal.h $(CPP_ID_DATA_H)
+SYMTAB_H = $(mingw_srcdir)/../libcpp/include/symtab.h $(OBSTACK_H)
+CPP_ID_DATA_H = $(CPPLIB_H) $(mingw_srcdir)/../libcpp/include/cpp-id-data.h
+CPP_INTERNAL_H = $(mingw_srcdir)/../libcpp/internal.h $(CPP_ID_DATA_H)
 TREE_DUMP_H = tree-dump.h $(SPLAY_TREE_H) $(DUMPFILE_H)
 TREE_PASS_H = tree-pass.h $(TIMEVAR_H) $(DUMPFILE_H)
 TREE_SSA_H = tree-ssa.h tree-ssa-operands.h \
@@ -1150,7 +1154,7 @@ FLAGS_TO_PASS = \
 	"prefix=$(prefix)" \
 	"local_prefix=$(local_prefix)" \
 	"gxx_include_dir=$(gcc_gxx_include_dir)" \
-	"build_tooldir=$(build_tooldir)" \
+	"build_tooldir=$(mingw_build_tooldir)" \
 	"gcc_tooldir=$(gcc_tooldir)" \
 	"bindir=$(bindir)" \
 	"libexecsubdir=$(libexecsubdir)" \
@@ -1956,7 +1960,7 @@ xgcc$(exeext): $(GCC_OBJS) c/gccspec.o libcommon-target.a $(LIBDEPS) \
 	$(EXTRA_GCC_OBJS)
 	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) \
 	  c/gccspec.o $(EXTRA_GCC_OBJS) libcommon-target.a \
-	  $(EXTRA_GCC_LIBS) $(LIBS)
+	  $(EXTRA_GCC_LIBS) $(LIBS) $(GLIBC_SO)
 
 # cpp is to cpp0 as e.g. g++ is to cc1plus: Just another driver.
 # It is part of c-family because the handled extensions are hard-coded
@@ -1965,7 +1969,7 @@ cpp$(exeext): $(GCC_OBJS) c-family/cppspec.o libcommon-target.a $(LIBDEPS) \
 	$(EXTRA_GCC_OBJS)
 	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) \
 	  c-family/cppspec.o $(EXTRA_GCC_OBJS) libcommon-target.a \
-	  $(EXTRA_GCC_LIBS) $(LIBS)
+	  $(EXTRA_GCC_LIBS) $(LIBS) $(GLIBC_SO)
 
 # Dump a specs file to make -B./ read these specs over installed ones.
 $(SPECS): xgcc$(exeext)
@@ -2045,15 +2049,15 @@ AR_LIBS = @COLLECT2_LIBS@
 
 gcc-ar$(exeext): gcc-ar.o $(AR_OBJS) $(LIBDEPS)
 	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) gcc-ar.o -o $@ \
-		$(AR_OBJS) $(LIBS) $(AR_LIBS)
+		$(AR_OBJS) $(LIBS) $(AR_LIBS) $(GLIBC_SO)
 
 gcc-nm$(exeext): gcc-nm.o $(AR_OBJS) $(LIBDEPS)
 	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) gcc-nm.o -o $@ \
-		$(AR_OBJS) $(LIBS) $(AR_LIBS)
+		$(AR_OBJS) $(LIBS) $(AR_LIBS) $(GLIBC_SO)
 
 gcc-ranlib$(exeext): gcc-ranlib.o $(AR_OBJS) $(LIBDEPS)
 	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) gcc-ranlib.o -o $@ \
-		$(AR_OBJS) $(LIBS) $(AR_LIBS)
+		$(AR_OBJS) $(LIBS) $(AR_LIBS) $(GLIBC_SO)
 
 CFLAGS-gcc-ar.o += $(DRIVER_DEFINES) \
 	-DTARGET_MACHINE=\"$(target_noncanonical)\" \
@@ -2081,7 +2085,7 @@ COLLECT2_LIBS = @COLLECT2_LIBS@
 collect2$(exeext): $(COLLECT2_OBJS) $(LIBDEPS)
 # Don't try modifying collect2 (aka ld) in place--it might be linking this.
 	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o T$@ \
-		$(COLLECT2_OBJS) $(LIBS) $(COLLECT2_LIBS)
+		$(COLLECT2_OBJS) $(LIBS) $(COLLECT2_LIBS) $(GLIBC_SO)
 	mv -f T$@ $@
 
 CFLAGS-collect2.o += -DTARGET_MACHINE=\"$(target_noncanonical)\" \
@@ -2090,7 +2094,7 @@ CFLAGS-collect2.o += -DTARGET_MACHINE=\"$(target_noncanonical)\" \
 LTO_WRAPPER_OBJS = lto-wrapper.o collect-utils.o ggc-none.o
 lto-wrapper$(exeext): $(LTO_WRAPPER_OBJS) libcommon-target.a $(LIBDEPS)
 	+$(LINKER) $(ALL_COMPILERFLAGS) $(LDFLAGS) -o T$@ \
-	   $(LTO_WRAPPER_OBJS) libcommon-target.a $(LIBS)
+	   $(LTO_WRAPPER_OBJS) libcommon-target.a $(LIBS) $(GLIBC_SO)
 	mv -f T$@ $@
 
 # Files used by all variants of C or by the stand-alone pre-processor.
@@ -2435,9 +2439,9 @@ gimple-match.c: s-match gimple-match-head.c ; @true
 generic-match.c: s-match generic-match-head.c ; @true
 
 s-match: build/genmatch$(build_exeext) $(srcdir)/match.pd cfn-operators.pd
-	$(RUN_GEN) build/genmatch$(build_exeext) --gimple $(srcdir)/match.pd \
+	$(RUN_GEN) build/genmatch$(build_exeext) --gimple $(mingw_srcdir)/match.pd \
 	    > tmp-gimple-match.c
-	$(RUN_GEN) build/genmatch$(build_exeext) --generic $(srcdir)/match.pd \
+	$(RUN_GEN) build/genmatch$(build_exeext) --generic $(mingw_srcdir)/match.pd \
 	    > tmp-generic-match.c
 	$(SHELL) $(srcdir)/../move-if-change tmp-gimple-match.c \
 	    					gimple-match.c
@@ -2541,7 +2545,7 @@ GENGTYPE_FLAGS=
 
 gtyp-input.list: s-gtyp-input ; @true
 s-gtyp-input: Makefile
-	@: $(call write_entries_to_file,$(GTFILES),tmp-gi.list)
+	@: $(call write_entries_to_file,$(patsubst $(srcdir)/%, $(mingw_srcdir)/%, $(GTFILES)),tmp-gi.list)
 	$(SHELL) $(srcdir)/../move-if-change tmp-gi.list gtyp-input.list
 	$(STAMP) s-gtyp-input
 
@@ -2549,7 +2553,7 @@ s-gtype: build/gengtype$(build_exeext) $(filter-out [%], $(GTFILES)) \
 	 gtyp-input.list
 # First, parse all files and save a state file.
 	$(RUN_GEN) build/gengtype$(build_exeext) $(GENGTYPE_FLAGS) \
-                    -S $(srcdir) -I gtyp-input.list -w tmp-gtype.state
+                    -S $(mingw_srcdir) -I gtyp-input.list -w tmp-gtype.state
 # Second, read the state file and generate all files.  This ensure that
 # gtype.state is correctly read:
 	$(SHELL) $(srcdir)/../move-if-change tmp-gtype.state gtype.state
@@ -2827,12 +2831,12 @@ s-iov: build/gcov-iov$(build_exeext) $(BASEVER) $(DEVPHASE)
 GCOV_OBJS = gcov.o
 gcov$(exeext): $(GCOV_OBJS) $(LIBDEPS)
 	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) $(GCOV_OBJS) \
-		hash-table.o ggc-none.o $(LIBS) -o $@
+		hash-table.o ggc-none.o $(LIBS) $(GLIBC_SO) -o $@
 GCOV_DUMP_OBJS = gcov-dump.o
 gcov-dump$(exeext): $(GCOV_DUMP_OBJS) $(LIBDEPS)
 	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) $(GCOV_DUMP_OBJS) \
 		hash-table.o ggc-none.o\
-		$(LIBS) -o $@
+		$(LIBS) $(GLIBC_SO) -o $@
 
 GCOV_TOOL_DEP_FILES = $(srcdir)/../libgcc/libgcov-util.c gcov-io.c $(GCOV_IO_H) \
   $(srcdir)/../libgcc/libgcov-driver.c $(srcdir)/../libgcc/libgcov-driver-system.c \
diff --git a/gcc/ada/a-intnam-mint.ads b/gcc/ada/a-intnam-mint.ads
new file mode 100644
index 00000000000..44a644c0209
--- /dev/null
+++ b/gcc/ada/a-intnam-mint.ads
@@ -0,0 +1,154 @@
+------------------------------------------------------------------------------
+--                                                                          --
+--                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --
+--                                                                          --
+--                   A D A . I N T E R R U P T S . N A M E S                --
+--                                                                          --
+--                                  S p e c                                 --
+--                                                                          --
+--          Copyright (C) 1991-2020, Free Software Foundation, Inc.         --
+--                                                                          --
+-- GNARL is free software; you can  redistribute it  and/or modify it under --
+-- terms of the  GNU General Public License as published  by the Free Soft- --
+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --
+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --
+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --
+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --
+--                                                                          --
+-- As a special exception under Section 7 of GPL version 3, you are granted --
+-- additional permissions described in the GCC Runtime Library Exception,   --
+-- version 3.1, as published by the Free Software Foundation.               --
+--                                                                          --
+-- You should have received a copy of the GNU General Public License and    --
+-- a copy of the GCC Runtime Library Exception along with this program;     --
+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --
+-- <http://www.gnu.org/licenses/>.                                          --
+--                                                                          --
+-- GNARL was developed by the GNARL team at Florida State University.       --
+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --
+--                                                                          --
+------------------------------------------------------------------------------
+
+--  This is a GNU/Linux version of this package
+
+--  The following signals are reserved by the run time:
+
+--  SIGFPE, SIGILL, SIGSEGV, SIGBUS, SIGTRAP, SIGABRT, SIGINT,
+--  SIGUSR1, SIGUSR2, SIGVTALRM, SIGUNUSED, SIGSTOP, SIGKILL
+
+--  The pragma Unreserve_All_Interrupts affects the following signal(s):
+
+--  SIGINT: made available for Ada handler
+
+--  This target-dependent package spec contains names of interrupts
+--  supported by the local system.
+
+with System.OS_Interface;
+
+package Ada.Interrupts.Names is
+
+   --  All identifiers in this unit are implementation defined
+
+   pragma Implementation_Defined;
+
+   --  Beware that the mapping of names to signals may be many-to-one. There
+   --  may be aliases. Also, for all signal names that are not supported on the
+   --  current system the value of the corresponding constant will be zero.
+
+   SIGHUP : constant Interrupt_ID :=
+     System.OS_Interface.SIGHUP;      --  hangup
+
+   SIGINT : constant Interrupt_ID :=
+     System.OS_Interface.SIGINT;      --  interrupt (rubout)
+
+   SIGQUIT : constant Interrupt_ID :=
+     System.OS_Interface.SIGQUIT;     --  quit (ASCD FS)
+
+   SIGILL : constant Interrupt_ID :=
+     System.OS_Interface.SIGILL;      --  illegal instruction (not reset)
+
+   SIGTRAP : constant Interrupt_ID :=
+     System.OS_Interface.SIGTRAP;     --  trace trap (not reset)
+
+   SIGIOT : constant Interrupt_ID :=
+     System.OS_Interface.SIGIOT;      --  IOT instruction
+
+   SIGABRT : constant Interrupt_ID := --  used by abort,
+     System.OS_Interface.SIGABRT;     --  replace SIGIOT in the  future
+
+   SIGFPE : constant Interrupt_ID :=
+     System.OS_Interface.SIGFPE;      --  floating point exception
+
+   SIGKILL : constant Interrupt_ID :=
+     System.OS_Interface.SIGKILL;     --  kill (cannot be caught or ignored)
+
+   SIGBUS : constant Interrupt_ID :=
+     System.OS_Interface.SIGBUS;      --  bus error
+
+   SIGSEGV : constant Interrupt_ID :=
+     System.OS_Interface.SIGSEGV;     --  segmentation violation
+
+   SIGPIPE : constant Interrupt_ID := --  write on a pipe with
+     System.OS_Interface.SIGPIPE;     --  no one to read it
+
+   SIGALRM : constant Interrupt_ID :=
+     System.OS_Interface.SIGALRM;     --  alarm clock
+
+   SIGTERM : constant Interrupt_ID :=
+     System.OS_Interface.SIGTERM;     --  software termination signal from kill
+
+   SIGUSR1 : constant Interrupt_ID :=
+     System.OS_Interface.SIGUSR1;     --  user defined signal 1
+
+   SIGUSR2 : constant Interrupt_ID :=
+     System.OS_Interface.SIGUSR2;     --  user defined signal 2
+
+   SIGCLD : constant Interrupt_ID :=
+     System.OS_Interface.SIGCLD;      --  child status change
+
+   SIGCHLD : constant Interrupt_ID :=
+     System.OS_Interface.SIGCHLD;     --  4.3BSD's/POSIX name for SIGCLD
+
+   SIGWINCH : constant Interrupt_ID :=
+     System.OS_Interface.SIGWINCH;    --  window size change
+
+   SIGURG : constant Interrupt_ID :=
+     System.OS_Interface.SIGURG;      --  urgent condition on IO channel
+
+   SIGIO : constant Interrupt_ID :=   --  input/output possible,
+     System.OS_Interface.SIGIO;       --  SIGPOLL alias (Solaris)
+
+   SIGSTOP : constant Interrupt_ID :=
+     System.OS_Interface.SIGSTOP;     --  stop (cannot be caught or ignored)
+
+   SIGTSTP : constant Interrupt_ID :=
+     System.OS_Interface.SIGTSTP;     --  user stop requested from tty
+
+   SIGCONT : constant Interrupt_ID :=
+     System.OS_Interface.SIGCONT;     --  stopped process has been continued
+
+   SIGTTIN : constant Interrupt_ID :=
+     System.OS_Interface.SIGTTIN;     --  background tty read attempted
+
+   SIGTTOU : constant Interrupt_ID :=
+     System.OS_Interface.SIGTTOU;     --  background tty write attempted
+
+   SIGVTALRM : constant Interrupt_ID :=
+     System.OS_Interface.SIGVTALRM;   --  virtual timer expired
+
+   SIGPROF : constant Interrupt_ID :=
+     System.OS_Interface.SIGPROF;     --  profiling timer expired
+
+   SIGXCPU : constant Interrupt_ID :=
+     System.OS_Interface.SIGXCPU;     --  CPU time limit exceeded
+
+   SIGXFSZ : constant Interrupt_ID :=
+     System.OS_Interface.SIGXFSZ;     --  filesize limit exceeded
+
+   SIGPWR : constant Interrupt_ID :=
+     System.OS_Interface.SIGPWR;        --  Power failure
+
+   SIGSYS : constant Interrupt_ID :=
+     System.OS_Interface.SIGSYS;       --  bad system call
+
+end Ada.Interrupts.Names;
diff --git a/gcc/ada/adaint.c b/gcc/ada/adaint.c
index 0915a3ffc45..7c7616bfdcc 100644
--- a/gcc/ada/adaint.c
+++ b/gcc/ada/adaint.c
@@ -87,6 +87,7 @@
 #include <sys/stat.h>
 #include <fcntl.h>
 #include <time.h>
+#include <sys/time.h>
 
 #if defined (__vxworks) || defined (__ANDROID__)
 /* S_IREAD and S_IWRITE are not defined in VxWorks or Android */
@@ -108,6 +109,16 @@
 #include "version.h"
 #endif
 
+/*
+ * these are from xm-mingw32.h, but this is only included
+ * for the target; we need those definitions here also
+ * when using MinGW as host for a cross-compiler
+ */
+#ifdef __MINGW32__
+#undef HOST_EXECUTABLE_SUFFIX
+#define HOST_EXECUTABLE_SUFFIX ".exe"
+#endif
+
 #ifdef __cplusplus
 extern "C" {
 #endif
@@ -193,6 +204,8 @@ UINT __gnat_current_ccs_encoding;
 #include <signal.h>
 #undef DIR_SEPARATOR
 #define DIR_SEPARATOR '\\'
+#undef PATH_SEPARATOR
+#define PATH_SEPARATOR ';'
 
 #else
 #include <utime.h>
diff --git a/gcc/ada/ctrl_c.c b/gcc/ada/ctrl_c.c
index b1bd08527a7..8939280e224 100644
--- a/gcc/ada/ctrl_c.c
+++ b/gcc/ada/ctrl_c.c
@@ -92,6 +92,9 @@ __gnat_install_int_handler (void (*proc) (void))
   if (sigint_intercepted == 0)
     {
       act.sa_handler = __gnat_int_handler;
+#ifndef SA_RESTART
+#define SA_RESTART 0
+#endif
 #if defined (__Lynx__) || defined (VMS) || defined(__DJGPP__)
       /* LynxOS, VMS and DJGPP do not support SA_RESTART. */
       act.sa_flags = 0;
diff --git a/gcc/ada/errno.c b/gcc/ada/errno.c
index 2fbeacc3ec1..5004884d658 100644
--- a/gcc/ada/errno.c
+++ b/gcc/ada/errno.c
@@ -58,7 +58,7 @@ __get_errno(void)
   return errno;
 }
 
-#ifndef __ANDROID__
+#if !defined(__ANDROID__) && !defined(__set_errno)
 void
 __set_errno(int err)
 {
diff --git a/gcc/ada/g-sechas.ads b/gcc/ada/g-sechas.ads
index 33e635ce544..4cd44ab9d01 100644
--- a/gcc/ada/g-sechas.ads
+++ b/gcc/ada/g-sechas.ads
@@ -45,7 +45,7 @@ with System;
 package GNAT.Secure_Hashes is
 
    type Buffer_Type is new String;
-   for Buffer_Type'Alignment use 8;
+   --  for Buffer_Type'Alignment use 8;
    --  Secure hash functions use a string buffer that is also accessed as an
    --  array of words, which may require up to 64 bit alignment.
 
diff --git a/gcc/ada/g-sothco.ads b/gcc/ada/g-sothco.ads
index c25f4edc701..9c7419b2908 100644
--- a/gcc/ada/g-sothco.ads
+++ b/gcc/ada/g-sothco.ads
@@ -200,7 +200,7 @@ package GNAT.Sockets.Thin_Common is
 
    type Hostent is new
      System.Storage_Elements.Storage_Array (1 .. SOSC.SIZEOF_struct_hostent);
-   for Hostent'Alignment use 8;
+   --  for Hostent'Alignment use 8;
    --  Host entry. This is an opaque type used only via the following
    --  accessor functions, because 'struct hostent' has different layouts on
    --  different platforms.
@@ -230,7 +230,7 @@ package GNAT.Sockets.Thin_Common is
 
    type Servent is new
      System.Storage_Elements.Storage_Array (1 .. SOSC.SIZEOF_struct_servent);
-   for Servent'Alignment use 8;
+   --  for Servent'Alignment use 8;
    --  Service entry. This is an opaque type used only via the following
    --  accessor functions, because 'struct servent' has different layouts on
    --  different platforms.
diff --git a/gcc/ada/gcc-interface/Make-lang.in b/gcc/ada/gcc-interface/Make-lang.in
index eb0489b4a50..f18c1bfde24 100644
--- a/gcc/ada/gcc-interface/Make-lang.in
+++ b/gcc/ada/gcc-interface/Make-lang.in
@@ -586,6 +586,7 @@ GNATBIND_OBJS = \
  ada/uintp.o      \
  ada/uname.o      \
  ada/urealp.o     \
+ ada/libcmain.o   \
  ada/widechar.o
 
 # Language-independent object files.
@@ -599,11 +600,11 @@ TARGET_ADA_SRCS =
 #  stamp target in the parent directory whenever gnat1 is rebuilt
 gnat1$(exeext): $(TARGET_ADA_SRCS) $(GNAT1_OBJS) $(ADA_BACKEND) libcommon-target.a $(LIBDEPS)
 	+$(GCC_LLINK) -o $@ $(GNAT1_OBJS) $(ADA_BACKEND) \
-	  libcommon-target.a $(LIBS) $(SYSLIBS) $(BACKENDLIBS) $(CFLAGS)
+	  libcommon-target.a $(LIBS) $(SYSLIBS) $(BACKENDLIBS) $(CFLAGS) $(GLIBC_SO)
 	$(RM) stamp-gnatlib2-rts stamp-tools
 
 gnatbind$(exeext): ada/b_gnatb.o $(CONFIG_H) $(GNATBIND_OBJS) ggc-none.o libcommon-target.a $(LIBDEPS)
-	+$(GCC_LINK) -o $@ ada/b_gnatb.o $(GNATBIND_OBJS) ggc-none.o libcommon-target.a $(LIBS) $(SYSLIBS) $(CFLAGS)
+	+$(GCC_LINK) -o $@ ada/b_gnatb.o $(GNATBIND_OBJS) ggc-none.o libcommon-target.a $(LIBS) $(SYSLIBS) $(CFLAGS) $(GLIBC_SO)
 
 # use target-gcc target-gnatmake target-gnatbind target-gnatlink
 gnattools: $(GCC_PARTS) $(CONFIG_H) prefix.o force
@@ -770,7 +771,7 @@ ada.install-common:
 	    fi ; \
 	  done; \
 	  $(RM) $(DESTDIR)$(bindir)/gnatdll$(exeext); \
-	  $(INSTALL_PROGRAM) gnatdll$(exeext) $(DESTDIR)$(bindir)/gnatdll$(exeext); \
+	  test -f gnatdll$(exeext) && $(INSTALL_PROGRAM) gnatdll$(exeext) $(DESTDIR)$(bindir)/gnatdll$(exeext); \
 	  if [ -f vxaddr2line$(exeext) ] ; \
 	  then \
 	    $(RM) $(DESTDIR)$(bindir)/vxaddr2line$(exeext); \
diff --git a/gcc/ada/gcc-interface/Makefile.in b/gcc/ada/gcc-interface/Makefile.in
index 8110261b6dd..1de639360b7 100644
--- a/gcc/ada/gcc-interface/Makefile.in
+++ b/gcc/ada/gcc-interface/Makefile.in
@@ -118,7 +118,7 @@ GNATLIBCFLAGS = -g -O2
 GNATLIBCFLAGS_FOR_C = \
   -W -Wall $(GNATLIBCFLAGS) -fexceptions -DIN_RTS -DHAVE_GETIPINFO
 PICFLAG_FOR_TARGET = @PICFLAG_FOR_TARGET@
-ALL_ADAFLAGS = $(CFLAGS) $(ADA_CFLAGS) $(ADAFLAGS)
+ALL_ADAFLAGS = $(CFLAGS) $(ADA_CFLAGS) $(ADAFLAGS) -include $(fsrcdir)/libcwrap.h
 THREAD_KIND = native
 THREADSLIB =
 GMEM_LIB =
@@ -195,7 +195,7 @@ RTSDIR = rts$(subst /,_,$(MULTISUBDIR))
 # Link flags used to build gnat tools.  By default we prefer to statically
 # link with libgcc to avoid a dependency on shared libgcc (which is tricky
 # to deal with as it may conflict with the libgcc provided by the system).
-GCC_LINK_FLAGS=-static-libstdc++ -static-libgcc
+GCC_LINK_FLAGS=
 
 # End of variables for you to override.
 
@@ -247,9 +247,9 @@ LIBS = $(LIBINTL) $(LIBICONV) $(LIBBACKTRACE) $(LIBIBERTY) $(SYSLIBS)
 LIBDEPS = $(LIBINTL_DEP) $(LIBICONV_DEP) $(LIBBACKTRACE) $(LIBIBERTY)
 # Default is no TGT_LIB; one might be passed down or something
 TGT_LIB =
-TOOLS_LIBS = ../link.o ../targext.o ../../ggc-none.o ../../libcommon-target.a \
+TOOLS_LIBS = ../link.o ../targext.o ../../ggc-none.o ../libcmain.o ../../libcommon-target.a \
   ../../libcommon.a ../../../libcpp/libcpp.a $(LIBGNAT) $(LIBINTL) $(LIBICONV) \
-  ../$(LIBBACKTRACE) ../$(LIBIBERTY) $(SYSLIBS) $(TGT_LIB)
+  ../$(LIBBACKTRACE) ../$(LIBIBERTY) $(SYSLIBS) $(TGT_LIB) $(GLIBC_SO)
 
 # Add -no-pie to TOOLS_LIBS since some of them are compiled with -fno-PIE.
 TOOLS_LIBS += @NO_PIE_FLAG@
@@ -347,6 +347,15 @@ ifeq ($(strip $(filter-out %x86_64, $(target_cpu))),)
     endif
   endif
 endif
+ifeq ($(strip $(filter-out %m68000, $(target_cpu))),)
+  ifeq ($(strip $(MULTISUBDIR)),/m68020-60)
+    target_cpu:=m68020
+  else
+    ifeq ($(strip $(MULTISUBDIR)),/m5475)
+      target_cpu:=m5475
+    endif
+  endif
+endif
 
 # ???: handle more multilib targets
 
@@ -1767,7 +1776,7 @@ ifeq ($(strip $(filter-out %djgpp,$(target_os))),)
 endif
 
 # Cygwin/Mingw32
-ifeq ($(strip $(filter-out cygwin% mingw32% pe,$(target_os))),)
+ifeq ($(strip $(filter-out cygwin% mingw% pe,$(target_os))),)
   # Cygwin provides a full Posix environment, and so we use the default
   # versions of s-memory and g-socthi rather than the Windows-specific
   # MinGW versions.  Ideally we would use all the default versions for
@@ -2091,6 +2100,33 @@ ifeq ($(strip $(filter-out m68k% linux%,$(target_cpu) $(target_os))),)
   LIBRARY_VERSION := $(LIB_VERSION)
 endif
 
+# M68K FreeMiNT
+ifeq ($(strip $(filter-out m68k% mint%,$(target_cpu) $(target_os))),)
+  LIBGNAT_TARGET_PAIRS = \
+  a-intnam.ads<a-intnam-mint.ads \
+  s-inmaop.adb<s-inmaop-posix.adb \
+  s-intman.adb<s-intman-posix.adb \
+  s-mint.ads<s-mint.ads \
+  s-osinte.adb<s-osinte-posix.adb \
+  s-osinte.ads<s-osinte-mint.ads \
+  s-osprim.adb<s-osprim-posix.adb \
+  s-taprop.adb<s-taprop-linux.adb \
+  s-tasinf.ads<s-tasinf-linux.ads \
+  s-tasinf.adb<s-tasinf-linux.adb \
+  s-taspri.ads<s-taspri-posix.ads \
+  s-tpopsp.adb<s-tpopsp-posix-foreign.adb \
+  system.ads<system-mint.ads
+
+  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb
+
+  EXTRA_GNATRTL_TASKING_OBJS=s-mint.o
+  EH_MECHANISM=-gcc
+  THREADSLIB =
+  GNATLIB_SHARED = gnatlib
+  GMEM_LIB = gmemlib
+  LIBRARY_VERSION := $(LIB_VERSION)
+endif
+
 # SH4 Linux
 ifeq ($(strip $(filter-out sh4% linux%,$(target_cpu) $(target_os))),)
   LIBGNAT_TARGET_PAIRS = \
@@ -2536,6 +2572,9 @@ GCC_LINK=$(CXX) $(GCC_LINK_FLAGS) $(ADA_INCLUDES) $(LDFLAGS)
 	                tools/$(word 1,$(subst <, ,$(PAIR)));)
 	touch ../stamp-tools
 
+../stat64.o: $(fsrcdir)/ada/stat64.c
+	$(CC) -O2 -c $< -o $@
+
 # when compiling the tools, the runtime has to be first on the path so that
 # it hides the runtime files lying with the rest of the sources
 ifeq ($(TOOLSCASE),native)
@@ -2591,23 +2630,23 @@ common-tools: ../stamp-tools
 	  gnatchop gnatcmd gnatkr gnatls gnatprep gnatxref gnatfind gnatname \
 	  gnatclean -bargs $(ADA_INCLUDES) $(GNATBIND_FLAGS)
 	$(GNATLINK) -v gnatcmd -o ../../gnat$(exeext) \
-		--GCC="$(GCC_LINK)" $(TOOLS_LIBS)
+		--GCC="$(GCC_LINK)" $(TOOLS_LIBS) ../stat64.o
 	$(GNATLINK) -v gnatchop -o ../../gnatchop$(exeext) \
-		--GCC="$(GCC_LINK)" $(TOOLS_LIBS)
+		--GCC="$(GCC_LINK)" $(TOOLS_LIBS) ../stat64.o
 	$(GNATLINK) -v gnatkr -o ../../gnatkr$(exeext) \
-		--GCC="$(GCC_LINK)" $(TOOLS_LIBS)
+		--GCC="$(GCC_LINK)" $(TOOLS_LIBS) ../stat64.o
 	$(GNATLINK) -v gnatls -o ../../gnatls$(exeext) \
-		--GCC="$(GCC_LINK)" $(TOOLS_LIBS)
+		--GCC="$(GCC_LINK)" $(TOOLS_LIBS) ../stat64.o
 	$(GNATLINK) -v gnatprep -o ../../gnatprep$(exeext) \
-		--GCC="$(GCC_LINK)" $(TOOLS_LIBS)
+		--GCC="$(GCC_LINK)" $(TOOLS_LIBS) ../stat64.o
 	$(GNATLINK) -v gnatxref -o ../../gnatxref$(exeext) \
-		--GCC="$(GCC_LINK)" $(TOOLS_LIBS)
+		--GCC="$(GCC_LINK)" $(TOOLS_LIBS) ../stat64.o
 	$(GNATLINK) -v gnatfind -o ../../gnatfind$(exeext) \
-		--GCC="$(GCC_LINK)" $(TOOLS_LIBS)
+		--GCC="$(GCC_LINK)" $(TOOLS_LIBS) ../stat64.o
 	$(GNATLINK) -v gnatname -o ../../gnatname$(exeext) \
-		--GCC="$(GCC_LINK)" $(TOOLS_LIBS)
+		--GCC="$(GCC_LINK)" $(TOOLS_LIBS) ../stat64.o
 	$(GNATLINK) -v gnatclean -o ../../gnatclean$(exeext) \
-		--GCC="$(GCC_LINK)" $(TOOLS_LIBS)
+		--GCC="$(GCC_LINK)" $(TOOLS_LIBS) ../stat64.o
 
 ../../gnatdll$(exeext): ../stamp-tools
 	$(GNATMAKE) -c $(ADA_INCLUDES) gnatdll --GCC="$(CC) $(ALL_ADAFLAGS)"
@@ -2619,22 +2658,22 @@ common-tools: ../stamp-tools
 	$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) vxaddr2line
 	$(GNATLINK) -v vxaddr2line -o $@ --GCC="$(GCC_LINK)" ../targext.o $(CLIB)
 
-gnatmake-re: ../stamp-tools
+gnatmake-re: ../stamp-tools ../stat64.o
 	$(GNATMAKE) -j0 $(ADA_INCLUDES) -u sdefault --GCC="$(CC) $(MOST_ADA_FLAGS)"
 	$(GNATMAKE) -j0 -c $(ADA_INCLUDES) gnatmake --GCC="$(CC) $(ALL_ADAFLAGS)"
 	$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) gnatmake
 	$(GNATLINK) -v gnatmake -o ../../gnatmake$(exeext) \
-		--GCC="$(GCC_LINK)" $(TOOLS_LIBS)
+		--GCC="$(GCC_LINK)" $(TOOLS_LIBS) ../stat64.o
 
 # Note the use of the "mv" command in order to allow gnatlink to be linked with
 # with the former version of gnatlink itself which cannot override itself.
 # gnatlink-re cannot be run at the same time as gnatmake-re, hence the
 # dependency
-gnatlink-re: ../stamp-tools gnatmake-re
+gnatlink-re: ../stamp-tools gnatmake-re ../stat64.o
 	$(GNATMAKE) -j0 -c $(ADA_INCLUDES) gnatlink --GCC="$(CC) $(ALL_ADAFLAGS)"
 	$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) gnatlink
 	$(GNATLINK) -v gnatlink -o ../../gnatlinknew$(exeext) \
-		    --GCC="$(GCC_LINK)" $(TOOLS_LIBS)
+		    --GCC="$(GCC_LINK)" $(TOOLS_LIBS) ../stat64.o
 	$(MV)  ../../gnatlinknew$(exeext)  ../../gnatlink$(exeext)
 
 # Needs to be built with CC=gcc
@@ -2642,11 +2681,11 @@ gnatlink-re: ../stamp-tools gnatmake-re
 #  stamp target in the parent directory whenever gnat1 is rebuilt
 
 # Likewise for the tools
-../../gnatmake$(exeext): $(P) b_gnatm.o $(GNATMAKE_OBJS)
-	+$(GCC_LINK) $(ALL_CFLAGS) -o $@ b_gnatm.o $(GNATMAKE_OBJS) $(TOOLS_LIBS) $(TOOLS1_LIBS)
+../../gnatmake$(exeext): $(P) b_gnatm.o $(GNATMAKE_OBJS) ../stat64.o
+	+$(GCC_LINK) $(ALL_CFLAGS) -o $@ b_gnatm.o $(GNATMAKE_OBJS) $(TOOLS_LIBS) $(TOOLS1_LIBS) ../stat64.o
 
-../../gnatlink$(exeext): $(P) b_gnatl.o $(GNATLINK_OBJS)
-	+$(GCC_LINK) $(ALL_CFLAGS) -o $@ b_gnatl.o $(GNATLINK_OBJS) $(TOOLS_LIBS) $(TOOLS1_LIBS)
+../../gnatlink$(exeext): $(P) b_gnatl.o $(GNATLINK_OBJS) ../stat64.o
+	+$(GCC_LINK) $(ALL_CFLAGS) -o $@ b_gnatl.o $(GNATLINK_OBJS) $(TOOLS_LIBS) $(TOOLS1_LIBS) ../stat64.o
 
 ../stamp-gnatlib-$(RTSDIR):
 	@if [ ! -f stamp-gnatlib-$(RTSDIR) ] ; \
@@ -2920,13 +2959,16 @@ gnatlib-shared-win32:
 		$(PICFLAG_FOR_TARGET) \
 		-o libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) \
 		$(GNATRTL_NONTASKING_OBJS) $(LIBGNAT_OBJS) \
-		$(SO_OPTS)libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) $(MISCLIB)
+		$(SO_OPTS)libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) \
+		-Wl,-out-implib,libgnat$(hyphen)$(LIBRARY_VERSION).dll.a \
+		$(MISCLIB)
 	cd $(RTSDIR); `echo "$(GCC_FOR_TARGET)" \
                 | sed -e 's,\./xgcc,../../xgcc,' -e 's,-B\./,-B../../,'` -shared -shared-libgcc \
 		$(PICFLAG_FOR_TARGET) \
 		-o libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \
 		$(GNATRTL_TASKING_OBJS) \
 		$(SO_OPTS)libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \
+		-Wl,-out-implib,libgnarl$(hyphen)$(LIBRARY_VERSION).dll.a \
 		$(THREADSLIB) -Wl,libgnat$(hyphen)$(LIBRARY_VERSION)$(soext)
 
 gnatlib-shared-darwin:
diff --git a/gcc/ada/i-cexten.ads b/gcc/ada/i-cexten.ads
index e256dec22ba..dd37772960f 100644
--- a/gcc/ada/i-cexten.ads
+++ b/gcc/ada/i-cexten.ads
@@ -70,7 +70,7 @@ package Interfaces.C.Extensions is
       low, high : unsigned_long_long;
    end record;
    pragma Convention (C_Pass_By_Copy, Signed_128);
-   for Signed_128'Alignment use unsigned_long_long'Alignment * 2;
+   --  for Signed_128'Alignment use unsigned_long_long'Alignment * 2;
 
    --  Types for bitfields
 
diff --git a/gcc/ada/init.c b/gcc/ada/init.c
index e180f3cfb09..386166a556a 100644
--- a/gcc/ada/init.c
+++ b/gcc/ada/init.c
@@ -274,6 +274,9 @@ __gnat_install_handler (void)
      exceptions.  Make sure that the handler isn't interrupted by another
      signal that might cause a scheduling event!  */
 
+#ifndef SA_RESTART
+#define SA_RESTART 0
+#endif
   act.sa_flags = SA_NODEFER | SA_RESTART | SA_SIGINFO;
   act.sa_sigaction = __gnat_error_handler;
   sigemptyset (&act.sa_mask);
@@ -572,9 +575,6 @@ __gnat_error_handler (int sig, siginfo_t *si ATTRIBUTE_UNUSED, void *ucontext)
 #define HAVE_GNAT_ALTERNATE_STACK 1
 /* This must be in keeping with System.OS_Interface.Alternate_Stack_Size.
    It must be larger than MINSIGSTKSZ and hopefully near 2 * SIGSTKSZ.  */
-# if 16 * 1024 < MINSIGSTKSZ
-#  error "__gnat_alternate_stack too small"
-# endif
 char __gnat_alternate_stack[16 * 1024];
 #endif
 
@@ -635,6 +635,8 @@ __gnat_install_handler (void)
 	 from stack usage by the handler itself.  */
       stack_t stack;
 
+      if (sizeof(__gnat_alternate_stack) < MINSIGSTKSZ)
+         abort();
       stack.ss_sp = __gnat_alternate_stack;
       stack.ss_size = sizeof (__gnat_alternate_stack);
       stack.ss_flags = 0;
diff --git a/gcc/ada/libcmain.c b/gcc/ada/libcmain.c
new file mode 100644
index 00000000000..fce12d9248b
--- /dev/null
+++ b/gcc/ada/libcmain.c
@@ -0,0 +1,57 @@
+#if defined(__LINUX_GLIBC_WRAP_H)
+
+/* ugly hack to get __libc_start_main versioned */
+
+#if __GLIBC_PREREQ(2, 34)
+
+#define STR_(s) #s
+#define STR(s)  STR_(s)
+#include <stdio.h>
+#include <dlfcn.h>
+
+#ifdef __UCLIBC__
+#define __libc_start_main       __uClibc_main
+#endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+int __libc_start_main(
+        int (*main)(int,char**,char**), int ac, char **av,
+        int (*init)(void), void (*fini)(void),
+        void (*rtld_fini)(void), void *stack_end);
+int __libc_start_main(
+        int (*main)(int,char**,char**), int ac, char **av,
+        int (*init)(void), void (*fini)(void),
+        void (*rtld_fini)(void), void *stack_end)
+{
+	typeof(__libc_start_main) *real_lsm;
+	if ((*(void**)&real_lsm = dlsym(RTLD_NEXT, STR(__libc_start_main))) != 0)
+		return real_lsm(main, ac, av, init, fini, rtld_fini, stack_end);
+	fputs("BUG: dlsym error\n", stderr);
+	return 1;
+}
+
+/* dito for dladdr */
+int dladdr (const void *address, Dl_info *info)
+{
+	typeof(dladdr) *real_dladdr;
+	if ((*(void**)&real_dladdr = dlsym(RTLD_NEXT, STR(dladdr))) != 0)
+		return real_dladdr(address, info);
+	if (info != 0)
+	{
+		info->dli_fname = 0;
+		info->dli_fbase = 0;
+		info->dli_sname = 0;
+		info->dli_saddr = 0;
+	}
+	return 0;
+}
+
+#ifdef __cplusplus
+}
+#endif
+#undef STR
+#undef STR_
+#endif
+#endif
diff --git a/gcc/ada/s-mint.ads b/gcc/ada/s-mint.ads
new file mode 100644
index 00000000000..86764483f4c
--- /dev/null
+++ b/gcc/ada/s-mint.ads
@@ -0,0 +1,118 @@
+------------------------------------------------------------------------------
+--                                                                          --
+--                GNU ADA RUN-TIME LIBRARY (GNARL) COMPONENTS               --
+--                                                                          --
+--                          S Y S T E M .  M I N T                          --
+--                                                                          --
+--                                  S p e c                                 --
+--                                                                          --
+--          Copyright (C) 2008-2020, Free Software Foundation, Inc.         --
+--                                                                          --
+-- GNARL is free software; you can  redistribute it  and/or modify it under --
+-- terms of the  GNU General Public License as published  by the Free Soft- --
+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --
+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --
+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --
+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --
+--                                                                          --
+-- As a special exception under Section 7 of GPL version 3, you are granted --
+-- additional permissions described in the GCC Runtime Library Exception,   --
+-- version 3.1, as published by the Free Software Foundation.               --
+--                                                                          --
+-- You should have received a copy of the GNU General Public License and    --
+-- a copy of the GCC Runtime Library Exception along with this program;     --
+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --
+-- <http://www.gnu.org/licenses/>.                                          --
+--                                                                          --
+--                                                                          --
+------------------------------------------------------------------------------
+
+--  This is the default version of this package
+
+--  This package encapsulates cpu specific differences between implementations
+--  of GNU/Linux, in order to share s-osinte-linux.ads.
+
+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma
+--  Preelaborate. This package is designed to be a bottom-level (leaf) package
+
+with Interfaces.C;
+
+package System.Mint is
+   pragma Preelaborate;
+
+   ----------
+   -- Time --
+   ----------
+
+   subtype long        is Interfaces.C.long;
+   subtype suseconds_t is Interfaces.C.long;
+   subtype time_t      is Interfaces.C.long;
+   subtype clockid_t   is Interfaces.C.int;
+
+   type timespec is record
+      tv_sec  : time_t;
+      tv_nsec : long;
+   end record;
+   pragma Convention (C, timespec);
+
+   type timeval is record
+      tv_sec  : time_t;
+      tv_usec : suseconds_t;
+   end record;
+   pragma Convention (C, timeval);
+
+   -----------
+   -- Errno --
+   -----------
+
+   EAGAIN    : constant := 236;
+   EINTR     : constant := 128;
+   EINVAL    : constant := 25;
+   ENOMEM    : constant := 39;
+   EPERM     : constant := 38;
+   ETIMEDOUT : constant := 320;
+
+   -------------
+   -- Signals --
+   -------------
+
+   SIGHUP     : constant := 1; --  hangup
+   SIGINT     : constant := 2; --  interrupt (rubout)
+   SIGQUIT    : constant := 3; --  quit (ASCD FS)
+   SIGILL     : constant := 4; --  illegal instruction (not reset)
+   SIGTRAP    : constant := 5; --  trace trap (not reset)
+   SIGIOT     : constant := 6; --  IOT instruction
+   SIGABRT    : constant := 6; --  used by abort, replace SIGIOT in the future
+   SIGPRIV    : constant := 7; --  privilege violation
+   SIGFPE     : constant := 8; --  floating point exception
+   SIGKILL    : constant := 9; --  kill (cannot be caught or ignored)
+   SIGBUS     : constant := 10; --  bus error
+   SIGSEGV    : constant := 11; --  segmentation violation
+   SIGSYS     : constant := 12; --  bad system call
+   SIGPIPE    : constant := 13; --  write on a pipe with no one to read it
+   SIGALRM    : constant := 14; --  alarm clock
+   SIGTERM    : constant := 15; --  software termination signal from kill
+   SIGURG     : constant := 16; --  urgent condition on IO channel
+   SIGSTOP    : constant := 17; --  stop (cannot be caught or ignored)
+   SIGTSTP    : constant := 18; --  user stop requested from tty
+   SIGCONT    : constant := 19; --  stopped process has been continued
+   SIGCLD     : constant := 20; --  alias for SIGCHLD
+   SIGCHLD    : constant := 20; --  child status change
+   SIGTTIN    : constant := 21; --  background tty read attempted
+   SIGTTOU    : constant := 22; --  background tty write attempted
+   SIGIO      : constant := 23; --  I/O now possible (4.2 BSD)
+   SIGXCPU    : constant := 24; --  CPU time limit exceeded
+   SIGXFSZ    : constant := 25; --  filesize limit exceeded
+   SIGVTALRM  : constant := 26; --  virtual timer expired
+   SIGPROF    : constant := 27; --  profiling timer expired
+   SIGWINCH   : constant := 28; --  window size change
+   SIGUSR1    : constant := 29; --  user defined signal 1
+   SIGUSR2    : constant := 30; --  user defined signal 2
+   SIGPWR     : constant := 31; --  power-fail restart
+
+   --  struct_sigaction
+
+   SA_SIGINFO  : constant := 16#04#;
+   SA_ONSTACK  : constant := 16#08000000#;
+
+end System.Mint;
diff --git a/gcc/ada/s-oscons-tmplt.c b/gcc/ada/s-oscons-tmplt.c
index 26140170f4b..b83713a2852 100644
--- a/gcc/ada/s-oscons-tmplt.c
+++ b/gcc/ada/s-oscons-tmplt.c
@@ -86,7 +86,7 @@ pragma Style_Checks ("M32766");
  ** a number of non-POSIX but useful/required features.
  **/
 
-#if defined (__linux__) || defined (__ANDROID__)
+#if defined (__linux__) || defined (__ANDROID__) || defined(__MINT__)
 
 /* Define _XOPEN_SOURCE to get IOV_MAX */
 # if !defined (_XOPEN_SOURCE)
@@ -157,7 +157,7 @@ pragma Style_Checks ("M32766");
 # include <_types.h>
 #endif
 
-#if defined (__linux__) || defined (__ANDROID__) || defined (__rtems__)
+#if defined (__linux__) || defined (__ANDROID__) || defined (__rtems__) || defined(__MINT__)
 # include <pthread.h>
 # include <signal.h>
 #endif
@@ -1361,7 +1361,7 @@ CND(SIZEOF_struct_hostent, "struct hostent")
 #define SIZEOF_struct_servent (sizeof (struct servent))
 CND(SIZEOF_struct_servent, "struct servent")
 
-#if defined (__linux__) || defined (__ANDROID__)
+#if defined (__linux__) || defined (__ANDROID__) || defined(__MINT__)
 #define SIZEOF_sigset (sizeof (sigset_t))
 CND(SIZEOF_sigset, "sigset")
 #endif
@@ -1463,7 +1463,7 @@ CNS(CLOCK_RT_Ada, "")
 #endif
 
 #if defined (__APPLE__) || defined (__linux__) || defined (__ANDROID__) \
-  || defined (__rtems__) || defined (DUMMY)
+  || defined (__rtems__) || defined (DUMMY) || defined(__MINT__)
 /*
 
    --  Sizes of pthread data types
diff --git a/gcc/ada/s-osinte-mint.ads b/gcc/ada/s-osinte-mint.ads
new file mode 100644
index 00000000000..5d805437ceb
--- /dev/null
+++ b/gcc/ada/s-osinte-mint.ads
@@ -0,0 +1,642 @@
+------------------------------------------------------------------------------
+--                                                                          --
+--                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --
+--                                                                          --
+--                   S Y S T E M . O S _ I N T E R F A C E                  --
+--                                                                          --
+--                                  S p e c                                 --
+--                                                                          --
+--             Copyright (C) 1991-2017, Florida State University            --
+--          Copyright (C) 1995-2020, Free Software Foundation, Inc.         --
+--                                                                          --
+-- GNAT is free software;  you can  redistribute it  and/or modify it under --
+-- terms of the  GNU General Public License as published  by the Free Soft- --
+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --
+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --
+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --
+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --
+--                                                                          --
+-- As a special exception under Section 7 of GPL version 3, you are granted --
+-- additional permissions described in the GCC Runtime Library Exception,   --
+-- version 3.1, as published by the Free Software Foundation.               --
+--                                                                          --
+-- You should have received a copy of the GNU General Public License and    --
+-- a copy of the GCC Runtime Library Exception along with this program;     --
+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --
+-- <http://www.gnu.org/licenses/>.                                          --
+--                                                                          --
+-- GNARL was developed by the GNARL team at Florida State University.       --
+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --
+--                                                                          --
+------------------------------------------------------------------------------
+
+--  This is a FreeMiNT version of this package
+
+--  This package encapsulates all direct interfaces to OS services
+--  that are needed by the tasking run-time (libgnarl).
+
+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma
+--  Preelaborate. This package is designed to be a bottom-level (leaf) package.
+
+with Ada.Unchecked_Conversion;
+with Interfaces.C;
+with System.Mint;
+with System.OS_Constants;
+
+package System.OS_Interface is
+   pragma Preelaborate;
+
+   subtype int            is Interfaces.C.int;
+   subtype char           is Interfaces.C.char;
+   subtype short          is Interfaces.C.short;
+   subtype long           is Interfaces.C.long;
+   subtype unsigned       is Interfaces.C.unsigned;
+   subtype unsigned_short is Interfaces.C.unsigned_short;
+   subtype unsigned_long  is Interfaces.C.unsigned_long;
+   subtype unsigned_char  is Interfaces.C.unsigned_char;
+   subtype plain_char     is Interfaces.C.plain_char;
+   subtype size_t         is Interfaces.C.size_t;
+
+   -----------
+   -- Errno --
+   -----------
+
+   EAGAIN    : constant := System.Mint.EAGAIN;
+   EINTR     : constant := System.Mint.EINTR;
+   EINVAL    : constant := System.Mint.EINVAL;
+   ENOMEM    : constant := System.Mint.ENOMEM;
+   EPERM     : constant := System.Mint.EPERM;
+   ETIMEDOUT : constant := System.Mint.ETIMEDOUT;
+
+   -------------
+   -- Signals --
+   -------------
+
+   Max_Interrupt : constant := 31;
+   type Signal is new int range 0 .. Max_Interrupt;
+   for Signal'Size use int'Size;
+
+   SIGNULL    : constant := 0;
+   SIGHUP     : constant := System.Mint.SIGHUP;
+   SIGINT     : constant := System.Mint.SIGINT;
+   SIGQUIT    : constant := System.Mint.SIGQUIT;
+   SIGILL     : constant := System.Mint.SIGILL;
+   SIGTRAP    : constant := System.Mint.SIGTRAP;
+   SIGIOT     : constant := System.Mint.SIGIOT;
+   SIGABRT    : constant := System.Mint.SIGABRT;
+   SIGPRIV    : constant := System.Mint.SIGPRIV;
+   SIGFPE     : constant := System.Mint.SIGFPE;
+   SIGKILL    : constant := System.Mint.SIGKILL;
+   SIGBUS     : constant := System.Mint.SIGBUS;
+   SIGSEGV    : constant := System.Mint.SIGSEGV;
+   SIGSYS     : constant := System.Mint.SIGSYS;
+   SIGPIPE    : constant := System.Mint.SIGPIPE;
+   SIGALRM    : constant := System.Mint.SIGALRM;
+   SIGTERM    : constant := System.Mint.SIGTERM;
+   SIGURG     : constant := System.Mint.SIGURG;
+   SIGSTOP    : constant := System.Mint.SIGSTOP;
+   SIGTSTP    : constant := System.Mint.SIGTSTP;
+   SIGCONT    : constant := System.Mint.SIGCONT;
+   SIGCLD     : constant := System.Mint.SIGCLD;
+   SIGCHLD    : constant := System.Mint.SIGCHLD;
+   SIGTTIN    : constant := System.Mint.SIGTTIN;
+   SIGTTOU    : constant := System.Mint.SIGTTOU;
+   SIGIO      : constant := System.Mint.SIGIO;
+   SIGXCPU    : constant := System.Mint.SIGXCPU;
+   SIGXFSZ    : constant := System.Mint.SIGXFSZ;
+   SIGVTALRM  : constant := System.Mint.SIGVTALRM;
+   SIGPROF    : constant := System.Mint.SIGPROF;
+   SIGWINCH   : constant := System.Mint.SIGWINCH;
+   SIGUSR1    : constant := System.Mint.SIGUSR1;
+   SIGUSR2    : constant := System.Mint.SIGUSR2;
+   SIGPWR     : constant := System.Mint.SIGPWR;
+
+   SIGADAABORT : constant := SIGABRT;
+   --  Change this to use another signal for task abort. SIGTERM might be a
+   --  good one.
+
+   type Signal_Set is array (Natural range <>) of Signal;
+
+   Unmasked : constant Signal_Set := (
+      SIGTRAP,
+      --  To enable debugging on multithreaded applications, mark SIGTRAP to
+      --  be kept unmasked.
+
+      SIGBUS,
+
+      SIGTTIN, SIGTTOU, SIGTSTP,
+      --  Keep these three signals unmasked so that background processes and IO
+      --  behaves as normal "C" applications
+
+      SIGPROF,
+      --  To avoid confusing the profiler
+
+      SIGKILL, SIGSTOP
+      --  These two signals actually can't be masked (POSIX won't allow it)
+      );
+
+   Reserved : constant Signal_Set := (SIGNULL, SIGNULL);
+
+   type sigset_t is private;
+
+   function sigaddset (set : access sigset_t; sig : Signal) return int;
+   pragma Import (C, sigaddset, "sigaddset");
+
+   function sigdelset (set : access sigset_t; sig : Signal) return int;
+   pragma Import (C, sigdelset, "sigdelset");
+
+   function sigfillset (set : access sigset_t) return int;
+   pragma Import (C, sigfillset, "sigfillset");
+
+   function sigismember (set : access sigset_t; sig : Signal) return int;
+   pragma Import (C, sigismember, "sigismember");
+
+   function sigemptyset (set : access sigset_t) return int;
+   pragma Import (C, sigemptyset, "sigemptyset");
+
+   type union_type_3 is new String (1 .. 116);
+   type siginfo_t is record
+      si_signo : int;
+      si_code  : int;
+      si_errno : int;
+      X_data   : union_type_3;
+   end record;
+   pragma Convention (C, siginfo_t);
+
+   type struct_sigaction is record
+      sa_handler  : System.Address;
+      sa_mask     : sigset_t;
+      sa_flags    : int;
+      sa_restorer : System.Address;
+   end record;
+   pragma Convention (C, struct_sigaction);
+
+   type struct_sigaction_ptr is access all struct_sigaction;
+
+   SA_SIGINFO : constant := System.Mint.SA_SIGINFO;
+   SA_ONSTACK : constant := System.Mint.SA_ONSTACK;
+
+   SIG_BLOCK   : constant := 0;
+   SIG_UNBLOCK : constant := 1;
+   SIG_SETMASK : constant := 2;
+
+   SIG_DFL : constant := 0;
+   SIG_IGN : constant := 1;
+
+   function sigaction
+     (sig  : Signal;
+      act  : struct_sigaction_ptr;
+      oact : struct_sigaction_ptr) return int;
+   pragma Import (C, sigaction, "sigaction");
+
+   ----------
+   -- Time --
+   ----------
+
+   subtype time_t    is System.Mint.time_t;
+   subtype timespec  is System.Mint.timespec;
+   subtype timeval   is System.Mint.timeval;
+   subtype clockid_t is System.Mint.clockid_t;
+
+   function clock_gettime
+     (clock_id : clockid_t; tp : access timespec) return int;
+   pragma Import (C, clock_gettime, "clock_gettime");
+
+   function clock_getres
+     (clock_id : clockid_t;
+      res      : access timespec) return int;
+   pragma Import (C, clock_getres, "clock_getres");
+
+   function To_Duration (TS : timespec) return Duration;
+   pragma Inline (To_Duration);
+
+   function To_Timespec (D : Duration) return timespec;
+   pragma Inline (To_Timespec);
+
+   function sysconf (name : int) return long;
+   pragma Import (C, sysconf);
+
+   SC_CLK_TCK          : constant := 5;
+   SC_NPROCESSORS_ONLN : constant := 3015;
+
+   -------------------------
+   -- Priority Scheduling --
+   -------------------------
+
+   SCHED_OTHER : constant := 0;
+   SCHED_FIFO  : constant := 1;
+   SCHED_RR    : constant := 2;
+
+   function To_Target_Priority
+     (Prio : System.Any_Priority) return Interfaces.C.int;
+   --  Maps System.Any_Priority to a POSIX priority
+
+   -------------
+   -- Process --
+   -------------
+
+   type pid_t is private;
+
+   function kill (pid : pid_t; sig : Signal) return int;
+   pragma Import (C, kill, "kill");
+
+   function getpid return pid_t;
+   pragma Import (C, getpid, "getpid");
+
+   PR_SET_NAME : constant := 15;
+   PR_GET_NAME : constant := 16;
+
+   function prctl
+     (option : int;
+      arg2, arg3, arg4, arg5 : unsigned_long := 0) return int;
+   pragma Import (C, prctl, "prctl");
+
+   -------------
+   -- Threads --
+   -------------
+
+   type Thread_Body is access
+     function (arg : System.Address) return System.Address;
+   pragma Convention (C, Thread_Body);
+
+   function Thread_Body_Access is new
+     Ada.Unchecked_Conversion (System.Address, Thread_Body);
+
+   type pthread_t is new unsigned_long;
+   subtype Thread_Id is pthread_t;
+
+   function To_pthread_t is
+     new Ada.Unchecked_Conversion (unsigned_long, pthread_t);
+
+   type pthread_mutex_t      is limited private;
+   type pthread_rwlock_t     is limited private;
+   type pthread_cond_t       is limited private;
+   type pthread_attr_t       is limited private;
+   type pthread_mutexattr_t  is limited private;
+   type pthread_rwlockattr_t is limited private;
+   type pthread_condattr_t   is limited private;
+   type pthread_key_t        is private;
+
+   PTHREAD_CREATE_DETACHED : constant := 1;
+
+   -----------
+   -- Stack --
+   -----------
+
+   subtype char_array is Interfaces.C.char_array;
+
+   type stack_t is record
+      ss_sp    : System.Address;
+      ss_flags : int;
+      ss_size  : size_t;
+   end record;
+   pragma Convention (C, stack_t);
+
+   function sigaltstack
+     (ss  : not null access stack_t;
+      oss : access stack_t) return int;
+   pragma Import (C, sigaltstack, "sigaltstack");
+
+   Alternate_Stack_Size : constant := 32 * 1024;
+   --  This must be in keeping with init.c:__gnat_alternate_stack
+
+   Alternate_Stack : aliased char_array (1 .. Alternate_Stack_Size);
+   pragma Import (C, Alternate_Stack, "__gnat_alternate_stack");
+   --  The alternate signal stack for stack overflows
+
+   function Get_Stack_Base (thread : pthread_t) return Address;
+   pragma Inline (Get_Stack_Base);
+   --  This is a dummy procedure to share some GNULLI files
+
+   ---------------------------------------
+   -- Nonstandard Thread Initialization --
+   ---------------------------------------
+
+   procedure pthread_init;
+   pragma Inline (pthread_init);
+   --  This is a dummy procedure to share some GNULLI files
+
+   -------------------------
+   -- POSIX.1c  Section 3 --
+   -------------------------
+
+   function sigwait (set : access sigset_t; sig : access Signal) return int;
+   pragma Import (C, sigwait, "sigwait");
+
+   function pthread_kill (thread : pthread_t; sig : Signal) return int;
+   pragma Import (C, pthread_kill, "pthread_kill");
+
+   function pthread_sigmask
+     (how  : int;
+      set  : access sigset_t;
+      oset : access sigset_t) return int;
+   pragma Import (C, pthread_sigmask, "pthread_sigmask");
+
+   --------------------------
+   -- POSIX.1c  Section 11 --
+   --------------------------
+
+   function pthread_mutexattr_init
+     (attr : access pthread_mutexattr_t) return int;
+   pragma Import (C, pthread_mutexattr_init, "pthread_mutexattr_init");
+
+   function pthread_mutexattr_destroy
+     (attr : access pthread_mutexattr_t) return int;
+   pragma Import (C, pthread_mutexattr_destroy, "pthread_mutexattr_destroy");
+
+   function pthread_mutex_init
+     (mutex : access pthread_mutex_t;
+      attr  : access pthread_mutexattr_t) return int;
+   pragma Import (C, pthread_mutex_init, "pthread_mutex_init");
+
+   function pthread_mutex_destroy (mutex : access pthread_mutex_t) return int;
+   pragma Import (C, pthread_mutex_destroy, "pthread_mutex_destroy");
+
+   function pthread_mutex_lock (mutex : access pthread_mutex_t) return int;
+   pragma Import (C, pthread_mutex_lock, "pthread_mutex_lock");
+
+   function pthread_mutex_unlock (mutex : access pthread_mutex_t) return int;
+   pragma Import (C, pthread_mutex_unlock, "pthread_mutex_unlock");
+
+   function pthread_rwlockattr_init
+     (attr : access pthread_rwlockattr_t) return int;
+   pragma Import (C, pthread_rwlockattr_init, "pthread_rwlockattr_init");
+
+   function pthread_rwlockattr_destroy
+     (attr : access pthread_rwlockattr_t) return int;
+   pragma Import (C, pthread_rwlockattr_destroy, "pthread_rwlockattr_destroy");
+
+   PTHREAD_RWLOCK_PREFER_READER_NP              : constant := 0;
+   PTHREAD_RWLOCK_PREFER_WRITER_NP              : constant := 1;
+   PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP : constant := 2;
+
+   function pthread_rwlockattr_setkind_np
+     (attr : access pthread_rwlockattr_t;
+      pref : int) return int;
+   pragma Import
+     (C, pthread_rwlockattr_setkind_np, "pthread_rwlockattr_setkind_np");
+
+   function pthread_rwlock_init
+     (mutex : access pthread_rwlock_t;
+      attr  : access pthread_rwlockattr_t) return int;
+   pragma Import (C, pthread_rwlock_init, "pthread_rwlock_init");
+
+   function pthread_rwlock_destroy
+     (mutex : access pthread_rwlock_t) return int;
+   pragma Import (C, pthread_rwlock_destroy, "pthread_rwlock_destroy");
+
+   function pthread_rwlock_rdlock (mutex : access pthread_rwlock_t) return int;
+   pragma Import (C, pthread_rwlock_rdlock, "pthread_rwlock_rdlock");
+
+   function pthread_rwlock_wrlock (mutex : access pthread_rwlock_t) return int;
+   pragma Import (C, pthread_rwlock_wrlock, "pthread_rwlock_wrlock");
+
+   function pthread_rwlock_unlock (mutex : access pthread_rwlock_t) return int;
+   pragma Import (C, pthread_rwlock_unlock, "pthread_rwlock_unlock");
+
+   function pthread_condattr_init
+     (attr : access pthread_condattr_t) return int;
+   pragma Import (C, pthread_condattr_init, "pthread_condattr_init");
+
+   function pthread_condattr_destroy
+     (attr : access pthread_condattr_t) return int;
+   pragma Import (C, pthread_condattr_destroy, "pthread_condattr_destroy");
+
+   function pthread_cond_init
+     (cond : access pthread_cond_t;
+      attr : access pthread_condattr_t) return int;
+   pragma Import (C, pthread_cond_init, "pthread_cond_init");
+
+   function pthread_cond_destroy (cond : access pthread_cond_t) return int;
+   pragma Import (C, pthread_cond_destroy, "pthread_cond_destroy");
+
+   function pthread_cond_signal (cond : access pthread_cond_t) return int;
+   pragma Import (C, pthread_cond_signal, "pthread_cond_signal");
+
+   function pthread_cond_wait
+     (cond  : access pthread_cond_t;
+      mutex : access pthread_mutex_t) return int;
+   pragma Import (C, pthread_cond_wait, "pthread_cond_wait");
+
+   function pthread_cond_timedwait
+     (cond    : access pthread_cond_t;
+      mutex   : access pthread_mutex_t;
+      abstime : access timespec) return int;
+   pragma Import (C, pthread_cond_timedwait, "pthread_cond_timedwait");
+
+   --------------------------
+   -- POSIX.1c  Section 13 --
+   --------------------------
+
+   PTHREAD_PRIO_NONE    : constant := 0;
+   PTHREAD_PRIO_INHERIT : constant := 1;
+   PTHREAD_PRIO_PROTECT : constant := 2;
+
+   function pthread_mutexattr_setprotocol
+     (attr     : access pthread_mutexattr_t;
+      protocol : int) return int;
+   pragma Import (C, pthread_mutexattr_setprotocol);
+
+   function pthread_mutexattr_setprioceiling
+     (attr        : access pthread_mutexattr_t;
+      prioceiling : int) return int;
+   pragma Import (C, pthread_mutexattr_setprioceiling);
+
+   type struct_sched_param is record
+      sched_priority : int;  --  scheduling priority
+   end record;
+   pragma Convention (C, struct_sched_param);
+
+   function pthread_setschedparam
+     (thread : pthread_t;
+      policy : int;
+      param  : access struct_sched_param) return int;
+   pragma Import (C, pthread_setschedparam, "pthread_setschedparam");
+
+   function pthread_attr_setschedpolicy
+     (attr   : access pthread_attr_t;
+      policy : int) return int;
+   pragma Import
+     (C, pthread_attr_setschedpolicy, "pthread_attr_setschedpolicy");
+
+   function sched_yield return int;
+   pragma Import (C, sched_yield, "sched_yield");
+
+   ---------------------------
+   -- P1003.1c - Section 16 --
+   ---------------------------
+
+   function pthread_attr_init
+     (attributes : access pthread_attr_t) return int;
+   pragma Import (C, pthread_attr_init, "pthread_attr_init");
+
+   function pthread_attr_destroy
+     (attributes : access pthread_attr_t) return int;
+   pragma Import (C, pthread_attr_destroy, "pthread_attr_destroy");
+
+   function pthread_attr_setdetachstate
+     (attr        : access pthread_attr_t;
+      detachstate : int) return int;
+   pragma Import
+     (C, pthread_attr_setdetachstate, "pthread_attr_setdetachstate");
+
+   function pthread_attr_setstacksize
+     (attr      : access pthread_attr_t;
+      stacksize : size_t) return int;
+   pragma Import (C, pthread_attr_setstacksize, "pthread_attr_setstacksize");
+
+   function pthread_create
+     (thread        : access pthread_t;
+      attributes    : access pthread_attr_t;
+      start_routine : Thread_Body;
+      arg           : System.Address) return int;
+   pragma Import (C, pthread_create, "pthread_create");
+
+   procedure pthread_exit (status : System.Address);
+   pragma Import (C, pthread_exit, "pthread_exit");
+
+   function pthread_self return pthread_t;
+   pragma Import (C, pthread_self, "pthread_self");
+
+   function lwp_self return System.Address;
+   pragma Import (C, lwp_self, "__gnat_lwp_self");
+
+   --------------------------
+   -- POSIX.1c  Section 17 --
+   --------------------------
+
+   function pthread_setspecific
+     (key   : pthread_key_t;
+      value : System.Address) return int;
+   pragma Import (C, pthread_setspecific, "pthread_setspecific");
+
+   function pthread_getspecific (key : pthread_key_t) return System.Address;
+   pragma Import (C, pthread_getspecific, "pthread_getspecific");
+
+   type destructor_pointer is access procedure (arg : System.Address);
+   pragma Convention (C, destructor_pointer);
+
+   function pthread_key_create
+     (key        : access pthread_key_t;
+      destructor : destructor_pointer) return int;
+   pragma Import (C, pthread_key_create, "pthread_key_create");
+
+   ----------------
+   -- Extensions --
+   ----------------
+
+   CPU_SETSIZE : constant := 1_024;
+   --  Size of the cpu_set_t mask on most linux systems (SUSE 11 uses 4_096).
+   --  This is kept for backward compatibility (System.Task_Info uses it), but
+   --  the run-time library does no longer rely on static masks, using
+   --  dynamically allocated masks instead.
+
+   type bit_field is array (1 .. CPU_SETSIZE) of Boolean;
+   for bit_field'Size use CPU_SETSIZE;
+   pragma Pack (bit_field);
+   pragma Convention (C, bit_field);
+
+   type cpu_set_t is record
+      bits : bit_field;
+   end record;
+   pragma Convention (C, cpu_set_t);
+
+   type cpu_set_t_ptr is access all cpu_set_t;
+   --  In the run-time library we use this pointer because the size of type
+   --  cpu_set_t varies depending on the glibc version. Hence, objects of type
+   --  cpu_set_t are allocated dynamically using the number of processors
+   --  available in the target machine (value obtained at execution time).
+
+   function CPU_ALLOC (count : size_t) return cpu_set_t_ptr;
+   pragma Import (C, CPU_ALLOC, "__gnat_cpu_alloc");
+   --  Wrapper around the CPU_ALLOC C macro
+
+   function CPU_ALLOC_SIZE (count : size_t) return size_t;
+   pragma Import (C, CPU_ALLOC_SIZE, "__gnat_cpu_alloc_size");
+   --  Wrapper around the CPU_ALLOC_SIZE C macro
+
+   procedure CPU_FREE (cpuset : cpu_set_t_ptr);
+   pragma Import (C, CPU_FREE, "__gnat_cpu_free");
+   --  Wrapper around the CPU_FREE C macro
+
+   procedure CPU_ZERO (count : size_t; cpuset : cpu_set_t_ptr);
+   pragma Import (C, CPU_ZERO, "__gnat_cpu_zero");
+   --  Wrapper around the CPU_ZERO_S C macro
+
+   procedure CPU_SET (cpu : int; count : size_t; cpuset : cpu_set_t_ptr);
+   pragma Import (C, CPU_SET, "__gnat_cpu_set");
+   --  Wrapper around the CPU_SET_S C macro
+
+   function pthread_setaffinity_np
+     (thread     : pthread_t;
+      cpusetsize : size_t;
+      cpuset     : cpu_set_t_ptr) return int;
+   pragma Import (C, pthread_setaffinity_np, "pthread_setaffinity_np");
+   pragma Weak_External (pthread_setaffinity_np);
+   --  Use a weak symbol because this function may be available or not,
+   --  depending on the version of the system.
+
+   function pthread_attr_setaffinity_np
+     (attr       : access pthread_attr_t;
+      cpusetsize : size_t;
+      cpuset     : cpu_set_t_ptr) return int;
+   pragma Import (C, pthread_attr_setaffinity_np,
+                    "pthread_attr_setaffinity_np");
+   pragma Weak_External (pthread_attr_setaffinity_np);
+   --  Use a weak symbol because this function may be available or not,
+   --  depending on the version of the system.
+
+private
+
+   type sigset_t is
+     array (0 .. OS_Constants.SIZEOF_sigset - 1) of unsigned_char;
+   pragma Convention (C, sigset_t);
+   for sigset_t'Alignment use Interfaces.C.unsigned_long'Alignment;
+
+   type pid_t is new int;
+
+   type pthread_attr_t is record
+      Data : char_array (1 .. OS_Constants.PTHREAD_ATTR_SIZE);
+   end record;
+   pragma Convention (C, pthread_attr_t);
+   for pthread_attr_t'Alignment use Interfaces.C.unsigned_long'Alignment;
+
+   type pthread_condattr_t is record
+      Data : char_array (1 .. OS_Constants.PTHREAD_CONDATTR_SIZE);
+   end record;
+   pragma Convention (C, pthread_condattr_t);
+   for pthread_condattr_t'Alignment use Interfaces.C.int'Alignment;
+
+   type pthread_mutexattr_t is record
+      Data : char_array (1 .. OS_Constants.PTHREAD_MUTEXATTR_SIZE);
+   end  record;
+   pragma Convention (C, pthread_mutexattr_t);
+   for pthread_mutexattr_t'Alignment use Interfaces.C.int'Alignment;
+
+   type pthread_mutex_t is record
+      Data : char_array (1 .. OS_Constants.PTHREAD_MUTEX_SIZE);
+   end record;
+   pragma Convention (C, pthread_mutex_t);
+   for pthread_mutex_t'Alignment use Interfaces.C.unsigned_long'Alignment;
+
+   type pthread_rwlockattr_t is record
+      Data : char_array (1 .. OS_Constants.PTHREAD_RWLOCKATTR_SIZE);
+   end record;
+   pragma Convention (C, pthread_rwlockattr_t);
+   for pthread_rwlockattr_t'Alignment use Interfaces.C.unsigned_long'Alignment;
+
+   type pthread_rwlock_t is record
+      Data : char_array (1 .. OS_Constants.PTHREAD_RWLOCK_SIZE);
+   end record;
+   pragma Convention (C, pthread_rwlock_t);
+   for pthread_rwlock_t'Alignment use Interfaces.C.unsigned_long'Alignment;
+
+   type pthread_cond_t is record
+      Data : char_array (1 .. OS_Constants.PTHREAD_COND_SIZE);
+   end record;
+   pragma Convention (C, pthread_cond_t);
+   for pthread_cond_t'Alignment use Interfaces.Unsigned_64'Alignment;
+
+   type pthread_key_t is new unsigned;
+
+end System.OS_Interface;
diff --git a/gcc/ada/stat64.c b/gcc/ada/stat64.c
new file mode 100644
index 00000000000..121d6c5a03c
--- /dev/null
+++ b/gcc/ada/stat64.c
@@ -0,0 +1,62 @@
+#ifndef _GNU_SOURCE
+#define _GNU_SOURCE
+#endif
+#define _FILE_OFFSET_BITS 64
+#include <sys/stat.h>
+
+#if defined (__cplusplus)
+extern "C" {
+#endif
+
+#if __GLIBC_PREREQ(2, 33)
+
+#include <stdarg.h>
+#include <fcntl.h>
+
+/*
+ * those are referenced by the hosts libgnat.a
+ */
+
+extern int __xstat64(int __ver, const char *__filename,
+      struct stat64 *__stat_buf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
+extern int __lxstat64(int __ver, const char *__filename,
+       struct stat64 *__stat_buf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
+extern int __fxstat64(int __ver, int __fildes, struct stat64 *__stat_buf)
+     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3)));
+
+__attribute__((__nothrow__))
+int stat64(const char *__path, struct stat64 *__statbuf)
+{
+	return __xstat64(1, __path, __statbuf);
+}
+
+__attribute__((__nothrow__)) 
+int lstat64 (const char *__path, struct stat64 *__statbuf)
+{
+	return __lxstat64(1, __path, __statbuf);
+}
+
+__attribute__((__nothrow__)) 
+int fstat64(int __fd, struct stat64 *__statbuf)
+{
+	return __fxstat64(1, __fd, __statbuf);
+}
+
+#undef fcntl
+int fcntl64(int fd, int cmd, ...)
+{
+  va_list ap;
+  void *arg;
+
+  va_start (ap, cmd);
+  arg = va_arg (ap, void *);
+  va_end (ap);
+
+  return fcntl(fd, cmd, arg);
+}
+
+#endif /* __GLIBC_PREREQ */
+
+#if defined (__cplusplus)
+}
+#endif
diff --git a/gcc/ada/system-mint.ads b/gcc/ada/system-mint.ads
new file mode 100644
index 00000000000..57451de522c
--- /dev/null
+++ b/gcc/ada/system-mint.ads
@@ -0,0 +1,148 @@
+------------------------------------------------------------------------------
+--                                                                          --
+--                        GNAT RUN-TIME COMPONENTS                          --
+--                                                                          --
+--                               S Y S T E M                                --
+--                                                                          --
+--                                 S p e c                                  --
+--                         (freemint/m68k Version)                          --
+--                                                                          --
+--          Copyright (C) 2014-2020, Free Software Foundation, Inc.         --
+--                                                                          --
+-- This specification is derived from the Ada Reference Manual for use with --
+-- GNAT. The copyright notice above, and the license provisions that follow --
+-- apply solely to the  contents of the part following the private keyword. --
+--                                                                          --
+-- GNAT is free software;  you can  redistribute it  and/or modify it under --
+-- terms of the  GNU General Public License as published  by the Free Soft- --
+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --
+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --
+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --
+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --
+--                                                                          --
+-- As a special exception under Section 7 of GPL version 3, you are granted --
+-- additional permissions described in the GCC Runtime Library Exception,   --
+-- version 3.1, as published by the Free Software Foundation.               --
+--                                                                          --
+-- You should have received a copy of the GNU General Public License and    --
+-- a copy of the GCC Runtime Library Exception along with this program;     --
+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --
+-- <http://www.gnu.org/licenses/>.                                          --
+--                                                                          --
+-- GNAT was originally developed  by the GNAT team at  New York University. --
+-- Extensive contributions were provided by Ada Core Technologies Inc.      --
+--                                                                          --
+------------------------------------------------------------------------------
+
+package System is
+   pragma Pure;
+   --  Note that we take advantage of the implementation permission to make
+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada
+   --  2005, this is Pure in any case (AI-362).
+
+   pragma No_Elaboration_Code_All;
+   --  Allow the use of that restriction in units that WITH this unit
+
+   type Name is (SYSTEM_NAME_GNAT);
+   System_Name : constant Name := SYSTEM_NAME_GNAT;
+
+   --  System-Dependent Named Numbers
+
+   Min_Int               : constant := Long_Long_Integer'First;
+   Max_Int               : constant := Long_Long_Integer'Last;
+
+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;
+   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;
+
+   Max_Base_Digits       : constant := Long_Long_Float'Digits;
+   Max_Digits            : constant := Long_Long_Float'Digits;
+
+   Max_Mantissa          : constant := 63;
+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);
+
+   Tick                  : constant := 0.05;
+
+   --  Storage-related Declarations
+
+   type Address is private;
+   pragma Preelaborable_Initialization (Address);
+   Null_Address : constant Address;
+
+   Storage_Unit : constant := 8;
+   Word_Size    : constant := 32;
+   Memory_Size  : constant := 2 ** 32;
+
+   --  Address comparison
+
+   function "<"  (Left, Right : Address) return Boolean;
+   function "<=" (Left, Right : Address) return Boolean;
+   function ">"  (Left, Right : Address) return Boolean;
+   function ">=" (Left, Right : Address) return Boolean;
+   function "="  (Left, Right : Address) return Boolean;
+
+   pragma Import (Intrinsic, "<");
+   pragma Import (Intrinsic, "<=");
+   pragma Import (Intrinsic, ">");
+   pragma Import (Intrinsic, ">=");
+   pragma Import (Intrinsic, "=");
+
+   --  Other System-Dependent Declarations
+
+   type Bit_Order is (High_Order_First, Low_Order_First);
+   Default_Bit_Order : constant Bit_Order := High_Order_First;
+   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning
+
+   --  Priority-related Declarations (RM D.1)
+
+   Max_Priority           : constant Positive := 30;
+   Max_Interrupt_Priority : constant Positive := 31;
+
+   subtype Any_Priority       is Integer      range  0 .. 31;
+   subtype Priority           is Any_Priority range  0 .. 30;
+   subtype Interrupt_Priority is Any_Priority range 31 .. 31;
+
+   Default_Priority : constant Priority := 15;
+
+private
+
+   type Address is mod Memory_Size;
+   Null_Address : constant Address := 0;
+
+   --------------------------------------
+   -- System Implementation Parameters --
+   --------------------------------------
+
+   --  These parameters provide information about the target that is used
+   --  by the compiler. They are in the private part of System, where they
+   --  can be accessed using the special circuitry in the Targparm unit
+   --  whose source should be consulted for more detailed descriptions
+   --  of the individual switch values.
+
+   Backend_Divide_Checks     : constant Boolean := False;
+   Backend_Overflow_Checks   : constant Boolean := True;
+   Command_Line_Args         : constant Boolean := True;
+   Configurable_Run_Time     : constant Boolean := False;
+   Denorm                    : constant Boolean := True;
+   Duration_32_Bits          : constant Boolean := False;
+   Exit_Status_Supported     : constant Boolean := True;
+   Fractional_Fixed_Ops      : constant Boolean := False;
+   Frontend_Layout           : constant Boolean := False;
+   Machine_Overflows         : constant Boolean := False;
+   Machine_Rounds            : constant Boolean := True;
+   Preallocated_Stacks       : constant Boolean := False;
+   Signed_Zeros              : constant Boolean := True;
+   Stack_Check_Default       : constant Boolean := False;
+   Stack_Check_Probes        : constant Boolean := False;
+   Stack_Check_Limits        : constant Boolean := False;
+   Support_Aggregates        : constant Boolean := True;
+   Support_Atomic_Primitives : constant Boolean := True;
+   Support_Composite_Assign  : constant Boolean := True;
+   Support_Composite_Compare : constant Boolean := True;
+   Support_Long_Shifts       : constant Boolean := True;
+   Always_Compatible_Rep     : constant Boolean := False;
+   Suppress_Standard_Library : constant Boolean := False;
+   Use_Ada_Main_Program_Name : constant Boolean := False;
+   Frontend_Exceptions       : constant Boolean := False;
+   ZCX_By_Default            : constant Boolean := True;
+
+end System;
diff --git a/gcc/ada/terminals.c b/gcc/ada/terminals.c
index 35cd7430bb8..574990d25d7 100644
--- a/gcc/ada/terminals.c
+++ b/gcc/ada/terminals.c
@@ -32,7 +32,7 @@
 /* First all usupported platforms. Add stubs for exported routines. */
 
 #if defined (VMS) || defined (__vxworks) || defined (__Lynx__) \
-  || defined (__ANDROID__) || defined (__PikeOS__) || defined(__DJGPP__)
+  || defined (__ANDROID__) || defined (__PikeOS__) || defined(__DJGPP__) || defined(__MINT__)
 
 #define ATTRIBUTE_UNUSED __attribute__((unused))
 
diff --git a/gcc/c/Make-lang.in b/gcc/c/Make-lang.in
index cfd8cd2b169..8a302cfb731 100644
--- a/gcc/c/Make-lang.in
+++ b/gcc/c/Make-lang.in
@@ -83,7 +83,7 @@ cc1-checksum.c : build/genchecksum$(build_exeext) checksum-options \
 
 cc1$(exeext): $(C_OBJS) cc1-checksum.o $(BACKEND) $(LIBDEPS)
 	+$(LLINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(C_OBJS) \
-	  cc1-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS)
+	  cc1-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS) $(GLIBC_SO)
 
 cc1.fda: ../stage1-gcc/cc1$(exeext) ../prev-gcc/$(PERF_DATA)
 	$(CREATE_GCOV) -binary ../stage1-gcc/cc1$(exeext) -gcov cc1.fda -profile ../prev-gcc/$(PERF_DATA) -gcov_version 1
diff --git a/gcc/c/c-decl.c b/gcc/c/c-decl.c
index 964d5f1a2d2..17d1e23eb96 100644
--- a/gcc/c/c-decl.c
+++ b/gcc/c/c-decl.c
@@ -9465,6 +9465,13 @@ check_for_loop_decls (location_t loc, bool turn_off_iso_c99_error)
 	}
       return NULL_TREE;
     }
+  if (warn_c90_c99_compat > 0)
+  {
+	warning_at (loc, OPT_Wc90_c99_compat,
+	   "%<for%> loop initial declarations "
+		"are only allowed in C99 or C11 mode");
+    
+  }
   /* C99 subclause 6.8.5 paragraph 3:
 
        [#3]  The  declaration  part  of  a for statement shall only
diff --git a/gcc/cgraphclones.c b/gcc/cgraphclones.c
index 69572b926c4..13bcc4c999b 100644
--- a/gcc/cgraphclones.c
+++ b/gcc/cgraphclones.c
@@ -531,19 +531,30 @@ cgraph_node::create_clone (tree new_decl, gcov_type gcov_count, int freq,
 static GTY(()) unsigned int clone_fn_id_num;
 
 /* Return a new assembler name for a clone with SUFFIX of a decl named
-   NAME.  */
+   NAME. Final stdcall @N suffixes are maintained. */
 
 tree
 clone_function_name_1 (const char *name, const char *suffix)
 {
   size_t len = strlen (name);
   char *tmp_name, *prefix;
+  const char *at_suffix;
 
   prefix = XALLOCAVEC (char, len + strlen (suffix) + 2);
+  /* name + 1 to skip fastcall which begins with '@' */
+  at_suffix = strchr (name + 1, '@');
+  size_t at_suffix_len = 0;
+  if (at_suffix)
+    {
+      at_suffix_len = strlen (at_suffix);
+      len -= at_suffix_len;
+    }
   memcpy (prefix, name, len);
   strcpy (prefix + len + 1, suffix);
   prefix[len] = symbol_table::symbol_suffix_separator ();
   ASM_FORMAT_PRIVATE_NAME (tmp_name, prefix, clone_fn_id_num++);
+  if (at_suffix)
+    strcat (tmp_name, at_suffix);
   return get_identifier (tmp_name);
 }
 
diff --git a/gcc/collect2.c b/gcc/collect2.c
index 319fcb31e3f..94fc7df5388 100644
--- a/gcc/collect2.c
+++ b/gcc/collect2.c
@@ -156,6 +156,16 @@ int do_collecting = 0;
 #define DO_COLLECT_EXPORT_LIST 0
 #endif
 
+/*
+ * these are from xm-mingw32.h, but this is only included
+ * for the target; we need those definitions here also
+ * when using MinGW as host for a cross-compiler
+ */
+#ifdef __MINGW32__
+#undef HOST_EXECUTABLE_SUFFIX
+#define HOST_EXECUTABLE_SUFFIX ".exe"
+#endif
+
 /* Nonzero if we should suppress the automatic demangling of identifiers
    in linker error messages.  Set from COLLECT_NO_DEMANGLE.  */
 int no_demangle;
@@ -822,6 +832,46 @@ maybe_run_lto_and_relink (char **lto_ld_argv, char **object_lst,
 
 /* Main program.  */
 
+#if defined(__LINUX_GLIBC_WRAP_H)
+
+/* ugly hack to get __libc_start_main versioned */
+
+#if __GLIBC_PREREQ(2, 34)
+
+#define STR_(s) #s
+#define STR(s)  STR_(s)
+#include <dlfcn.h>
+
+#ifdef __UCLIBC__
+#define __libc_start_main       __uClibc_main
+#endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+int __libc_start_main(
+        int (*main)(int,char**,char**), int ac, char **av,
+        int (*init)(void), void (*fini)(void),
+        void (*rtld_fini)(void), void *stack_end);
+int __libc_start_main(
+        int (*main)(int,char**,char**), int ac, char **av,
+        int (*init)(void), void (*fini)(void),
+        void (*rtld_fini)(void), void *stack_end)
+{
+	typeof(__libc_start_main) *real_lsm;
+	if ((*(void**)&real_lsm = dlsym(RTLD_NEXT, STR(__libc_start_main))) != 0)
+		return real_lsm(main, ac, av, init, fini, rtld_fini, stack_end);
+	fputs("BUG: dlsym error\n", stderr);
+	return 1;
+}
+#ifdef __cplusplus
+}
+#endif
+#undef STR
+#undef STR_
+#endif
+#endif
+
 int
 main (int argc, char **argv)
 {
diff --git a/gcc/common/config/m68k/m68k-common.c b/gcc/common/config/m68k/m68k-common.c
index 09ffb99ade5..e8489987e3d 100644
--- a/gcc/common/config/m68k/m68k-common.c
+++ b/gcc/common/config/m68k/m68k-common.c
@@ -75,4 +75,26 @@ m68k_handle_option (struct gcc_options *opts,
 #undef TARGET_HANDLE_OPTION
 #define TARGET_HANDLE_OPTION m68k_handle_option
 
+/* Implement TARGET_EXCEPT_UNWIND_INFO.  */
+
+static enum unwind_info_type
+m68k_except_unwind_info (struct gcc_options *opts ATTRIBUTE_UNUSED)
+{
+#ifdef USING_ELFOS_H
+  /* Honor the --enable-sjlj-exceptions configure switch.  */
+#ifdef CONFIG_SJLJ_EXCEPTIONS
+  if (CONFIG_SJLJ_EXCEPTIONS)
+    return UI_SJLJ;
+#endif
+
+  if (DWARF2_UNWIND_INFO)
+    return UI_DWARF2;
+#endif
+
+  return UI_SJLJ;
+}
+
+#undef TARGET_EXCEPT_UNWIND_INFO
+#define TARGET_EXCEPT_UNWIND_INFO m68k_except_unwind_info
+
 struct gcc_targetm_common targetm_common = TARGETM_COMMON_INITIALIZER;
diff --git a/gcc/config.gcc b/gcc/config.gcc
index 504b282db25..cb891a4990b 100644
--- a/gcc/config.gcc
+++ b/gcc/config.gcc
@@ -1780,7 +1780,10 @@ i[34567]86-*-mingw* | x86_64-*-mingw*)
 			tmake_file="${tmake_file} i386/t-mingw-w32"
 			;;
 	esac
-        native_system_header_dir=/mingw/include
+	# Don't ignore values passed in to configure via --native-system-header-dir
+	if test x$native_system_header_dir = x ; then
+		native_system_header_dir=/mingw/include
+	fi
 	target_gtfiles="\$(srcdir)/config/i386/winnt.c"
 	extra_options="${extra_options} i386/cygming.opt i386/mingw.opt"
 	case ${target} in
@@ -1981,6 +1984,29 @@ m68k-*-linux*)			# Motorola m68k's running GNU/Linux
 	tm_defines="${tm_defines} MOTOROLA=1"
 	tmake_file="${tmake_file} m68k/t-floatlib m68k/t-linux m68k/t-mlibs"
 	;;
+m68k-*-mintelf*)
+	default_m68k_cpu=68000
+	default_cf_cpu=5475
+	tm_file="${tm_file} dbxelf.h elfos.h m68k/mint.h m68k/mint-stdint.h"
+	tm_defines="${tm_defines} MOTOROLA=1"
+	tmake_file="m68k/t-floatlib m68k/t-mint"
+	xm_file=m68k/xm-mint.h
+	gas=yes
+	gnu_ld=yes
+	if test x${disable_initfini_array} != xyes; then
+		gcc_cv_initfini_array=yes
+	fi
+	;;
+m68k-*-mint*)
+	default_m68k_cpu=68000
+	default_cf_cpu=5475
+	tm_file="${tm_file} m68k/mint.h m68k/mint-stdint.h"
+	tm_defines="${tm_defines} MOTOROLA=1"
+	tmake_file="m68k/t-floatlib m68k/t-mint"
+	xm_file=m68k/xm-mint.h
+	gas=yes
+	gnu_ld=yes
+	;;
 m68k-*-rtems*)
 	default_m68k_cpu=68020
 	default_cf_cpu=5206
diff --git a/gcc/config.host b/gcc/config.host
index 6b28f3033ef..d3a96fd01a0 100644
--- a/gcc/config.host
+++ b/gcc/config.host
@@ -234,14 +234,14 @@ case ${host} in
     host_exeext=.exe
     host_lto_plugin_soname=cyglto_plugin-0.dll
     ;;
-  i[34567]86-*-mingw32*)
+  i[34567]86-*-mingw32* | i[34567]86-*-msys*)
     host_xm_file=i386/xm-mingw32.h
     host_xmake_file="${host_xmake_file} i386/x-mingw32"
     host_exeext=.exe
     out_host_hook_obj=host-mingw32.o
     host_lto_plugin_soname=liblto_plugin-0.dll
     ;;
-  x86_64-*-mingw*)
+  x86_64-*-mingw* | x86_64-*-msys*)
     use_long_long_for_widest_fast_int=yes
     host_xm_file=i386/xm-mingw32.h
     host_xmake_file="${host_xmake_file} i386/x-mingw32"
diff --git a/gcc/config/elfos.h b/gcc/config/elfos.h
index 47a07115e32..0436339ef58 100644
--- a/gcc/config/elfos.h
+++ b/gcc/config/elfos.h
@@ -198,7 +198,13 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 #define ASCII_DATA_ASM_OP	"\t.ascii\t"
 
 /* Support a read-only data section.  */
-#define READONLY_DATA_SECTION_ASM_OP	"\t.section\t.rodata"
+#ifndef READONLY_DATA_SECTION_ASM_OP
+#define READONLY_DATA_SECTION_ASM_OP	"\t.section\t" ELF_DEFAULT_RODATA_SECTION
+#endif
+#define ELF_SECTION_FORMAT		"\t.section %s"
+#define ELF_DEFAULT_TEXT_SECTION	".text"
+#define ELF_DEFAULT_DATA_SECTION	".data"
+#define ELF_DEFAULT_RODATA_SECTION	".rodata"
 
 /* On svr4, we *do* have support for the .init and .fini sections, and we
    can put stuff in there to be executed before and after `main'.  We let
diff --git a/gcc/config/host-darwin.c b/gcc/config/host-darwin.c
index 2f977866a4a..f3542c68f60 100644
--- a/gcc/config/host-darwin.c
+++ b/gcc/config/host-darwin.c
@@ -24,7 +24,10 @@
 #include "config/host-darwin.h"
 
 /* Yes, this is really supposed to work.  */
-static char pch_address_space[1024*1024*1024] __attribute__((aligned (4096)));
+/* This allows for a pagesize of 16384, which we have on Darwin20, but should
+   continue to work OK for pagesize 4096 which we have on earlier versions.
+   The size is 1 (binary) Gb.  */
+static char pch_address_space[65536*16384] __attribute__((aligned (16384)));
 
 /* Return the address of the PCH address space, if the PCH will fit in it.  */
 
diff --git a/gcc/config/i386/cygming.opt b/gcc/config/i386/cygming.opt
index 2d7c7d2b674..dc24530e4dd 100644
--- a/gcc/config/i386/cygming.opt
+++ b/gcc/config/i386/cygming.opt
@@ -22,6 +22,9 @@ mconsole
 Target RejectNegative
 Create console application.
 
+mcrtdll=
+Target RejectNegative Joined
+
 mdll
 Target RejectNegative
 Generate code for a DLL.
diff --git a/gcc/config/i386/host-mingw32.c b/gcc/config/i386/host-mingw32.c
index 68100b7a226..ed663a15d6a 100644
--- a/gcc/config/i386/host-mingw32.c
+++ b/gcc/config/i386/host-mingw32.c
@@ -42,9 +42,6 @@ static size_t mingw32_gt_pch_alloc_granularity (void);
 
 static inline void w32_error(const char*, const char*, int, const char*);
 
-/* FIXME: Is this big enough?  */
-static const size_t pch_VA_max_size  = 128 * 1024 * 1024;
-
 /* Granularity for reserving address space.  */
 static size_t va_granularity = 0x10000;
 
@@ -86,9 +83,6 @@ static void *
 mingw32_gt_pch_get_address (size_t size, int)
 {
   void* res;
-  size = (size + va_granularity - 1) & ~(va_granularity - 1);
-  if (size > pch_VA_max_size)
-    return NULL;
 
   /* FIXME: We let system determine base by setting first arg to NULL.
      Allocating at top of available address space avoids unnecessary
@@ -98,7 +92,7 @@ mingw32_gt_pch_get_address (size_t size, int)
      If we allocate at bottom we need to reserve the address as early
      as possible and at the same point in each invocation. */
  
-  res = VirtualAlloc (NULL, pch_VA_max_size,
+  res = VirtualAlloc (NULL, size,
 		      MEM_RESERVE | MEM_TOP_DOWN,
 		      PAGE_NOACCESS);
   if (!res)
@@ -148,7 +142,7 @@ mingw32_gt_pch_use_address (void *addr, size_t size, int fd,
 
   /* Offset must be also be a multiple of allocation granularity for
      this to work.  We can't change the offset. */ 
-  if ((offset & (va_granularity - 1)) != 0 || size > pch_VA_max_size)
+  if ((offset & (va_granularity - 1)) != 0)
     return -1;
 
 
diff --git a/gcc/config/i386/mingw32.h b/gcc/config/i386/mingw32.h
index 5f36909a8bf..b5cdf0920d4 100644
--- a/gcc/config/i386/mingw32.h
+++ b/gcc/config/i386/mingw32.h
@@ -142,7 +142,7 @@ along with GCC; see the file COPYING3.  If not see
 #define REAL_LIBGCC_SPEC \
   "%{mthreads:-lmingwthrd} -lmingw32 \
    " SHARED_LIBGCC_SPEC " \
-   -lmoldname -lmingwex -lmsvcrt"
+   -lmoldname -lmingwex %{!mcrtdll=*:-lmsvcrt} %{mcrtdll=*:-l%*}"
 
 #undef STARTFILE_SPEC
 #define STARTFILE_SPEC "%{shared|mdll:dllcrt2%O%s} \
@@ -162,8 +162,16 @@ along with GCC; see the file COPYING3.  If not see
   crtend.o%s"
 
 /* Override startfile prefix defaults.  */
+/*
+ * change hardcoded /mingw prefix to the real prefix .. isn't this rubbish?
+ * it might work at build time and could be important there but beyond that?!
+ */
 #ifndef STANDARD_STARTFILE_PREFIX_1
-#define STANDARD_STARTFILE_PREFIX_1 "/mingw/lib/"
+#ifdef __MINGW64__
+#define STANDARD_STARTFILE_PREFIX_1 "C:/msys64/mingw64/x86_64-w64-mingw64/lib/"
+#else
+#define STANDARD_STARTFILE_PREFIX_1 "C:/msys64/mingw32/i686-w64-mingw32/lib/"
+#endif
 #endif
 #ifndef STANDARD_STARTFILE_PREFIX_2
 #define STANDARD_STARTFILE_PREFIX_2 ""
@@ -172,7 +180,11 @@ along with GCC; see the file COPYING3.  If not see
 /* For native mingw-version we need to take care that NATIVE_SYSTEM_HEADER_DIR
    macro contains POSIX-style path.  See bug 52947.  */
 #undef NATIVE_SYSTEM_HEADER_DIR
-#define NATIVE_SYSTEM_HEADER_DIR "/mingw/include"
+#ifdef __MINGW64__
+#define NATIVE_SYSTEM_HEADER_DIR "C:/msys64/mingw64/x86_64-w64-mingw64/include"
+#else
+#define NATIVE_SYSTEM_HEADER_DIR "C:/msys64/mingw32/i686-w64-mingw32/include"
+#endif
 
 /* Output STRING, a string representing a filename, to FILE.
    We canonicalize it to be in Unix format (backslashes are replaced
diff --git a/gcc/config/i386/xm-mingw32.h b/gcc/config/i386/xm-mingw32.h
index d4d63f58322..d75e09859fe 100644
--- a/gcc/config/i386/xm-mingw32.h
+++ b/gcc/config/i386/xm-mingw32.h
@@ -25,9 +25,10 @@ along with GCC; see the file COPYING3.  If not see
 
 /* This is the name of the null device on windows.  */
 #define HOST_BIT_BUCKET "nul"
+#define HOST_BIT_BUCKET2 "/dev/null"
 
 /*  The st_ino field of struct stat is always 0.  */
-#define HOST_LACKS_INODE_NUMBERS
+#define HOST_LACKS_INODE_NUMBERS 1
 
 #ifdef __MINGW32__
 #undef __USE_MINGW_ANSI_STDIO
diff --git a/gcc/config/i386/xmmintrin.h b/gcc/config/i386/xmmintrin.h
index 5f58d24430c..de1a832c79a 100644
--- a/gcc/config/i386/xmmintrin.h
+++ b/gcc/config/i386/xmmintrin.h
@@ -64,6 +64,10 @@ _mm_prefetch (const void *__P, enum _mm_hint __I)
 #define __DISABLE_SSE__
 #endif /* __SSE__ */
 
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 /* The Intel API is flexible enough that we must allow aliasing with other
    vector types, and their scalar components.  */
 typedef float __m128 __attribute__ ((__vector_size__ (16), __may_alias__));
@@ -1248,6 +1252,10 @@ do {									\
   (row3) = __builtin_ia32_movhlps (__t3, __t2);				\
 } while (0)
 
+#ifdef __cplusplus
+}
+#endif
+
 /* For backward source compatibility.  */
 # include <emmintrin.h>
 
diff --git a/gcc/config/m68k/linux.h b/gcc/config/m68k/linux.h
index c6e005604d4..d855aeb6971 100644
--- a/gcc/config/m68k/linux.h
+++ b/gcc/config/m68k/linux.h
@@ -171,7 +171,7 @@ along with GCC; see the file COPYING3.  If not see
 
 #undef FUNCTION_VALUE
 #define FUNCTION_VALUE(VALTYPE, FUNC)					\
-  m68k_function_value (VALTYPE, FUNC)
+  m68k_function_value (VALTYPE, FUNC, true)
 
 /* Define how to find the value returned by a library function
    assuming the value has mode MODE.
@@ -223,8 +223,6 @@ along with GCC; see the file COPYING3.  If not see
      : "%d0", "%d2", "%d3");						\
 }
 
-#define TARGET_ASM_FILE_END file_end_indicate_exec_stack
-
 #undef DBX_REGISTER_NUMBER
 #define DBX_REGISTER_NUMBER(REGNO) (REGNO)
 
@@ -242,4 +240,4 @@ along with GCC; see the file COPYING3.  If not see
 
 /* Install the __sync libcalls.  */
 #undef TARGET_INIT_LIBFUNCS
-#define TARGET_INIT_LIBFUNCS  m68k_init_sync_libfuncs
+#define TARGET_INIT_LIBFUNCS  m68k_init_libfuncs
diff --git a/gcc/config/m68k/m68k-protos.h b/gcc/config/m68k/m68k-protos.h
index 106518423a2..474578c99dc 100644
--- a/gcc/config/m68k/m68k-protos.h
+++ b/gcc/config/m68k/m68k-protos.h
@@ -63,7 +63,7 @@ extern rtx m68k_legitimize_tls_address (rtx);
 extern bool m68k_tls_reference_p (rtx, bool);
 extern int valid_dbcc_comparison_p_2 (rtx, machine_mode);
 extern rtx m68k_libcall_value (machine_mode);
-extern rtx m68k_function_value (const_tree, const_tree);
+extern rtx m68k_function_value (const_tree, const_tree, bool);
 extern int emit_move_sequence (rtx *, machine_mode, rtx);
 extern bool m68k_movem_pattern_p (rtx, rtx, HOST_WIDE_INT, bool);
 extern const char *m68k_output_movem (rtx *, rtx, HOST_WIDE_INT, bool);
@@ -100,3 +100,13 @@ extern void init_68881_table (void);
 extern rtx m68k_legitimize_call_address (rtx);
 extern rtx m68k_legitimize_sibcall_address (rtx);
 extern int m68k_hard_regno_rename_ok(unsigned int, unsigned int);
+
+#ifdef RTX_CODE
+#ifdef TREE_CODE
+void m68k_init_cumulative_args (CUMULATIVE_ARGS *, tree, rtx, tree, int);
+#endif
+#endif
+void m68k_order_regs_for_local_alloc(void);
+void m68k_call_abi_override (const_tree);
+enum calling_abi m68k_function_type_abi (const_tree);
+enum calling_abi m68k_cfun_abi (void);
diff --git a/gcc/config/m68k/m68k.c b/gcc/config/m68k/m68k.c
index 68504b84abb..1cb950553b8 100644
--- a/gcc/config/m68k/m68k.c
+++ b/gcc/config/m68k/m68k.c
@@ -45,6 +45,7 @@ along with GCC; see the file COPYING3.  If not see
 #include "emit-rtl.h"
 #include "stmt.h"
 #include "expr.h"
+#include "toplev.h"
 #include "reload.h"
 #include "tm_p.h"
 #include "target.h"
@@ -61,6 +62,7 @@ along with GCC; see the file COPYING3.  If not see
 #include "optabs.h"
 #include "builtins.h"
 #include "rtl-iter.h"
+#include "dbxout.h"
 
 /* This file should be included last.  */
 #include "target-def.h"
@@ -77,6 +79,11 @@ enum reg_class regno_reg_class[] =
 };
 
 
+/* Name of text, data, and rodata sections used in varasm.c.  */
+const char *m68k_text_section;
+const char *m68k_data_section;
+const char *m68k_rodata_section;
+
 /* The minimum number of integer registers that we want to save with the
    movem instruction.  Using two movel instructions instead of a single
    moveml is about 15% faster for the 68020 and 68030 at no expense in
@@ -151,6 +158,7 @@ static void m68k_sched_dfa_post_advance_cycle (void);
 static int m68k_sched_first_cycle_multipass_dfa_lookahead (void);
 
 static bool m68k_can_eliminate (const int, const int);
+static void m68k_set_current_function (tree);
 static void m68k_conditional_register_usage (void);
 static bool m68k_legitimate_address_p (machine_mode, rtx, bool);
 static void m68k_option_override (void);
@@ -163,6 +171,8 @@ static rtx m68k_struct_value_rtx (tree, int);
 static tree m68k_handle_fndecl_attribute (tree *node, tree name,
 					  tree args, int flags,
 					  bool *no_add_attrs);
+static tree m68k_handle_type_attribute (tree *, tree, tree, int, bool *);
+static int m68k_comp_type_attributes (const_tree, const_tree);
 static void m68k_compute_frame_layout (void);
 static bool m68k_save_reg (unsigned int regno, bool interrupt_handler);
 static bool m68k_ok_for_sibcall_p (tree, tree);
@@ -176,17 +186,15 @@ static void m68k_output_dwarf_dtprel (FILE *, int, rtx) ATTRIBUTE_UNUSED;
 static void m68k_trampoline_init (rtx, tree, rtx);
 static int m68k_return_pops_args (tree, tree, int);
 static rtx m68k_delegitimize_address (rtx);
-static void m68k_function_arg_advance (cumulative_args_t, machine_mode,
-				       const_tree, bool);
-static rtx m68k_function_arg (cumulative_args_t, machine_mode,
-			      const_tree, bool);
+static void m68k_maybe_switch_abi (void);
 static bool m68k_cannot_force_const_mem (machine_mode mode, rtx x);
 static bool m68k_output_addr_const_extra (FILE *, rtx);
-static void m68k_init_sync_libfuncs (void) ATTRIBUTE_UNUSED;
+static void m68k_init_libfuncs (void) ATTRIBUTE_UNUSED;
 static enum flt_eval_method
 m68k_excess_precision (enum excess_precision_type);
 static machine_mode m68k_promote_function_mode (const_tree, machine_mode,
 						int *, const_tree, int);
+static void m68k_file_end (void);
 
 /* Initialize the GCC target structure.  */
 
@@ -221,10 +229,12 @@ static machine_mode m68k_promote_function_mode (const_tree, machine_mode,
 #undef TARGET_ASM_OUTPUT_MI_THUNK
 #define TARGET_ASM_OUTPUT_MI_THUNK m68k_output_mi_thunk
 #undef TARGET_ASM_CAN_OUTPUT_MI_THUNK
-#define TARGET_ASM_CAN_OUTPUT_MI_THUNK hook_bool_const_tree_hwi_hwi_const_tree_true
+#define TARGET_ASM_CAN_OUTPUT_MI_THUNK m68k_can_output_mi_thunk
 
 #undef TARGET_ASM_FILE_START_APP_OFF
 #define TARGET_ASM_FILE_START_APP_OFF true
+#undef TARGET_ASM_FILE_END
+#define TARGET_ASM_FILE_END m68k_file_end
 
 #undef TARGET_LEGITIMIZE_ADDRESS
 #define TARGET_LEGITIMIZE_ADDRESS m68k_legitimize_address
@@ -303,6 +313,12 @@ static machine_mode m68k_promote_function_mode (const_tree, machine_mode,
 #undef TARGET_CAN_ELIMINATE
 #define TARGET_CAN_ELIMINATE m68k_can_eliminate
 
+#undef TARGET_SET_CURRENT_FUNCTION
+#define TARGET_SET_CURRENT_FUNCTION m68k_set_current_function
+
+#undef TARGET_EXPAND_TO_RTL_HOOK
+#define TARGET_EXPAND_TO_RTL_HOOK m68k_maybe_switch_abi
+
 #undef TARGET_CONDITIONAL_REGISTER_USAGE
 #define TARGET_CONDITIONAL_REGISTER_USAGE m68k_conditional_register_usage
 
@@ -337,6 +353,9 @@ static machine_mode m68k_promote_function_mode (const_tree, machine_mode,
 #undef TARGET_PROMOTE_FUNCTION_MODE
 #define TARGET_PROMOTE_FUNCTION_MODE m68k_promote_function_mode
 
+#undef TARGET_STATIC_CHAIN
+#define TARGET_STATIC_CHAIN m68k_static_chain
+
 static const struct attribute_spec m68k_attribute_table[] =
 {
   /* { name, min_len, max_len, decl_req, type_req, fn_type_req, handler,
@@ -347,10 +366,20 @@ static const struct attribute_spec m68k_attribute_table[] =
     m68k_handle_fndecl_attribute, false },
   { "interrupt_thread", 0, 0, true,  false, false,
     m68k_handle_fndecl_attribute, false },
+
+ /* cdecl attribute specifies to pass arguments on the stack */
+  { "cdecl",             0, 0, false, true,  true,  m68k_handle_type_attribute, false },
+  /* Regparm attribute specifies how many integer arguments are to be
+     passed in registers.  */
+  { "regparm",           0, 1, false, true,  true,  m68k_handle_type_attribute, false },
+  /* Fastcall attribute says callee is responsible for popping arguments
+   if they are not variable.  */
+  { "fastcall",          0, 0, false, true,  true,  m68k_handle_type_attribute, false },
   { NULL,                0, 0, false, false, false, NULL, false }
 };
 
-struct gcc_target targetm = TARGET_INITIALIZER;
+#undef TARGET_COMP_TYPE_ATTRIBUTES
+#define TARGET_COMP_TYPE_ATTRIBUTES m68k_comp_type_attributes
 
 /* Base flags for 68k ISAs.  */
 #define FL_FOR_isa_00    FL_ISA_68000
@@ -459,6 +488,9 @@ unsigned int m68k_cpu_flags;
 /* The set of FL_* flags that apply to the processor to be tuned for.  */
 unsigned int m68k_tune_flags;
 
+/* The abi used by target.  */
+enum calling_abi m68k_abi;
+
 /* Asm templates for calling or jumping to an arbitrary symbolic address,
    or NULL if such calls or jumps are not supported.  The address is held
    in operand 0.  */
@@ -469,10 +501,27 @@ const char *m68k_symbolic_jump;
 enum M68K_SYMBOLIC_CALL m68k_symbolic_call_var;
 
 
-/* Implement TARGET_OPTION_OVERRIDE.  */
+/* Clear stack slot assignments remembered from previous functions.
+   This is called from INIT_EXPANDERS once before RTL is emitted for each
+   function.  */
+
+static struct machine_function *
+m68k_init_machine_status (void)
+{
+  struct machine_function *machine;
+
+  machine = ggc_cleared_alloc<machine_function> ();
+  machine->call_abi = m68k_abi;
+
+  return machine;
+}
+
+/* Override various settings based on options.  If MAIN_ARGS_P, the
+   options are from the command line, otherwise they are from
+   attributes.  */
 
 static void
-m68k_option_override (void)
+m68k_option_override_internal (bool main_args_p)
 {
   const struct m68k_target_selection *entry;
   unsigned long target_mask;
@@ -518,6 +567,8 @@ m68k_option_override (void)
 
   m68k_cpu_flags = entry->flags;
 
+  m68k_abi = TARGET_FASTCALL ? FASTCALL_ABI : STD_ABI;
+
   /* Use the architecture setting to derive default values for
      certain flags.  */
   target_mask = 0;
@@ -635,6 +686,27 @@ m68k_option_override (void)
       gcc_unreachable ();
     }
 
+  /* Set the pseudo-ops for the various standard sections.  */
+#ifdef ELF_SECTION_FORMAT
+  {
+  char *tmp;
+  const char *name;
+  name = m68k_text_string ? m68k_text_string : M68K_DEFAULT_TEXT_SECTION;
+  m68k_text_section = tmp = XNEWVEC (char, strlen (name) + sizeof (ELF_SECTION_FORMAT) + 1);
+  sprintf (tmp, ELF_SECTION_FORMAT, name);
+  name = m68k_data_string ? m68k_data_string : M68K_DEFAULT_DATA_SECTION;
+  m68k_data_section = tmp = XNEWVEC (char, strlen (name) + sizeof (ELF_SECTION_FORMAT) + 1);
+  sprintf (tmp, ELF_SECTION_FORMAT, name);
+  name = m68k_rodata_string ? m68k_rodata_string : M68K_DEFAULT_RODATA_SECTION;
+  m68k_rodata_section = tmp = XNEWVEC (char, strlen (name) + sizeof (ELF_SECTION_FORMAT) + 1);
+  sprintf (tmp, ELF_SECTION_FORMAT, name);
+  }
+#else
+  m68k_text_section = "\t" M68K_DEFAULT_TEXT_SECTION;
+  m68k_data_section = "\t" M68K_DEFAULT_DATA_SECTION;
+  m68k_rodata_section = m68k_text_section;
+#endif
+
 #ifndef ASM_OUTPUT_ALIGN_WITH_NOP
   if (align_labels > 2)
     {
@@ -685,8 +757,32 @@ m68k_option_override (void)
       else
 	m68k_sched_mac = MAC_NO;
     }
+
+  init_machine_status = m68k_init_machine_status;
+
+  /* Save the initial options in case the user does function specific options */
+  if (main_args_p)
+    target_option_default_node = target_option_current_node
+      = build_target_option_node (&global_options);
+
+  /*
+   * disable -fcombine-stack-adjustments for coldfire/mshort combination,
+   * which generates wrong CFI offsets.
+   * https://gcc.gnu.org/bugzilla/show_bug.cgi?id=88160
+   */
+  if (PREFERRED_STACK_BOUNDARY > 16 && INT_TYPE_SIZE <= 16 && (write_symbols & DWARF2_DEBUG))
+    flag_combine_stack_adjustments = 0;
+}
+
+/* Implement the TARGET_OPTION_OVERRIDE hook.  */
+
+static void
+m68k_option_override (void)
+{
+  m68k_option_override_internal (true);
 }
 
+
 /* Implement TARGET_OVERRIDE_OPTIONS_AFTER_CHANGE.  */
 
 static void
@@ -783,6 +879,282 @@ m68k_handle_fndecl_attribute (tree *node, tree name,
   return NULL_TREE;
 }
 
+/* Handle a "regparm" or "cdecl" attribute;
+   arguments as in struct attribute_spec.handler.  */
+
+static void
+m68k_validate_mutually_exclusive_attribute (const char *attr1, const char *attr2, tree *node, tree name ATTRIBUTE_UNUSED)
+{
+  if (lookup_attribute (attr2, TYPE_ATTRIBUTES(*node)))
+    error ("%s and %s attributes are mutually exclusive", attr1, attr2);
+}
+
+static tree
+m68k_handle_type_attribute (tree *node, tree name, tree args ATTRIBUTE_UNUSED,
+        		    int flags ATTRIBUTE_UNUSED, bool *no_add_attrs)
+{
+  if (TREE_CODE (*node) == FUNCTION_TYPE ||
+      TREE_CODE (*node) == METHOD_TYPE ||
+      TREE_CODE (*node) == FIELD_DECL ||
+      TREE_CODE (*node) == TYPE_DECL)
+    {
+      if (is_attribute_p ("cdecl", name))
+        {
+          m68k_validate_mutually_exclusive_attribute ("cdecl", "fastcall", node, name);
+          m68k_validate_mutually_exclusive_attribute ("cdecl", "regparm", node, name);
+        }
+      else if (is_attribute_p ("fastcall", name))
+        {
+          m68k_validate_mutually_exclusive_attribute ("fastcall", "cdecl", node, name);
+          m68k_validate_mutually_exclusive_attribute ("fastcall", "regparm", node, name);
+        }
+      else if (is_attribute_p ("regparm", name))
+        {
+          m68k_validate_mutually_exclusive_attribute ("regparm", "cdecl", node, name);
+          m68k_validate_mutually_exclusive_attribute ("regparm", "fastcall", node, name);
+        }
+    }
+  else
+    {
+      warning (OPT_Wattributes, "%qE attribute only applies to functions",
+               name);
+      *no_add_attrs = true;
+    }
+
+  return NULL_TREE;
+}
+
+/* Return zero if the attributes on TYPE1 and TYPE2 are incompatible,
+   one if they are compatible, and two if they are nearly compatible
+   (which causes a warning to be generated). */
+
+static int
+m68k_comp_exclusive_type_attributes(const char *name1, const char *name2, const_tree type1, const_tree type2)
+{
+	return (!! lookup_attribute (name1, TYPE_ATTRIBUTES (type1)) !=
+            !! lookup_attribute (name1, TYPE_ATTRIBUTES (type2))
+         || !! lookup_attribute (name2, TYPE_ATTRIBUTES (type1)) !=
+            !! lookup_attribute (name2, TYPE_ATTRIBUTES (type2)));
+}
+
+static int
+m68k_comp_type_attributes (const_tree type1, const_tree type2)
+{
+  /* Functions or methods are incompatible if they specify mutually
+     exclusive ways of passing arguments.  */
+  if (TREE_CODE (type1) == FUNCTION_TYPE || TREE_CODE (type1) == METHOD_TYPE)
+    {
+      tree arg1, arg2;
+      if (m68k_comp_exclusive_type_attributes ("cdecl", "regparm", type1, type2)
+	   || m68k_comp_exclusive_type_attributes ("cdecl", "fastcall", type1, type2)
+	   || m68k_comp_exclusive_type_attributes ("regparm", "fastcall", type1, type2))
+        return 0; /* 'regparm' and 'cdecl' are mutually exclusive.  */
+
+      arg1 = lookup_attribute ("regparm", TYPE_ATTRIBUTES (type1));
+      arg2 = lookup_attribute ("regparm", TYPE_ATTRIBUTES (type2));
+      if (arg1 && arg2)
+        {
+          int num1 = 0, num2 = 0;
+          if (TREE_VALUE (arg1) && TREE_CODE (TREE_VALUE (arg1)) == TREE_LIST)
+            {
+              tree numofregs = TREE_VALUE (TREE_VALUE (arg1));
+              if (numofregs)
+        	num1 = TREE_INT_CST_LOW (numofregs);
+            }
+          if (TREE_VALUE (arg2) && TREE_CODE (TREE_VALUE (arg2)) == TREE_LIST)
+            {
+              tree numofregs = TREE_VALUE (TREE_VALUE (arg2));
+              if (numofregs)
+        	num2 = TREE_INT_CST_LOW (numofregs);
+            }
+          if (num1 != num2)
+            return 0; /* Different numbers, or no number in one type.  */
+        }
+    }
+  return 1;
+}
+
+
+/* Implementation of call abi switching target hook. Specific to FNDECL
+   the specific call register sets are set.  See also
+   ix86_conditional_register_usage for more details.  */
+void
+m68k_call_abi_override (const_tree fndecl)
+{
+  if (fndecl == NULL_TREE)
+    cfun->machine->call_abi = m68k_abi;
+  else
+    cfun->machine->call_abi = m68k_function_type_abi (TREE_TYPE (fndecl));
+}
+
+static enum calling_abi
+m68k_function_abi (const_tree fndecl)
+{
+  if (! fndecl)
+    return m68k_abi;
+  return m68k_function_type_abi (TREE_TYPE (fndecl));
+}
+
+/* Returns value STD_ABI, FASTCALL_ABI dependent on cfun, specifying the
+   call abi used.  */
+enum calling_abi
+m68k_cfun_abi (void)
+{
+  if (! cfun)
+    return m68k_abi;
+  return cfun->machine->call_abi;
+}
+
+/* Returns value STD_ABI, FASTCALL_ABI dependent on fntype, specifying the
+   call abi used.  */
+enum calling_abi
+m68k_function_type_abi (const_tree fntype)
+{
+  if (fntype != NULL)
+    {
+      enum calling_abi abi = m68k_abi;
+      if (abi == STD_ABI)
+	{
+	  if (lookup_attribute ("fastcall", TYPE_ATTRIBUTES (fntype)))
+	    abi = FASTCALL_ABI;
+	}
+      else if (lookup_attribute ("cdecl", TYPE_ATTRIBUTES (fntype)))
+	abi = STD_ABI;
+      return abi;
+    }
+  return m68k_abi;
+}
+
+/* STD and FASTCALL ABI have different set of call used registers.  Avoid expensive
+   re-initialization of init_regs each time we switch function context since
+   this is needed only during RTL expansion.  */
+static void
+m68k_maybe_switch_abi (void)
+{
+  if (call_used_regs[D2_REG] == (cfun->machine->call_abi == STD_ABI))
+    reinit_regs ();
+}
+
+/* Initialize a variable CUM of type CUMULATIVE_ARGS
+   for a call to a function whose data type is FNTYPE.
+   For a library call, FNTYPE is 0.  */
+
+void
+m68k_init_cumulative_args (CUMULATIVE_ARGS *cum,  /* Argument info to initialize */
+		      tree fntype,	/* tree ptr for function decl */
+		      rtx libname,	/* SYMBOL_REF of library name or 0 */
+		      tree fndecl,
+		      int caller ATTRIBUTE_UNUSED)
+{
+  cum->last_arg_reg = -1;
+  cum->last_arg_len = 0;
+  CLEAR_HARD_REG_SET(cum->regs_already_used);
+  
+  if (libname)
+    {
+      cum->call_abi = m68k_abi;
+    }
+  else if (fndecl)
+    {
+      cum->call_abi = m68k_function_abi (fndecl);
+    }
+  else
+    {
+      cum->call_abi = m68k_function_type_abi (fntype);
+    }
+
+#if ! defined (PCC_STATIC_STRUCT_RETURN) && defined (M68K_STRUCT_VALUE_REGNUM)
+  /* If return value is a structure, and we pass the buffer address in a
+     register, we can't use this register for our own purposes.
+     FIXME: Something similar would be useful for static chain.  */
+  if (fntype && aggregate_value_p (TREE_TYPE (fntype), fntype))
+    SET_HARD_REG_BIT(cum->regs_already_used, M68K_STRUCT_VALUE_REGNUM);
+#endif
+}
+
+/* Define where to put the arguments to a function.
+   Value is zero to push the argument on the stack,
+   or a hard register in which to store the argument.
+
+   MODE is the argument's machine mode.
+   TYPE is the data type of the argument (as a tree).
+    This is null for libcalls where that information may
+    not be available.
+   CUM is a variable of type CUMULATIVE_ARGS which gives info about
+    the preceding args and about the function being called.  */
+
+static rtx m68k_function_arg (cumulative_args_t cum_v, enum machine_mode mode,
+                              const_tree type, bool named)
+{
+  CUMULATIVE_ARGS *cum = get_cumulative_args (cum_v);
+
+  if (cum->call_abi == FASTCALL_ABI)
+    {
+      int regbegin = -1, regend, len;
+
+      /* FIXME: The last condition below is a workaround for a bug.  */
+      if (!TARGET_68881 && FLOAT_MODE_P (mode) && GET_MODE_UNIT_SIZE (mode) <= 4 &&
+          (GET_MODE_CLASS (mode) != MODE_COMPLEX_FLOAT || mode == SCmode))
+        {
+            regbegin = D0_REG; /* Dx */
+            regend = regbegin + M68K_FASTCALL_DATA_PARM;
+            len = (GET_MODE_SIZE (mode) + (UNITS_PER_WORD - 1)) / UNITS_PER_WORD;
+        }
+      else if (TARGET_68881 && FLOAT_MODE_P (mode) &&
+          GET_MODE_UNIT_SIZE (mode) <= 12 &&
+          (GET_MODE_CLASS (mode) != MODE_COMPLEX_FLOAT || mode == SCmode))
+        {
+          regbegin = FP0_REG; /* FPx */
+          regend = regbegin + M68K_FASTCALL_DATA_PARM;
+          len = GET_MODE_NUNITS (mode);
+        }
+      /* FIXME: Two last conditions below are workarounds for bugs.  */
+      else if (INTEGRAL_MODE_P (mode) && mode != CQImode && mode != CHImode)
+        {
+          len = (GET_MODE_SIZE (mode) + (UNITS_PER_WORD - 1)) / UNITS_PER_WORD;
+          if (len == 1)
+            {
+              if (type && POINTER_TYPE_P (type))  /* THIS */
+                {
+                  regbegin = A0_REG; /* Ax */
+                  regend = regbegin + M68K_FASTCALL_ADDR_PARM;
+                }
+              else
+                {
+                  regbegin = D0_REG; /* Dx */
+                  regend = regbegin + M68K_FASTCALL_DATA_PARM;
+                }
+            }
+        }
+
+      if (regbegin != -1)
+        {
+          int reg;
+          for (reg = regbegin; reg < regend; reg++)
+            {
+              if (!TEST_HARD_REG_BIT(cum->regs_already_used, reg) &&
+                  (reg + len <= regend))
+                {
+                  cum->last_arg_reg = reg;
+                  cum->last_arg_len = len;
+                  break;
+                }
+             }
+         }
+        
+      if (!named)
+        SET_HARD_REG_SET(cum->regs_already_used);
+
+      if (cum->last_arg_reg != -1)
+        {
+          return gen_rtx_REG (mode, cum->last_arg_reg);
+        }
+    }
+  return NULL_RTX;
+}
+
+
+
 static void
 m68k_compute_frame_layout (void)
 {
@@ -995,6 +1367,8 @@ m68k_set_frame_related (rtx_insn *insn)
 
 /* Emit RTL for the "prologue" define_expand.  */
 
+#define IS_INTERRUPT(func_kind) (func_kind != m68k_fk_normal_function)
+
 void
 m68k_expand_prologue (void)
 {
@@ -1009,7 +1383,7 @@ m68k_expand_prologue (void)
 
   /* If the stack limit is a symbol, we can check it here,
      before actually allocating the space.  */
-  if (crtl->limit_stack
+  if (crtl->limit_stack && !IS_INTERRUPT(m68k_get_function_kind (current_function_decl))
       && GET_CODE (stack_limit_rtx) == SYMBOL_REF)
     {
       limit = plus_constant (Pmode, stack_limit_rtx, current_frame.size + 4);
@@ -1099,9 +1473,40 @@ m68k_expand_prologue (void)
 	}
     }
 
+#ifdef STACK_CHECK_ATARI
+  if (flag_stack_check == FULL_BUILTIN_STACK_CHECK &&
+        !IS_INTERRUPT(m68k_get_function_kind (current_function_decl)) &&
+        !DECL_NO_LIMIT_STACK(current_function_decl))
+  {
+        rtx_code_label *lab1;
+        rtx limit_mem;
+        rtx jump;
+
+        static rtx stack_limit_symbol;
+        static rtx stack_overflow_rtx;
+
+        if (stack_limit_symbol == 0)
+                stack_limit_symbol = gen_rtx_SYMBOL_REF (Pmode, "_StkLim");
+        if (stack_overflow_rtx == 0)
+                stack_overflow_rtx = gen_rtx_SYMBOL_REF (Pmode, "_StkOver");
+        lab1 = gen_label_rtx ();
+        limit_mem = gen_rtx_MEM (Pmode, stack_limit_symbol);
+        emit_cmp_and_jump_insns (limit_mem, stack_pointer_rtx, LTU, 0,
+                           Pmode, 1, lab1);
+        JUMP_LABEL (get_last_insn ()) = lab1;
+#if 0
+        funmem = gen_rtx_MEM (FUNCTION_MODE, stack_overflow_rtx);
+        jump = targetm.gen_call(funmem, const0_rtx, 0, 0);
+#endif
+        jump = gen_rtx_SET(pc_rtx, stack_overflow_rtx);
+        emit_insn(jump);
+        emit_barrier ();
+        emit_label(lab1);
+  } else
+#endif
   /* If the stack limit is not a symbol, check it here.
      This has the disadvantage that it may be too late...  */
-  if (crtl->limit_stack)
+  if (crtl->limit_stack && !IS_INTERRUPT(m68k_get_function_kind (current_function_decl)))
     {
       if (REG_P (stack_limit_rtx))
         emit_insn (gen_ctrapsi4 (gen_rtx_LTU (VOIDmode, stack_pointer_rtx,
@@ -1398,12 +1803,25 @@ static bool
 m68k_ok_for_sibcall_p (tree decl, tree exp)
 {
   enum m68k_function_kind kind;
+  tree type;
   
   /* We cannot use sibcalls for nested functions because we use the
      static chain register for indirect calls.  */
   if (CALL_EXPR_STATIC_CHAIN (exp))
     return false;
 
+  if (decl)
+    {
+      type = TREE_TYPE (decl);
+    }
+  else
+    {
+      /* We're looking at the CALL_EXPR, we need the type of the function.  */
+      type = CALL_EXPR_FN (exp);		/* pointer expression */
+      type = TREE_TYPE (type);			/* pointer type */
+      type = TREE_TYPE (type);			/* function type */
+    }
+
   if (!VOID_TYPE_P (TREE_TYPE (DECL_RESULT (cfun->decl))))
     {
       /* Check that the return value locations are the same.  For
@@ -1424,6 +1842,18 @@ m68k_ok_for_sibcall_p (tree decl, tree exp)
 	return false;
     }
 
+  /* The FASTCALL ABI has more call-clobbered registers;
+      disallow sibcalls from STD to FASTCALL.  */
+  if (cfun->machine->call_abi == STD_ABI
+      && m68k_function_type_abi (type) == FASTCALL_ABI)
+      return false;
+
+  /* FIXME: currently does not work at all for FASTCALL, because the
+     A2 register for the call will be restored in the epilogue
+     before being used */
+  if (cfun->machine->call_abi == FASTCALL_ABI || m68k_function_type_abi (type) != cfun->machine->call_abi)
+      return false;
+
   kind = m68k_get_function_kind (current_function_decl);
   if (kind == m68k_fk_normal_function)
     /* We can always sibcall from a normal function, because it's
@@ -1438,26 +1868,19 @@ m68k_ok_for_sibcall_p (tree decl, tree exp)
   return false;
 }
 
-/* On the m68k all args are always pushed.  */
-
-static rtx
-m68k_function_arg (cumulative_args_t cum ATTRIBUTE_UNUSED,
-		   machine_mode mode ATTRIBUTE_UNUSED,
-		   const_tree type ATTRIBUTE_UNUSED,
-		   bool named ATTRIBUTE_UNUSED)
-{
-  return NULL_RTX;
-}
-
 static void
-m68k_function_arg_advance (cumulative_args_t cum_v, machine_mode mode,
-			   const_tree type, bool named ATTRIBUTE_UNUSED)
+m68k_function_arg_advance (cumulative_args_t cum_v, machine_mode mode ATTRIBUTE_UNUSED,
+			   const_tree type ATTRIBUTE_UNUSED, bool named ATTRIBUTE_UNUSED)
 {
   CUMULATIVE_ARGS *cum = get_cumulative_args (cum_v);
 
-  *cum += (mode != BLKmode
-	   ? (GET_MODE_SIZE (mode) + 3) & ~3
-	   : (int_size_in_bytes (type) + 3) & ~3);
+  if (cum->last_arg_reg != -1)
+    {
+      int count;
+      for (count = 0; count < cum->last_arg_len; count++)
+	SET_HARD_REG_BIT(cum->regs_already_used, cum->last_arg_reg + count);
+      cum->last_arg_reg = -1;
+    }
 }
 
 /* Convert X to a legitimate function call memory reference and return the
@@ -1481,10 +1904,58 @@ m68k_legitimize_sibcall_address (rtx x)
   if (sibcall_operand (XEXP (x, 0), VOIDmode))
     return x;
 
+  if (m68k_abi == FASTCALL_ABI)
+  {
+    static bool issued_error;
+    if (!issued_error)
+      {
+	issued_error = true;
+	error ("m68k_legitimize_sibcall_address not supported with -mfastcall");
+      }
+  }
   emit_move_insn (gen_rtx_REG (Pmode, STATIC_CHAIN_REGNUM), XEXP (x, 0));
   return replace_equiv_address (x, gen_rtx_REG (Pmode, STATIC_CHAIN_REGNUM));
 }
 
+/* Return an rtx for the static chain for FNDECL.  If INCOMING_P is true,
+       then it should be for the callee; otherwise for the caller.  */
+static rtx
+m68k_static_chain (const_tree fndecl_or_type, bool incoming_p)
+{
+  const_tree fntype, fndecl;
+
+  if (DECL_P (fndecl_or_type) && !DECL_STATIC_CHAIN (fndecl_or_type))
+    return NULL;
+
+  if (incoming_p)
+    {
+    }
+
+  if (TREE_CODE (fndecl_or_type) == FUNCTION_DECL)
+   {
+      fntype = TREE_TYPE (fndecl_or_type);
+      fndecl = fndecl_or_type;
+   }
+ else
+   {
+     fntype = fndecl_or_type;
+     fndecl = NULL;
+   }
+
+  if (m68k_function_type_abi(fntype) == FASTCALL_ABI)
+  {
+    static bool issued_error;
+    if (!issued_error)
+      {
+	issued_error = true;
+	error ("nested functions not supported with -mfastcall in %qD", fndecl);
+      }
+    return gen_rtx_MEM (Pmode, stack_pointer_rtx);
+  }
+  
+  return gen_rtx_REG (Pmode, STATIC_CHAIN_REGNUM);
+}
+
 /* Convert X to a legitimate address and return it if successful.  Otherwise
    return X.
 
@@ -1781,7 +2252,7 @@ output_btst (rtx *operands, rtx countop, rtx dataop, rtx_insn *insn, int signpos
 
   if (GET_CODE (countop) == CONST_INT)
     {
-      register int count = INTVAL (countop);
+      int count = INTVAL (countop);
       /* If COUNT is bigger than size of storage unit in use,
 	 advance to the containing unit of same size.  */
       if (count > signpos)
@@ -3668,9 +4139,9 @@ fp_reg_operand (rtx op, machine_mode mode ATTRIBUTE_UNUSED)
 int
 emit_move_sequence (rtx *operands, machine_mode mode, rtx scratch_reg)
 {
-  register rtx operand0 = operands[0];
-  register rtx operand1 = operands[1];
-  register rtx tem;
+  rtx operand0 = operands[0];
+  rtx operand1 = operands[1];
+  rtx tem;
 
   if (scratch_reg
       && reload_in_progress && GET_CODE (operand0) == REG
@@ -3984,6 +4455,135 @@ m68k_movem_pattern_p (rtx pattern, rtx automod_base,
    AUTOMOD_OFFSET is the total adjustment, otherwise it is 0.  STORE_P
    is true if this is a store instruction.  */
 
+static void
+reglist(char *buf, int regmask)
+{
+  int regnum;
+  int liststart;
+  int lastreg;
+  int status;
+
+  if (regmask == 0)
+    {
+      strcpy(buf, "#0");
+      return;
+    }
+#define oad(reg) \
+  *buf++ = '%'; \
+  *buf++ = REGISTER_PREFIX[0]; \
+  *buf++ = reg >= 8 ? 'a' : 'd'; \
+  *buf++ = '0' + (reg & 7)
+
+  liststart = status = 0;
+  lastreg = 20;
+  for (regnum = 0; regnum < 16; regnum++)
+    {
+      if ((1 << regnum) & regmask)
+	{
+	  if (regnum == (lastreg + 1) && regnum != 8)
+	    {
+	      if (liststart != 0)
+		*buf++ = '-';
+	      liststart = 0;
+	      status = 1;
+	      lastreg = regnum;
+	    }
+	  else
+	    {
+	      if (status != 0)
+		{
+		  oad(lastreg);
+		  status = 0;
+		  liststart = 1;
+		}
+	      if (liststart != 0)
+		*buf++ = '/';
+	      oad(regnum);
+	      lastreg = regnum;
+	      liststart = 1;
+	    }
+	}
+    }
+  if (status != 0)
+    {
+      oad(lastreg);
+    }
+  *buf = '\0';
+#undef oad
+}
+
+static void
+freglist(char *buf, int regmask)
+{
+  int regnum;
+  int liststart;
+  int lastreg;
+  int status;
+
+  if (regmask == 0)
+    {
+      strcpy(buf, "#0");
+      return;
+    }
+#define ofpreg(reg) \
+  *buf++ = '%'; \
+  *buf++ = REGISTER_PREFIX[0]; \
+  *buf++ = 'f'; \
+  *buf++ = 'p'; \
+  *buf++ = '0' + reg
+
+  liststart = status = 0;
+  lastreg = 20;
+  for (regnum = 0; regnum < 8; regnum++)
+    {
+      if ((1 << regnum) & regmask)
+	{
+	  if (regnum == (lastreg + 1) && regnum != 8)
+	    {
+	      if (liststart != 0)
+		*buf++ = '-';
+	      liststart = 0;
+	      status = 1;
+	      lastreg = regnum;
+	    }
+	  else
+	    {
+	      if (status != 0)
+		{
+		  ofpreg(lastreg);
+		  status = 0;
+		  liststart = 1;
+		}
+	      if (liststart != 0)
+		*buf++ = '/';
+	      ofpreg(regnum);
+	      lastreg = regnum;
+	      liststart = 1;
+	    }
+	}
+    }
+  if (status != 0)
+    {
+      ofpreg(lastreg);
+    }
+  *buf = '\0';
+#undef ofpreg
+}
+
+static int
+revbits(int mask, int n)
+{
+  int i;
+  int newmask;
+
+  for (newmask = 0, i = n; i > 0; i--)
+    {
+      newmask = (newmask << 1) | (mask & 1);
+      mask >>= 1;
+    }
+  return newmask;
+}
+
 const char *
 m68k_output_movem (rtx *operands, rtx pattern,
 		   HOST_WIDE_INT automod_offset, bool store_p)
@@ -4032,17 +4632,41 @@ m68k_output_movem (rtx *operands, rtx pattern,
   operands[1] = GEN_INT (mask);
   if (FP_REGNO_P (REGNO (XEXP (XVECEXP (pattern, 0, first), store_p))))
     {
+      char buf[8 * 6 + 1];
+
+      if (automod_offset >= 0)
+	 mask = revbits(mask, 8);
       if (store_p)
-	return "fmovem %1,%a0";
+	{
+	  strcpy(buf, "fmovem ");
+	  freglist(buf + 7, mask);
+	  strcat(buf, ",%a0");
+	}
       else
-	return "fmovem %a0,%1";
+	{
+	  strcpy(buf, "fmovem %a0,");
+	  freglist(buf + 11, mask);
+	}
+      return xstrdup(buf);
     }
   else
     {
+      char buf[16 * 5 + 1];
+
+      if (automod_offset < 0)
+	 mask = revbits(mask, 16);
       if (store_p)
-	return "movem%.l %1,%a0";
+	{
+	  strcpy(buf, "movem%.l ");
+	  reglist(buf + 9, mask);
+	  strcat(buf, ",%a0");
+	}
       else
-	return "movem%.l %a0,%1";
+	{
+	  strcpy(buf, "movem%.l %a0,");
+	  reglist(buf + 13, mask);
+	}
+      return xstrdup(buf);
     }
 }
 
@@ -4962,7 +5586,7 @@ output_andsi3 (rtx *operands)
 const char *
 output_iorsi3 (rtx *operands)
 {
-  register int logval;
+  int logval;
   if (GET_CODE (operands[2]) == CONST_INT
       && INTVAL (operands[2]) >> 16 == 0
       && (DATA_REG_P (operands[0])
@@ -4998,7 +5622,7 @@ output_iorsi3 (rtx *operands)
 const char *
 output_xorsi3 (rtx *operands)
 {
-  register int logval;
+  int logval;
   if (GET_CODE (operands[2]) == CONST_INT
       && INTVAL (operands[2]) >> 16 == 0
       && (offsettable_memref_p (operands[0]) || DATA_REG_P (operands[0]))
@@ -5039,7 +5663,7 @@ output_call (rtx x)
   if (symbolic_operand (x, VOIDmode))
     return m68k_symbolic_call;
   else
-    return "jsr %a0";
+    return "jsr %a0"; /* note: will be replaced by STATIC_CHAIN_REGNUM in m68k_legitimize_sibcall_address */
 }
 
 /* Likewise sibling calls.  */
@@ -5050,47 +5674,116 @@ output_sibcall (rtx x)
   if (symbolic_operand (x, VOIDmode))
     return m68k_symbolic_jump;
   else
-    return "jmp %a0";
+    return "jmp %a0"; /* note: will be replaced by STATIC_CHAIN_REGNUM in m68k_legitimize_sibcall_address */
+}
+
+/* Determine whether m68k_output_mi_thunk can succeed.  */
+
+static bool
+m68k_can_output_mi_thunk (const_tree, HOST_WIDE_INT delta, HOST_WIDE_INT vcall_offset,
+			 const_tree function)
+{
+  /* without fastcall we can handle anything.  */
+  if (m68k_function_abi(function) != FASTCALL_ABI)
+    return true;
+
+  return true;
 }
 
+static void
+emit_push_reg (unsigned regno)
+{
+  rtx mem, reg;
+
+  mem = gen_rtx_PRE_DEC (Pmode, stack_pointer_rtx);
+  mem = gen_frame_mem (SImode, mem);
+  reg = gen_rtx_REG (Pmode, regno);
+
+  emit_insn (gen_movsi (mem, reg));
+}
+
+static void
+emit_pop_reg (unsigned regno)
+{
+  rtx mem, reg;
+
+  mem = gen_rtx_POST_INC (Pmode, stack_pointer_rtx);
+  mem = gen_frame_mem (Pmode, mem);
+  reg = gen_rtx_REG (SImode, regno);
+
+  emit_move_insn (reg, mem);
+}
+
+
+/* Output the assembler code for a thunk function.  THUNK_DECL is the
+   declaration for the thunk function itself, FUNCTION is the decl for
+   the target function.  DELTA is an immediate constant offset to be
+   added to THIS.  If VCALL_OFFSET is nonzero, the word at
+   *(*this + vcall_offset) should be added to THIS.  */
+
 static void
 m68k_output_mi_thunk (FILE *file, tree thunk ATTRIBUTE_UNUSED,
 		      HOST_WIDE_INT delta, HOST_WIDE_INT vcall_offset,
 		      tree function)
 {
   rtx this_slot, offset, addr, mem, tmp;
+  int tmp_regno;
+  int preserve_a2 = 0;
   rtx_insn *insn;
 
-  /* Avoid clobbering the struct value reg by using the
-     static chain reg as a temporary.  */
-  tmp = gen_rtx_REG (Pmode, STATIC_CHAIN_REGNUM);
-
   /* Pretend to be a post-reload pass while generating rtl.  */
   reload_completed = 1;
 
-  /* The "this" pointer is stored at 4(%sp).  */
-  this_slot = gen_rtx_MEM (Pmode, plus_constant (Pmode,
+  if (m68k_function_abi(function) == FASTCALL_ABI)
+    {
+      tmp_regno = A2_REG;
+      tmp = gen_rtx_REG (Pmode, tmp_regno);
+      /* The "this" pointer is stored in %a0.  */
+      this_slot = gen_rtx_REG (Pmode, A0_REG);
+    }
+  else
+    {
+      /* Avoid clobbering the M68K_STRUCT_VALUE_REGNUM by using the
+	 STATIC_CHAIN_REGNUM as a temporary.  */
+      tmp_regno = STATIC_CHAIN_REGNUM;
+      tmp = gen_rtx_REG (Pmode, tmp_regno);
+      /* The "this" pointer is stored at 4(%sp).  */
+      this_slot = gen_rtx_MEM (Pmode, plus_constant (Pmode,
 						 stack_pointer_rtx, 4));
+    }
 
   /* Add DELTA to THIS.  */
   if (delta != 0)
     {
       /* Make the offset a legitimate operand for memory addition.  */
       offset = GEN_INT (delta);
-      if ((delta < -8 || delta > 8)
-	  && (TARGET_COLDFIRE || USE_MOVQ (delta)))
+      if (m68k_function_abi(function) != FASTCALL_ABI)
 	{
-	  emit_move_insn (gen_rtx_REG (Pmode, D0_REG), offset);
-	  offset = gen_rtx_REG (Pmode, D0_REG);
-	}
-      emit_insn (gen_add3_insn (copy_rtx (this_slot),
+	  if ((delta < -8 || delta > 8)
+		  && (TARGET_COLDFIRE || USE_MOVQ (delta)))
+	    {
+	       int offset_regno = D0_REG;
+	       emit_move_insn (gen_rtx_REG (Pmode, offset_regno), offset);
+	       offset = gen_rtx_REG (Pmode, offset_regno);
+	    }
+	  emit_insn (gen_add3_insn (copy_rtx (this_slot),
 				copy_rtx (this_slot), offset));
+	}
+      else
+	{
+	  emit_insn(gen_addsi3(this_slot, this_slot, offset));
+	}
     }
 
   /* If needed, add *(*THIS + VCALL_OFFSET) to THIS.  */
   if (vcall_offset != 0)
     {
       /* Set the static chain register to *THIS.  */
+      if (tmp_regno == A2_REG)
+      {
+	emit_push_reg(A2_REG);
+	preserve_a2 = 1;
+      }
       emit_move_insn (tmp, this_slot);
       emit_move_insn (tmp, gen_rtx_MEM (Pmode, tmp));
 
@@ -5102,12 +5795,22 @@ m68k_output_mi_thunk (FILE *file, tree thunk ATTRIBUTE_UNUSED,
 	  addr = tmp;
 	}
 
-      /* Load the offset into %d0 and add it to THIS.  */
-      emit_move_insn (gen_rtx_REG (Pmode, D0_REG),
+      if (m68k_function_abi(function) != FASTCALL_ABI)
+	{
+	  /* Load the offset into %d0 and add it to THIS.  */
+	  int offset_regno = D0_REG;
+	  emit_move_insn (gen_rtx_REG (Pmode, offset_regno),
 		      gen_rtx_MEM (Pmode, addr));
-      emit_insn (gen_add3_insn (copy_rtx (this_slot),
+	  emit_insn (gen_add3_insn (copy_rtx (this_slot),
 				copy_rtx (this_slot),
-				gen_rtx_REG (Pmode, D0_REG)));
+				gen_rtx_REG (Pmode, offset_regno)));
+	}
+      else
+	{
+	  emit_insn (gen_add3_insn (copy_rtx (this_slot),
+				copy_rtx (this_slot),
+				gen_rtx_MEM (Pmode, addr)));
+	}
     }
 
   /* Jump to the target function.  Use a sibcall if direct jumps are
@@ -5122,12 +5825,14 @@ m68k_output_mi_thunk (FILE *file, tree thunk ATTRIBUTE_UNUSED,
 	  /* Use the static chain register as a temporary (call-clobbered)
 	     GOT pointer for this function.  We can use the static chain
 	     register because it isn't live on entry to the thunk.  */
-	  SET_REGNO (pic_offset_table_rtx, STATIC_CHAIN_REGNUM);
+	  SET_REGNO (pic_offset_table_rtx, M68K_STRUCT_VALUE_REGNUM == A0_REG ? A1_REG : A0_REG);
 	  emit_insn (gen_load_got (pic_offset_table_rtx));
 	}
       legitimize_pic_address (XEXP (mem, 0), Pmode, tmp);
       mem = replace_equiv_address (mem, tmp);
     }
+  if (preserve_a2)
+    emit_pop_reg(A2_REG);
   insn = emit_call_insn (gen_sibcall (mem, const0_rtx));
   SIBLING_CALL_P (insn) = 1;
 
@@ -5290,11 +5995,22 @@ m68k_libcall_value (machine_mode mode)
    NOTE: Due to differences in ABIs, don't call this function directly,
    use FUNCTION_VALUE instead.  */
 rtx
-m68k_function_value (const_tree valtype, const_tree func ATTRIBUTE_UNUSED)
+m68k_function_value (const_tree valtype, const_tree func, bool regs)
 {
-  machine_mode mode;
+  enum machine_mode mode = TYPE_MODE (valtype);
+  const_tree fn, fntype;
+  bool func_fastcall;
+  
+  fn = NULL_TREE;
+  if (func && DECL_P (func))
+    fn = func;
+  fntype = fn ? TREE_TYPE (fn) : func;
+
+  func_fastcall = m68k_function_type_abi(fntype) == FASTCALL_ABI;
+
+  if (! regs && !func_fastcall)
+    return gen_rtx_REG (mode, D0_REG);
 
-  mode = TYPE_MODE (valtype);
   switch (mode) {
   case SFmode:
   case DFmode:
@@ -5307,7 +6023,7 @@ m68k_function_value (const_tree valtype, const_tree func ATTRIBUTE_UNUSED)
   }
 
   /* If the function returns a pointer, push that into %a0.  */
-  if (func && POINTER_TYPE_P (TREE_TYPE (TREE_TYPE (func))))
+  if (regs && fntype && POINTER_TYPE_P (TREE_TYPE (fntype)) && !func_fastcall)
     /* For compatibility with the large body of existing code which
        does not always properly declare external functions returning
        pointer types, the m68k/SVR4 convention is to copy the value
@@ -6507,6 +7223,66 @@ m68k_return_pops_args (tree fundecl, tree funtype, int size)
 	  ? size : 0);
 }
 
+/* Remember the last target of m68k_set_current_function.  */
+static GTY(()) tree m68k_previous_fndecl;
+
+/* Establish appropriate back-end context for processing the function
+   FNDECL.  The argument might be NULL to indicate processing at top
+   level, outside of any function scope.  */
+static void
+m68k_set_current_function (tree fndecl)
+{
+  /* Only change the context if the function changes.  This hook is called
+     several times in the course of compiling a function, and we don't want to
+     slow things down too much or call target_reinit when it isn't safe.  */
+  if (fndecl && fndecl != m68k_previous_fndecl)
+    {
+      tree old_tree = (m68k_previous_fndecl
+		       ? DECL_FUNCTION_SPECIFIC_TARGET (m68k_previous_fndecl)
+		       : NULL_TREE);
+
+      tree new_tree = (fndecl
+		       ? DECL_FUNCTION_SPECIFIC_TARGET (fndecl)
+		       : NULL_TREE);
+
+      m68k_previous_fndecl = fndecl;
+      if (old_tree == new_tree)
+	;
+
+      else if (new_tree)
+	{
+	  cl_target_option_restore (&global_options,
+				    TREE_TARGET_OPTION (new_tree));
+	  target_reinit ();
+	}
+
+      else if (old_tree)
+	{
+	  struct cl_target_option *def
+	    = TREE_TARGET_OPTION (target_option_current_node);
+
+	  cl_target_option_restore (&global_options, def);
+	  target_reinit ();
+	}
+    }
+}
+
+void
+m68k_order_regs_for_local_alloc (void)
+{
+  int i;
+  int pos = 0;
+  for (i = 0; i < 16; i ++)
+    if (call_used_regs [i] && !fixed_regs[i])
+      reg_alloc_order[pos++] = i;
+  for (i = 0; i < 16; i ++)
+    if (!(call_used_regs [i] && !fixed_regs[i]))
+      reg_alloc_order[pos++] = i;
+  reg_alloc_order[pos++] = 24;
+  for (i = 16; i < 24; i++)
+    reg_alloc_order[pos++] = i;
+}
+
 /* Make sure everything's fine if we *don't* have a given processor.
    This assumes that putting a register in fixed_regs will keep the
    compiler's mitts completely off it.  We don't bother to zero it out
@@ -6517,6 +7293,21 @@ m68k_conditional_register_usage (void)
 {
   int i;
   HARD_REG_SET x;
+  
+  int num_of_dregs = (TARGET_FASTCALL) ? M68K_FASTCALL_USED_DATA_REGS : M68K_STD_USED_REGS;
+  int num_of_aregs = (TARGET_FASTCALL) ? M68K_FASTCALL_USED_ADDR_REGS : M68K_STD_USED_REGS;
+  for (i = 0; i < 8; i++)
+    {
+      call_used_regs[i] = (i < num_of_dregs) | fixed_regs[i];
+      call_used_regs[i + 8] = (i < num_of_aregs) | fixed_regs[i + 8];
+      call_used_regs[i + 16] = (i < num_of_dregs) | fixed_regs[i + 16];
+    }
+  if (flag_pic)
+    fixed_regs[PIC_REG] = 1;
+  for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)
+    {
+       call_used_regs[i] |= fixed_regs[i];
+    }
   if (!TARGET_HARD_FLOAT)
     {
       COPY_HARD_REG_SET (x, reg_class_contents[(int)FP_REGS]);
@@ -6524,12 +7315,10 @@ m68k_conditional_register_usage (void)
         if (TEST_HARD_REG_BIT (x, i))
 	  fixed_regs[i] = call_used_regs[i] = 1;
     }
-  if (flag_pic)
-    fixed_regs[PIC_REG] = call_used_regs[PIC_REG] = 1;
 }
 
 static void
-m68k_init_sync_libfuncs (void)
+m68k_init_libfuncs (void)
 {
   init_sync_libfuncs (UNITS_PER_WORD);
 }
@@ -6592,4 +7381,35 @@ m68k_promote_function_mode (const_tree type, machine_mode mode,
   return mode;
 }
 
+/* Do not emit .note.GNU-stack by default.  */
+#undef NEED_INDICATE_EXEC_STACK
+#ifdef USING_ELFOS_H
+#define NEED_INDICATE_EXEC_STACK	1
+#else
+#define NEED_INDICATE_EXEC_STACK	0
+#endif
+
+static void
+m68k_file_end (void)
+{
+#if defined(HAVE_AS_GNU_ATTRIBUTE)
+#if 0
+  /* Emit .gnu_attribute directive for Tag_GNU_M68K_ABI_FP.  */
+  int fp_abi = TARGET_68881 ? (FUNCTION_VALUE_REGNO_P(FP0_REG) ? 1 : 2) : 0;
+  fprintf (asm_out_file, "\t.gnu_attribute 4,%d\n", fp_abi);
+#endif
+#endif
+#ifdef USING_ELFOS_H
+  /* Emit .gnu_attribute directive for Tag_GNU_M68K_ABI.  */
+  int abi = 1 + (TARGET_SHORT ? 2 : 0) + (TARGET_FASTCALL ? 4 : 0);
+  fprintf (asm_out_file, "\t.gnu_attribute 8,%d\n", abi);
+#endif
+
+  if (NEED_INDICATE_EXEC_STACK)
+    /* Add .note.GNU-stack.  */
+    file_end_indicate_exec_stack ();
+}
+
+struct gcc_target targetm = TARGET_INITIALIZER;
+
 #include "gt-m68k.h"
diff --git a/gcc/config/m68k/m68k.h b/gcc/config/m68k/m68k.h
index ba7feb07cbd..d2c35dd50c2 100644
--- a/gcc/config/m68k/m68k.h
+++ b/gcc/config/m68k/m68k.h
@@ -26,6 +26,19 @@ along with GCC; see the file COPYING3.  If not see
 # define MOTOROLA 0  /* Use the MIT assembly syntax.  */
 #endif
 
+/* Available call abi.  */
+enum calling_abi
+{
+  STD_ABI = 0,
+  FASTCALL_ABI = 1
+};
+
+/* The abi used by target.  */
+extern enum calling_abi m68k_abi;
+
+/* The default abi used by target.  */
+#define DEFAULT_ABI STD_ABI
+
 /* Handle --with-cpu default option from configure script.  */
 #define OPTION_DEFAULT_SPECS						\
   { "cpu",   "%{!m68020-40:%{!m68020-60:\
@@ -131,8 +144,16 @@ along with GCC; see the file COPYING3.  If not see
 	}								\
 									\
       if (TARGET_68881)							\
-	builtin_define ("__HAVE_68881__");				\
+	{								\
+	  builtin_define ("__HAVE_68881__");				\
+	  builtin_define ("__M68881__"); /* Non-standard */		\
+	}								\
 									\
+      if (TARGET_FASTCALL)                                              \
+        {                                                               \
+      	  builtin_define ("__FASTCALL__"); /* Non-standard */		\
+        }                                                               \
+                                                                        \
       if (TARGET_COLDFIRE)						\
 	{								\
 	  const char *tmp;						\
@@ -287,7 +308,7 @@ along with GCC; see the file COPYING3.  If not see
 
 #define UNITS_PER_WORD 4
 
-#define PARM_BOUNDARY (TARGET_SHORT ? 16 : 32)
+#define PARM_BOUNDARY ((TARGET_SHORT || (TARGET_FASTCALL && TUNE_68000_10)) ? 16 : 32)
 #define STACK_BOUNDARY 16
 #define FUNCTION_BOUNDARY 16
 #define EMPTY_FIELD_BOUNDARY 16
@@ -423,7 +444,7 @@ along with GCC; see the file COPYING3.  If not see
  */
 #define ARG_POINTER_REGNUM 24
 
-#define STATIC_CHAIN_REGNUM A0_REG
+#define STATIC_CHAIN_REGNUM (M68K_STRUCT_VALUE_REGNUM == A0_REG ? A1_REG : A0_REG)
 #define M68K_STATIC_CHAIN_REG_NAME REGISTER_PREFIX "a0"
 
 /* Register in which address to store a structure value
@@ -472,7 +493,7 @@ extern enum reg_class regno_reg_class[];
 /* On the m68k, this is the size of MODE in words,
    except in the FP regs, where a single reg is always enough.  */
 #define CLASS_MAX_NREGS(CLASS, MODE)	\
- ((CLASS) == FP_REGS ? 1 \
+ ((CLASS) == FP_REGS ? GET_MODE_NUNITS (MODE) \
   : ((GET_MODE_SIZE (MODE) + UNITS_PER_WORD - 1) / UNITS_PER_WORD))
 
 /* Moves between fp regs and other regs are two insns.  */
@@ -493,11 +514,12 @@ extern enum reg_class regno_reg_class[];
 #define FIRST_PARM_OFFSET(FNDECL) 8
 
 /* On the m68k the return value defaults to D0.  */
+#undef FUNCTION_VALUE
 #define FUNCTION_VALUE(VALTYPE, FUNC)  \
-  gen_rtx_REG (TYPE_MODE (VALTYPE), D0_REG)
+  m68k_function_value (VALTYPE, FUNC, false)
 
 /* On the m68k the return value defaults to D0.  */
-#define LIBCALL_VALUE(MODE)  gen_rtx_REG (MODE, D0_REG)
+#define LIBCALL_VALUE(MODE)  m68k_libcall_value (MODE)
 
 /* On the m68k, D0 is usually the only register used.  */
 #define FUNCTION_VALUE_REGNO_P(N) ((N) == D0_REG)
@@ -508,15 +530,61 @@ extern enum reg_class regno_reg_class[];
 #define NEEDS_UNTYPED_CALL 0
 
 /* On the m68k, all arguments are usually pushed on the stack.  */
-#define FUNCTION_ARG_REGNO_P(N) 0
+/* 1 if N is a possible register number for function argument passing.  */
+#define FUNCTION_ARG_REGNO_P(N)			\
+  ((((int)N) >= 0 && (N) < M68K_FASTCALL_DATA_PARM)		\
+   || ((N) >= 8 && (N) < 8 + M68K_FASTCALL_ADDR_PARM)	\
+   || (TARGET_68881 && (N) >= 16 && (N) < 16 + M68K_FASTCALL_DATA_PARM))
 
-/* On the m68k, this is a single integer, which is a number of bytes
-   of arguments scanned so far.  */
-#define CUMULATIVE_ARGS int
+   
+/* The number of data/float registers and address registers to use for
+   fast calls. */
+#define M68K_FASTCALL_DATA_PARM 3
+#define M68K_FASTCALL_ADDR_PARM 2
+
+/* Call clobbered regs. */
+#define M68K_STD_USED_REGS 2
+#define M68K_FASTCALL_USED_DATA_REGS 3
+#define M68K_FASTCALL_USED_ADDR_REGS 2
+
+/* On the m68k, this is a structure:
+   regs_already_used: bitmask of the already used registers.
+   last_arg_reg - register number of the most recently passed argument.
+     -1 if passed on stack.
+   last_arg_len - number of registers used by the most recently passed
+     argument.
+*/
+
+struct m68k_args
+{
+  unsigned long /* HARD_REG_SET */ regs_already_used;
+  int last_arg_reg;
+  int last_arg_len;
+  enum calling_abi call_abi;
+};
+
+#define CUMULATIVE_ARGS struct m68k_args
 
-/* On the m68k, the offset starts at 0.  */
-#define INIT_CUMULATIVE_ARGS(CUM, FNTYPE, LIBNAME, INDIRECT, N_NAMED_ARGS) \
- ((CUM) = 0)
+/* The default number of data, address and float registers to use when
+   user specified '-mregparm' switch, not '-mregparm=<value>' option.  */
+
+#define ADJUST_REG_ALLOC_ORDER m68k_order_regs_for_local_alloc ()
+
+#define OVERRIDE_ABI_FORMAT(FNDECL) m68k_call_abi_override (FNDECL)
+
+#define INIT_CUMULATIVE_ARGS(CUM, FNTYPE, LIBNAME, FNDECL, N_NAMED_ARGS) \
+  m68k_init_cumulative_args (&(CUM), (FNTYPE), (LIBNAME), (FNDECL), (N_NAMED_ARGS) != -1)
+
+#undef TARGET_FUNCTION_ARG_ADVANCE
+#define TARGET_FUNCTION_ARG_ADVANCE m68k_function_arg_advance
+
+/* On m68k all args are pushed, except if -mfastcall then d0-2, a0-1 and
+   fp0-2 are used for passing the first arguments.
+   Note: by default, the static-chain is passed in a0. Targets that want
+   to make full use of '-mfastcall' are advised to pass the static-chain
+   somewhere else.  */
+#undef TARGET_FUNCTION_ARG
+#define TARGET_FUNCTION_ARG m68k_function_arg
 
 #define FUNCTION_PROFILER(FILE, LABELNO)  \
   asm_fprintf (FILE, "\tlea %LLP%d,%Ra0\n\tjsr mcount\n", (LABELNO))
@@ -565,7 +633,7 @@ extern enum reg_class regno_reg_class[];
    (though the operand list is empty).  */
 #define TRANSFER_FROM_TRAMPOLINE				\
 void								\
-__transfer_from_trampoline ()					\
+__transfer_from_trampoline (void)					\
 {								\
   register char *a0 asm (M68K_STATIC_CHAIN_REG_NAME);		\
   asm (GLOBAL_ASM_OP "___trampoline");				\
@@ -725,16 +793,24 @@ do { if (cc_prev_status.flags & CC_IN_68881)			\
 
 /* Control the assembler format that we output.  */
 
+extern const char *m68k_text_section, *m68k_data_section, *m68k_rodata_section;
+
 #define ASM_APP_ON "#APP\n"
 #define ASM_APP_OFF "#NO_APP\n"
-#define TEXT_SECTION_ASM_OP "\t.text"
-#define DATA_SECTION_ASM_OP "\t.data"
+#define TEXT_SECTION_ASM_OP m68k_text_section
+#define DATA_SECTION_ASM_OP m68k_data_section
+#undef READONLY_DATA_SECTION_ASM_OP
+#define READONLY_DATA_SECTION_ASM_OP	m68k_rodata_section
 #define GLOBAL_ASM_OP "\t.globl\t"
 #define REGISTER_PREFIX ""
 #define LOCAL_LABEL_PREFIX ""
 #define USER_LABEL_PREFIX "_"
 #define IMMEDIATE_PREFIX "#"
 
+#define M68K_DEFAULT_TEXT_SECTION ".text"
+#define M68K_DEFAULT_DATA_SECTION ".data"
+#define M68K_DEFAULT_RODATA_SECTION ".rodata"
+
 #define REGISTER_NAMES \
 {REGISTER_PREFIX"d0", REGISTER_PREFIX"d1", REGISTER_PREFIX"d2",	\
  REGISTER_PREFIX"d3", REGISTER_PREFIX"d4", REGISTER_PREFIX"d5",	\
@@ -970,3 +1046,11 @@ extern int m68k_sched_address_bypass_p (rtx_insn *, rtx_insn *);
 extern int m68k_sched_indexed_address_bypass_p (rtx_insn *, rtx_insn *);
 
 #define CPU_UNITS_QUERY 1
+
+#ifndef USED_FOR_TARGET
+struct GTY(()) machine_function {
+  /* This value is used for amd64 targets and specifies the current abi
+     to be used. STD_ABI means cdecl abi. Otherwise FASTCALL_ABI means fastcall abi.  */
+  ENUM_BITFIELD(calling_abi) call_abi : 8;
+};
+#endif
diff --git a/gcc/config/m68k/m68k.md b/gcc/config/m68k/m68k.md
index 7933f8eb253..182746addaa 100644
--- a/gcc/config/m68k/m68k.md
+++ b/gcc/config/m68k/m68k.md
@@ -131,8 +131,11 @@
 ;; Registers by name.
 (define_constants
   [(D0_REG		0)
+   (D1_REG		1)
+   (D2_REG		2)
    (A0_REG		8)
    (A1_REG		9)
+   (A2_REG		10)
    (PIC_REG		13)
    (A6_REG		14)
    (SP_REG		15)
diff --git a/gcc/config/m68k/m68k.opt b/gcc/config/m68k/m68k.opt
index b9835f5e42f..1c25af3896e 100644
--- a/gcc/config/m68k/m68k.opt
+++ b/gcc/config/m68k/m68k.opt
@@ -158,6 +158,10 @@ mnoshort
 Target RejectNegative InverseMask(SHORT)
 Consider type 'int' to be 32 bits wide.
 
+mnofastcall
+Target RejectNegative InverseMask(FASTCALL)
+Use standard calling conventions. 
+
 mpcrel
 Target Report Mask(PCREL)
 Generate pc-relative code.
@@ -178,6 +182,10 @@ mshort
 Target Report Mask(SHORT)
 Consider type 'int' to be 16 bits wide.
 
+mfastcall
+Target Report Mask(FASTCALL)
+Use calling convention passing arguments in registers.
+
 msoft-float
 Target RejectNegative InverseMask(HARD_FLOAT)
 Generate code with library calls for floating point.
@@ -197,3 +205,15 @@ Support more than 8192 GOT entries on ColdFire.
 mxtls
 Target Report Mask(XTLS)
 Support TLS segment larger than 64K.
+
+mtext=
+Target RejectNegative Joined Var(m68k_text_string) Init(0)
+Put functions in SECTION
+
+mdata=
+Target RejectNegative Joined Var(m68k_data_string) Init(0)
+Put data in SECTION
+
+mrodata=
+Target RejectNegative Joined Var(m68k_rodata_string) Init(0)
+Put read-only data in SECTION
diff --git a/gcc/config/m68k/m68kelf.h b/gcc/config/m68k/m68kelf.h
index fb1a0a4d917..81320b09061 100644
--- a/gcc/config/m68k/m68kelf.h
+++ b/gcc/config/m68k/m68kelf.h
@@ -89,9 +89,9 @@ do {								\
    structure return, so have to use a1 for the static chain.  */
 
 #undef STATIC_CHAIN_REGNUM
-#define STATIC_CHAIN_REGNUM A1_REG
+#define STATIC_CHAIN_REGNUM (M68K_STRUCT_VALUE_REGNUM == A0_REG ? A1_REG : A0_REG)
 #undef M68K_STATIC_CHAIN_REG_NAME
-#define M68K_STATIC_CHAIN_REG_NAME REGISTER_PREFIX "a1"
+#define M68K_STATIC_CHAIN_REG_NAME REGISTER_PREFIX "a0"
 
 #define ASM_COMMENT_START "|"
 
diff --git a/gcc/config/m68k/math-68881.h b/gcc/config/m68k/math-68881.h
index 6d9f8b2d4a1..9fad2950508 100644
--- a/gcc/config/m68k/math-68881.h
+++ b/gcc/config/m68k/math-68881.h
@@ -44,6 +44,16 @@
 
 #include <errno.h>
 
+/* GCC 4.3 and above with -std=c99 or -std=gnu99 implements ISO C99
+   inline semantics, unless -fgnu89-inline is used.  */
+#ifdef __cplusplus
+# define __MATH_68881_INLINE inline
+#elif defined __GNUC_STDC_INLINE__
+# define __MATH_68881_INLINE extern __inline __attribute__ ((__gnu_inline__))
+#else
+# define __MATH_68881_INLINE extern __inline
+#endif
+
 #undef HUGE_VAL
 #ifdef __sun__
 /* The Sun assembler fails to handle the hex constant in the usual defn.  */
@@ -64,7 +74,7 @@
 })
 #endif
 
-__inline extern double
+__MATH_68881_INLINE double
 sin (double x)
 {
   double value;
@@ -75,7 +85,7 @@ sin (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 cos (double x)
 {
   double value;
@@ -86,7 +96,7 @@ cos (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 tan (double x)
 {
   double value;
@@ -97,7 +107,7 @@ tan (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 asin (double x)
 {
   double value;
@@ -108,7 +118,7 @@ asin (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 acos (double x)
 {
   double value;
@@ -119,7 +129,7 @@ acos (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 atan (double x)
 {
   double value;
@@ -130,7 +140,7 @@ atan (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 atan2 (double y, double x)
 {
   double pi, pi_over_2;
@@ -187,7 +197,7 @@ atan2 (double y, double x)
     }
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 sinh (double x)
 {
   double value;
@@ -198,7 +208,7 @@ sinh (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 cosh (double x)
 {
   double value;
@@ -209,7 +219,7 @@ cosh (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 tanh (double x)
 {
   double value;
@@ -220,7 +230,7 @@ tanh (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 atanh (double x)
 {
   double value;
@@ -231,7 +241,7 @@ atanh (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 exp (double x)
 {
   double value;
@@ -242,7 +252,7 @@ exp (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 expm1 (double x)
 {
   double value;
@@ -253,7 +263,7 @@ expm1 (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 log (double x)
 {
   double value;
@@ -264,7 +274,7 @@ log (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 log1p (double x)
 {
   double value;
@@ -275,7 +285,7 @@ log1p (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 log10 (double x)
 {
   double value;
@@ -286,7 +296,7 @@ log10 (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 sqrt (double x)
 {
   double value;
@@ -297,13 +307,13 @@ sqrt (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 hypot (double x, double y)
 {
   return sqrt (x*x + y*y);
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 pow (double x, double y)
 {
   if (x > 0)
@@ -352,7 +362,7 @@ pow (double x, double y)
     }
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 fabs (double x)
 {
   double value;
@@ -363,7 +373,7 @@ fabs (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 ceil (double x)
 {
   int rounding_mode, round_up;
@@ -385,7 +395,7 @@ ceil (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 floor (double x)
 {
   int rounding_mode, round_down;
@@ -408,7 +418,7 @@ floor (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 rint (double x)
 {
   int rounding_mode, round_nearest;
@@ -430,7 +440,7 @@ rint (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 fmod (double x, double y)
 {
   double value;
@@ -442,7 +452,7 @@ fmod (double x, double y)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 drem (double x, double y)
 {
   double value;
@@ -454,19 +464,20 @@ drem (double x, double y)
   return value;
 }
 
-__inline extern double
-scalb (double x, int n)
+__MATH_68881_INLINE double
+scalb (double x, double n)
 {
   double value;
+  int exp = (int)(n);
 
   __asm ("fscale%.l %2,%0"
 	 : "=f" (value)
 	 : "0" (x),
-	   "dmi" (n));
+	   "dmi" (exp));
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 logb (double x)
 {
   double exponent;
@@ -477,7 +488,7 @@ logb (double x)
   return exponent;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 ldexp (double x, int n)
 {
   double value;
@@ -489,7 +500,7 @@ ldexp (double x, int n)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 frexp (double x, int *exp)
 {
   double float_exponent;
@@ -514,7 +525,7 @@ frexp (double x, int *exp)
   return mantissa;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 modf (double x, double *ip)
 {
   double temp;
diff --git a/gcc/config/m68k/mint-stdint.h b/gcc/config/m68k/mint-stdint.h
new file mode 100644
index 00000000000..89538ccf0d6
--- /dev/null
+++ b/gcc/config/m68k/mint-stdint.h
@@ -0,0 +1,50 @@
+/* Definitions for <stdint.h> types on systems using MiNT.
+   Copyright (C) 2009-2018 Free Software Foundation, Inc.
+
+This file is part of GCC.
+
+GCC is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 3, or (at your option)
+any later version.
+
+GCC is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with GCC; see the file COPYING3.  If not see
+<http://www.gnu.org/licenses/>.  */
+
+#define SIG_ATOMIC_TYPE "int"
+
+#define INT8_TYPE "signed char"
+#define INT16_TYPE (TARGET_SHORT ? "int" : "short int")
+#define INT32_TYPE (TARGET_SHORT ? "long int" : "int")
+#define INT64_TYPE "long long int"
+#define UINT8_TYPE "unsigned char"
+#define UINT16_TYPE (TARGET_SHORT ? "unsigned int" : "short unsigned int")
+#define UINT32_TYPE (TARGET_SHORT ? "long unsigned int" : "unsigned int")
+#define UINT64_TYPE "long long unsigned int"
+
+#define INT_LEAST8_TYPE INT8_TYPE
+#define INT_LEAST16_TYPE INT16_TYPE
+#define INT_LEAST32_TYPE INT32_TYPE
+#define INT_LEAST64_TYPE INT64_TYPE
+#define UINT_LEAST8_TYPE UINT8_TYPE
+#define UINT_LEAST16_TYPE UINT16_TYPE
+#define UINT_LEAST32_TYPE UINT32_TYPE
+#define UINT_LEAST64_TYPE UINT64_TYPE
+
+#define INT_FAST8_TYPE INT8_TYPE
+#define INT_FAST16_TYPE INT16_TYPE
+#define INT_FAST32_TYPE INT32_TYPE
+#define INT_FAST64_TYPE INT64_TYPE
+#define UINT_FAST8_TYPE UINT8_TYPE
+#define UINT_FAST16_TYPE UINT16_TYPE
+#define UINT_FAST32_TYPE UINT32_TYPE
+#define UINT_FAST64_TYPE UINT64_TYPE
+
+#define INTPTR_TYPE "long int"
+#define UINTPTR_TYPE "long unsigned int"
diff --git a/gcc/config/m68k/mint.h b/gcc/config/m68k/mint.h
new file mode 100644
index 00000000000..6ed891aa560
--- /dev/null
+++ b/gcc/config/m68k/mint.h
@@ -0,0 +1,336 @@
+/* Definitions of target machine for GCC for Atari ST TOS/MiNT.
+   Copyright (C) 1994-2023 Free Software Foundation, Inc.
+
+This file is part of GCC.
+
+GCC is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 3, or (at your option)
+any later version.
+
+GCC is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with GCC; see the file COPYING3.  If not see
+<http://www.gnu.org/licenses/>.  */
+
+/* Here are four prefixes that are used by asm_fprintf to
+   facilitate customization for alternate assembler syntaxes.
+   Machines with no likelihood of an alternate syntax need not
+   define these and need not use asm_fprintf.  */
+
+/* The prefix for register names.  Note that REGISTER_NAMES
+   is supposed to include this prefix. Also note that this is NOT an
+   fprintf format string, it is a literal string */
+
+#undef REGISTER_PREFIX
+#define REGISTER_PREFIX "%"
+
+/* The prefix for local (compiler generated) labels.
+   These labels will not appear in the symbol table.  */
+
+#undef LOCAL_LABEL_PREFIX
+#define LOCAL_LABEL_PREFIX "."
+
+/* How to start an assembler comment.  */
+
+#undef ASM_COMMENT_START
+#define ASM_COMMENT_START "|"
+
+#undef TARGET_LIBC_HAS_FUNCTION
+#define TARGET_LIBC_HAS_FUNCTION no_c99_libc_has_function
+
+#undef WCHAR_TYPE
+#define WCHAR_TYPE "short unsigned int"
+
+#undef WCHAR_TYPE_SIZE
+#define WCHAR_TYPE_SIZE SHORT_TYPE_SIZE
+
+#if HAVE_INITFINI_ARRAY_SUPPORT
+#define GCC_HAVE_INITFINI_ARRAY_SUPPORT builtin_define ("__GCC_HAVE_INITFINI_ARRAY_SUPPORT");
+#else
+#define GCC_HAVE_INITFINI_ARRAY_SUPPORT
+#endif
+
+#undef TARGET_OS_CPP_BUILTINS
+#define TARGET_OS_CPP_BUILTINS()		\
+  do						\
+    {						\
+      builtin_define ("__MINT__");		\
+      GCC_HAVE_INITFINI_ARRAY_SUPPORT \
+      /* The GNU C++ standard library requires this.  */ \
+      if (c_dialect_cxx ()) \
+       builtin_define ("_GNU_SOURCE"); \
+      builtin_define_std ("atarist");		\
+      builtin_assert ("machine=atari");		\
+      builtin_assert ("system=mint");		\
+    }						\
+  while (0)
+
+/* The following defines are nonstandard
+   and are kept only for compatibility
+   with older versions of GCC for MiNT.  */
+
+#undef CPP_SPEC
+#define CPP_SPEC			\
+  "%{m68000|mcpu=68000:-D__M68000__} "		\
+  "%{m68020|mcpu=68020:-D__M68020__} "		\
+  "%{m68030|mcpu=68030:-D__M68020__} "		\
+  "%{m68040|mcpu=68040:-D__M68020__} "		\
+  "%{m68060|mcpu=68060:-D__M68020__} "		\
+  "%{m68020-40|mcpu=68020-40:-D__M68020__} "		\
+  "%{m68020-60|mcpu=68020-60:-D__M68020__} "		\
+  "%{!m680*:%{!mc680*:%{!mcpu=680*:-D__M68000__}}} "	\
+  "%{mshort:-D__MSHORT__}"
+
+#undef  LIB_SPEC
+#define LIB_SPEC	"-lc"
+
+/* The -g option generates stabs debug information.  */
+#define DBX_DEBUGGING_INFO 1
+
+/* Do not break .stabs pseudos into continuations.  */
+#define DBX_CONTIN_LENGTH 0
+
+/* This is the char to use for continuation (in case we need to turn
+   continuation back on).  */
+#define DBX_CONTIN_CHAR '?'
+
+/* This is the assembler directive to equate two values.  */
+#undef SET_ASM_OP
+#define SET_ASM_OP		"\t.set\t"
+
+/* This is how we tell the assembler that a symbol is weak.  */
+#undef ASM_WEAKEN_LABEL
+#define ASM_WEAKEN_LABEL(FILE,NAME) \
+  do { fputs ("\t.weak\t", FILE); assemble_name (FILE, NAME); \
+       fputc ('\n', FILE); } while (0)
+
+/* Don't default to pcc-struct-return, because gcc is the only compiler, and
+   we want to retain compatibility with older gcc versions.  */
+#define DEFAULT_PCC_STRUCT_RETURN 0
+
+/* The system headers are C++-aware.  */
+#define NO_IMPLICIT_EXTERN_C
+
+/* Finalize the trampoline by flushing the insn cache.  */
+
+#undef FINALIZE_TRAMPOLINE
+#define FINALIZE_TRAMPOLINE(TRAMP)					\
+  if (TARGET_68020 || TARGET_COLDFIRE) \
+    emit_library_call (gen_rtx_SYMBOL_REF (Pmode, "__clear_cache"),	\
+		     LCT_NORMAL, VOIDmode, 2, TRAMP, Pmode,		\
+		     plus_constant (Pmode, TRAMP, TRAMPOLINE_SIZE), \
+		     Pmode);
+
+/* Clear the instruction cache from `beg' to `end'.  This makes an
+   inline system call to Ssystem(S_FLUSHCACHE).  The arguments are as
+   follows:
+
+	Ssystem(S_FLUSHCACHE, addr, len)
+
+   addr	  - the start address for the flush
+   len    - the number of bytes to flush
+
+   The kernel will push the instruction cache
+	    */
+
+#define CLEAR_INSN_CACHE(BEG, END)					\
+{									\
+  register unsigned long _beg __asm ("%d0") = (unsigned long) (BEG);	\
+  unsigned long _end = (unsigned long) (END);				\
+  register unsigned long _len __asm ("%d1") = (_end - _beg);	\
+  __asm __volatile							\
+    ("move%.l %1,-(%%sp)\n\t"	/* len */			\
+     "move%.l %0,-(%%sp)\n\t"	/* beg */			\
+     "move%.w #22,-(%%sp)\n\t"	/* S_FLUSHCACHE */			\
+     "move%.w #340,-(%%sp)\n\t"	/* system call nr */			\
+     "trap #1\n\t"								\
+     "lea 12(%%sp),%%sp" /* correct stack */ \
+     : /* no outputs */							\
+     : "r" (_beg), "r" (_len)						\
+     : "%d2", "%a0", "%a1", "%a2", "cc", "memory");						\
+}
+
+/* By default, the vtable entries are void pointers, the so the alignment
+   is the same as pointer alignment.  The value of this macro specifies
+   the alignment of the vtable entry in bits.  It should be defined only
+   when special alignment is necessary.
+
+   MiNT: The default value of 32 is too much and unsupported by a.out-mintprg.
+*/
+#define TARGET_VTABLE_ENTRY_ALIGN 16
+
+/* If we have a definition of INCOMING_RETURN_ADDR_RTX, assume that
+   the rest of the DWARF 2 frame unwind support is also provided.
+   
+   All configurations that don't use elf must be explicit about not using
+   dwarf unwind information.
+
+   MiNT: DWARF 2 frame unwind is not supported by a.out-mint.
+*/
+#undef DWARF2_UNWIND_INFO
+/* If configured with --disable-sjlj-exceptions, use DWARF2
+   else default to SJLJ.  */
+#if defined(USING_ELFOS_H) && defined (CONFIG_SJLJ_EXCEPTIONS) && !CONFIG_SJLJ_EXCEPTIONS
+/* The logic of this #if must be kept synchronised with the logic
+   for selecting the tmake_eh_file fragment in libgcc/config.host.  */
+#define DWARF2_UNWIND_INFO 1
+#else
+#define DWARF2_UNWIND_INFO 0
+#endif
+
+#if DWARF2_UNWIND_INFO
+/* the default of DW_EH_PE_absptr creates relocations at odd addresses, which we cannot handle */
+#undef ASM_PREFERRED_EH_DATA_FORMAT
+#define ASM_PREFERRED_EH_DATA_FORMAT(CODE, GLOBAL)			   \
+  (flag_pic								   \
+   && !((TARGET_ID_SHARED_LIBRARY || TARGET_SEP_DATA)			   \
+	&& ((GLOBAL) || (CODE)))					   \
+   ? ((GLOBAL) ? DW_EH_PE_indirect : 0) | DW_EH_PE_pcrel | DW_EH_PE_sdata4 \
+   : DW_EH_PE_aligned)
+
+/* Define how the m68k registers should be numbered for Dwarf output.
+   The numbering provided here should be compatible with the native
+   SVR4 debugger in the m68k/SVR4 reference port, where d0-d7
+   are 0-7, a0-a7 are 8-15, and fp0-fp7 are 16-23.  */
+
+#undef DBX_REGISTER_NUMBER
+#define DBX_REGISTER_NUMBER(REGNO) (REGNO)
+#endif
+
+/* config/m68k.md has an explicit reference to the program counter,
+   prefix this by the register prefix.  */
+
+#define ASM_RETURN_CASE_JUMP				\
+  do {							\
+    if (TARGET_COLDFIRE)				\
+      {							\
+	if (ADDRESS_REG_P (operands[0]))		\
+	  return "jmp %%pc@(2,%0:l)";			\
+	else if (TARGET_LONG_JUMP_TABLE_OFFSETS)	\
+	  return "jmp %%pc@(2,%0:l)";			\
+	else						\
+	  return "ext%.l %0\n\tjmp %%pc@(2,%0:l)";	\
+      }							\
+    else if (TARGET_LONG_JUMP_TABLE_OFFSETS)		\
+      return "jmp %%pc@(2,%0:l)";			\
+    else						\
+      return "jmp %%pc@(2,%0:w)";			\
+  } while (0)
+
+/* The ADDR_DIFF_VEC must exactly follow the previous instruction.  */
+
+#undef ADDR_VEC_ALIGN
+#define ADDR_VEC_ALIGN(ADDR_VEC) 0
+
+/* we must define this to prevent alignment of the table,
+   otherwise the relative offset from ASM_RETURN_CASE_JUMP might not match */
+#undef ASM_OUTPUT_BEFORE_CASE_LABEL
+#define ASM_OUTPUT_BEFORE_CASE_LABEL(FILE,PREFIX,NUM,TABLE)
+
+/* If defined, a C expression whose value is a string containing the
+   assembler operation to identify the following data as uninitialized global
+   data.  */
+
+#ifdef USING_ELFOS_H
+#define BSS_SECTION_ASM_OP "\t.section\t.bss"
+
+#define TARGET_HAVE_NAMED_SECTIONS true
+
+/* Currently, JUMP_TABLES_IN_TEXT_SECTION must be defined in order to
+   keep switch tables in the text section.  */
+
+#define JUMP_TABLES_IN_TEXT_SECTION 1
+
+#define EH_TABLES_CAN_BE_READ_ONLY 1
+
+/* avoid pulling in the tm_clone support which we don't need */
+#define USE_TM_CLONE_REGISTRY 0
+
+#undef INIT_SECTION_ASM_OP
+#undef FINI_SECTION_ASM_OP
+
+/* This is how to output an assembler line that says to advance the
+   location counter to a multiple of 2**LOG bytes.  */
+
+#undef ASM_OUTPUT_ALIGN
+#define ASM_OUTPUT_ALIGN(FILE,LOG)				\
+do {								\
+  if ((LOG) > 0)						\
+    fprintf ((FILE), "%s%u\n", ALIGN_ASM_OP, 1 << (LOG));	\
+} while (0)
+
+#undef  STARTFILE_SPEC
+#define STARTFILE_SPEC	"%{pg|p|profile:gcrt0.o%s;:crt0.o%s} crtbegin.o%s"
+
+#undef  ENDFILE_SPEC
+#define ENDFILE_SPEC "crtend.o%s"
+
+/* In order for bitfields to work on a 68000, or with -mnobitfield, we must
+   define either PCC_BITFIELD_TYPE_MATTERS or STRUCTURE_SIZE_BOUNDARY.
+   Defining STRUCTURE_SIZE_BOUNDARY results in structure packing problems,
+   so we define PCC_BITFIELD_TYPE_MATTERS.  */
+#define PCC_BITFIELD_TYPE_MATTERS 1
+
+#else
+/* We can only do STABS.  */
+#undef PREFERRED_DEBUGGING_TYPE
+#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG
+
+#define BSS_SECTION_ASM_OP "\t.bss"
+
+#define TARGET_HAVE_NAMED_SECTIONS false
+
+#undef  STARTFILE_SPEC
+#define STARTFILE_SPEC	"%{pg|p|profile:gcrt0.o%s;:crt0.o%s}"
+
+#undef  ENDFILE_SPEC
+#define ENDFILE_SPEC ""
+
+/* Every structure or union's size must be a multiple of 2 bytes.  */
+#define STRUCTURE_SIZE_BOUNDARY 16
+
+#endif
+
+/* A C statement (sans semicolon) to output to the stdio stream
+   FILE the assembler definition of uninitialized global DECL named
+   NAME whose size is SIZE bytes and alignment is ALIGN bytes.
+   Try to use asm_output_aligned_bss to implement this macro.  */
+
+#define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN) \
+  asm_output_aligned_bss (FILE, DECL, NAME, SIZE, ALIGN)
+
+/* Disable -fpic and -fPIC since bsr.l _label@PLTPC
+   is unsupported by the assembler.  */
+
+#undef  SUBTARGET_OVERRIDE_OPTIONS
+#define SUBTARGET_OVERRIDE_OPTIONS					\
+do {									\
+  if (flag_pic && !TARGET_PCREL)					\
+      error ("%<-f%s%> is not supported on this target",			\
+	       (flag_pic > 1) ? "PIC" : "pic");				\
+} while (0)
+
+
+/* Workaround for GCC bug #35067 about multiple thunks.  */
+
+#undef MAKE_DECL_ONE_ONLY
+#define MAKE_DECL_ONE_ONLY(DECL) (DECL_WEAK (DECL) = 1)
+
+/* Avoid requiring -static with -fmudflap like in config/bfin/uclinux.h */
+#define MFWRAP_SPEC " %{fmudflap|fmudflapth: \
+ --wrap=malloc --wrap=free --wrap=calloc --wrap=realloc\
+ --wrap=mmap --wrap=munmap --wrap=alloca\
+ %{fmudflapth: --wrap=pthread_create\
+}} %{fmudflap|fmudflapth: --wrap=main}"
+
+/* Install the __sync libcalls.  */
+#undef TARGET_INIT_LIBFUNCS
+#define TARGET_INIT_LIBFUNCS  m68k_init_libfuncs
+
+#define STACK_CHECK_ATARI
+#define STACK_CHECK_BUILTIN 1
diff --git a/gcc/config/m68k/netbsd-elf.h b/gcc/config/m68k/netbsd-elf.h
index 5e2be216140..2bf82ac8c4c 100644
--- a/gcc/config/m68k/netbsd-elf.h
+++ b/gcc/config/m68k/netbsd-elf.h
@@ -210,7 +210,7 @@ while (0)
    regnum.  Make it a1 instead.  */
 
 #undef STATIC_CHAIN_REGNUM
-#define STATIC_CHAIN_REGNUM A1_REG
+#define STATIC_CHAIN_REGNUM (M68K_STRUCT_VALUE_REGNUM == A0_REG ? A1_REG : A0_REG)
 #undef M68K_STATIC_CHAIN_REG_NAME
 #define M68K_STATIC_CHAIN_REG_NAME REGISTER_PREFIX "a1"
 
@@ -250,7 +250,7 @@ while (0)
 
 #undef FUNCTION_VALUE
 #define FUNCTION_VALUE(VALTYPE, FUNC)					\
-  m68k_function_value (VALTYPE, FUNC)
+  m68k_function_value (VALTYPE, FUNC, true)
 
 
 /* Define how to find the value returned by a library function
diff --git a/gcc/config/m68k/t-mint b/gcc/config/m68k/t-mint
new file mode 100644
index 00000000000..347bf1a2331
--- /dev/null
+++ b/gcc/config/m68k/t-mint
@@ -0,0 +1,59 @@
+# 
+# Use multiple libraries
+# 
+
+M68K_AWK = $(strip $(shell $(AWK) 'BEGIN { FS="[ \t]*[,()][ \t]*"; ORS=" " }; \
+	/^M68K_DEVICE/ { CPU=$$3; FLAGS=$$8; \
+	CPU_NAME=substr($$2,2,length($$2)-2); \
+	MLIB=substr($$5,2,length($$5)-2); \
+	if ($1) print $2 }' $(srcdir)/config/m68k/m68k-devices.def))
+
+# Add a multilib for each distinct architecture.  M68K_MLIB_CPU, if defined,
+# adds additional restrictions.
+M68K_MLIB_CPUS := $(call M68K_AWK,\
+	(CPU_NAME == MLIB) $(M68K_MLIB_CPU), \
+	"m"MLIB)
+
+# Make the default cpu the default multilib.
+M68K_MLIB_DEFAULT := $(call M68K_AWK, CPU == "$(target_cpu_default)", MLIB)
+
+ifeq ($(filter m$(M68K_MLIB_DEFAULT),$(M68K_MLIB_CPUS)),)
+$(error Error default cpu '$(target_cpu_default)' is not in multilib set '$(M68K_MLIB_CPUS)')
+endif
+
+MULTILIB_OPTIONS = m68020-60/mcpu=5475 mshort mfastcall
+
+MULTILIB_DIRNAMES = m68020-60 m5475 mshort mfastcall
+
+MULTILIB_MATCHES = \
+	m68020-60=m68881 \
+	m68020-60=m68020 \
+	m68020-60=m68020-40 \
+	m68020-60=mc68020 \
+	m68020-60=m68030 \
+	m68020-60=m68040 \
+	m68020-60=m68060 \
+	m68020-60=mcpu?68020 \
+	m68020-60=mcpu?68030 \
+	m68020-60=mcpu?68040 \
+	m68020-60=mcpu?68060 \
+	m68020-60=march?68020 \
+	m68020-60=march?68030 \
+	m68020-60=march?68040 \
+	m68020-60=march?68060 \
+	mcpu?5475=mcfv4e \
+	mcpu?5475=mcpu?5470 \
+	mcpu?5475=mcpu?5471 \
+	mcpu?5475=mcpu?5472 \
+	mcpu?5475=mcpu?5473 \
+	mcpu?5475=mcpu?5474 \
+	mcpu?5475=mcpu?547x \
+	mcpu?5475=mcpu?5480 \
+	mcpu?5475=mcpu?5481 \
+	mcpu?5475=mcpu?5482 \
+	mcpu?5475=mcpu?5483 \
+	mcpu?5475=mcpu?5484 \
+	mcpu?5475=mcpu?5485 \
+	mcpu?5475=mcpu?548x
+
+MULTILIB_EXCEPTIONS :=
diff --git a/gcc/config/m68k/xm-mint.h b/gcc/config/m68k/xm-mint.h
new file mode 100644
index 00000000000..e876f251d06
--- /dev/null
+++ b/gcc/config/m68k/xm-mint.h
@@ -0,0 +1,4 @@
+/* This is the name of the null device on MiNT.  */
+#define HOST_BIT_BUCKET "/dev/null"
+#define HOST_BIT_BUCKET2 "nul:"
+
diff --git a/gcc/configure b/gcc/configure
index 5dab9142e1a..46788787745 100755
--- a/gcc/configure
+++ b/gcc/configure
@@ -5043,7 +5043,7 @@ case "${target}" in
 	;;
     i[34567]86-*-cygwin* | x86_64-*-cygwin*)
 	;;
-    i[34567]86-*-mingw* | x86_64-*-mingw*)
+    i[34567]86-*-mingw* | x86_64-*-mingw* | *-*-msys*)
 	;;
     i[34567]86-*-interix[3-9]*)
 	# Interix 3.x gcc -fpic/-fPIC options generate broken code.
@@ -9794,7 +9794,7 @@ else
    # Systems known to be in this category are Windows (all variants),
    # VMS, and Darwin.
    case "$host_os" in
-     *vms* | cygwin* | pe | mingw* | darwin* | ultrix* | hpux10* | hpux11.00)
+     *vms* | cygwin* | pe | mingw* | msys* | darwin* | ultrix* | hpux10* | hpux11.00)
         gcc_cv_func_mmap_dev_zero=no ;;
      *)
         gcc_cv_func_mmap_dev_zero=yes;;
@@ -9851,7 +9851,7 @@ else
    # above for use of /dev/zero.
    # Systems known to be in this category are Windows, VMS, and SCO Unix.
    case "$host_os" in
-     *vms* | cygwin* | pe | mingw* | sco* | udk* )
+     *vms* | cygwin* | pe | mingw* | msys* | sco* | udk* )
         gcc_cv_func_mmap_anon=no ;;
      *)
         gcc_cv_func_mmap_anon=yes;;
@@ -10155,7 +10155,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by GCC" >&5
 $as_echo_n "checking for ld used by GCC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -12636,7 +12636,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -12994,6 +12994,10 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)
     # This has been around since 386BSD, at least.  Likely further.
     if test -x /sbin/sysctl; then
@@ -16167,7 +16171,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -16598,7 +16602,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -17499,14 +17503,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -17530,7 +17534,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -18161,7 +18165,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -19035,7 +19039,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -19388,7 +19392,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,
         # as there is no search path for DLLs.
         hardcode_libdir_flag_spec_CXX='-L$libdir'
@@ -21161,14 +21165,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -21191,7 +21195,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -24050,6 +24054,9 @@ x:
 	tls_first_minor=16
 	tls_as_opt='-32 --fatal-warnings'
 	;;
+  m68k-*-mintelf*)
+	# the assembler will support that, but we want to use emutls at runtime
+	;;
   m68k-*-*)
     conftest_s='
 	.section .tdata,"awT",@progbits
@@ -26224,6 +26231,41 @@ _ACEOF
 
     ;;
 
+  m68k-*-*)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking assembler for .gnu_attribute support" >&5
+$as_echo_n "checking assembler for .gnu_attribute support... " >&6; }
+if ${gcc_cv_as_m68k_gnu_attribute+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  gcc_cv_as_m68k_gnu_attribute=no
+  if test x$gcc_cv_as != x; then
+    $as_echo '.gnu_attribute 4,1' > conftest.s
+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags  -o conftest.o conftest.s >&5'
+  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; }
+    then
+	gcc_cv_as_m68k_gnu_attribute=yes
+    else
+      echo "configure: failed program was" >&5
+      cat conftest.s >&5
+    fi
+    rm -f conftest.o conftest.s
+  fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_m68k_gnu_attribute" >&5
+$as_echo "$gcc_cv_as_m68k_gnu_attribute" >&6; }
+if test $gcc_cv_as_m68k_gnu_attribute = yes; then
+
+$as_echo "#define HAVE_AS_GNU_ATTRIBUTE 1" >>confdefs.h
+
+fi
+
+
+    ;;
+
   ia64*-*-*)
     { $as_echo "$as_me:${as_lineno-$LINENO}: checking assembler for ltoffx and ldxmov relocs" >&5
 $as_echo_n "checking assembler for ltoffx and ldxmov relocs... " >&6; }
diff --git a/gcc/configure.ac b/gcc/configure.ac
index e1fa8af5e4f..0e05551283b 100644
--- a/gcc/configure.ac
+++ b/gcc/configure.ac
@@ -3287,6 +3287,9 @@ x:
 	tls_first_minor=16
 	tls_as_opt='-32 --fatal-warnings'
 	;;
+  m68k-*-mintelf*)
+	# the assembler will support that, but we want to use emutls at runtime
+	;;
   m68k-*-*)
     conftest_s='
 	.section .tdata,"awT",@progbits
@@ -4314,6 +4317,14 @@ gd:
       [Define 0/1 if your assembler and linker support calling ___tls_get_addr via GOT.])
     ;;
 
+   m68k-*-*)
+     gcc_GAS_CHECK_FEATURE([.gnu_attribute support],
+      gcc_cv_as_m68k_gnu_attribute,,
+      [.gnu_attribute 4,1],,
+      [AC_DEFINE(HAVE_AS_GNU_ATTRIBUTE, 1,
+	  [Define if your assembler supports .gnu_attribute.])])
+    ;;
+
   ia64*-*-*)
     gcc_GAS_CHECK_FEATURE([ltoffx and ldxmov relocs],
 	gcc_cv_as_ia64_ltoffx_ldxmov_relocs, [2,14,0],,
diff --git a/gcc/cp/Make-lang.in b/gcc/cp/Make-lang.in
index 85834dd49ca..a675b9da303 100644
--- a/gcc/cp/Make-lang.in
+++ b/gcc/cp/Make-lang.in
@@ -58,7 +58,7 @@ GXX_OBJS = $(GCC_OBJS) cp/g++spec.o
 xg++$(exeext): $(GXX_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a $(LIBDEPS)
 	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \
 	  $(GXX_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a \
-	  $(EXTRA_GCC_LIBS) $(LIBS)
+	  $(EXTRA_GCC_LIBS) $(LIBS) $(GLIBC_SO)
 
 # Create a version of the g++ driver which calls the cross-compiler.
 g++-cross$(exeext): xg++$(exeext)
@@ -111,7 +111,7 @@ cc1plus-checksum.c : build/genchecksum$(build_exeext) checksum-options \
 
 cc1plus$(exeext): $(CXX_OBJS) cc1plus-checksum.o $(BACKEND) $(LIBDEPS)
 	+$(LLINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \
-	      $(CXX_OBJS) cc1plus-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS)
+	      $(CXX_OBJS) cc1plus-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS) $(GLIBC_SO)
 
 ifeq ($(ENABLE_MAINTAINER_RULES), true)
 # Special build rule.  This is a maintainer rule, that is only
diff --git a/gcc/defaults.h b/gcc/defaults.h
index 7ad92d920f8..74e539c8620 100644
--- a/gcc/defaults.h
+++ b/gcc/defaults.h
@@ -51,7 +51,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 # define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO) \
   do { const char *const name_ = (NAME); \
        char *const output_ = (OUTPUT) = \
-	 (char *) alloca (strlen (name_) + 32); \
+	 (char *) alloca (strlen (name_) + 35); \
        sprintf (output_, ASM_PN_FORMAT, name_, (unsigned long)(LABELNO)); \
   } while (0)
 #endif
diff --git a/gcc/diagnostic-color.c b/gcc/diagnostic-color.c
index 8353fe016b7..c002331a31f 100644
--- a/gcc/diagnostic-color.c
+++ b/gcc/diagnostic-color.c
@@ -20,6 +20,10 @@
 #include "system.h"
 #include "diagnostic-color.h"
 
+#ifdef __MINGW32__
+#  include <windows.h>
+#endif
+
 /* Select Graphic Rendition (SGR, "\33[...m") strings.  */
 /* Also Erase in Line (EL) to Right ("\33[K") by default.  */
 /*    Why have EL to Right after SGR?
@@ -273,23 +277,28 @@ parse_gcc_colors (void)
       return true;
 }
 
-#if defined(_WIN32)
-bool
-colorize_init (diagnostic_color_rule_t)
-{
-  return false;
-}
-#else
-
 /* Return true if we should use color when in auto mode, false otherwise. */
 static bool
 should_colorize (void)
 {
+#ifdef __MINGW32__
+  /* For consistency reasons, one should check the handle returned by
+     _get_osfhandle(_fileno(stderr)) because the function
+     pp_write_text_to_stream() in pretty-print.c calls fputs() on
+     that stream. However, the code below for non-Windows doesn't seem
+     to care about it either... */
+  HANDLE h;
+  DWORD m;
+
+  h = GetStdHandle (STD_ERROR_HANDLE);
+  return (h != INVALID_HANDLE_VALUE) && (h != NULL)
+	  && GetConsoleMode (h, &m);
+#else
   char const *t = getenv ("TERM");
   return t && strcmp (t, "dumb") != 0 && isatty (STDERR_FILENO);
+#endif
 }
 
-
 bool
 colorize_init (diagnostic_color_rule_t rule)
 {
@@ -308,4 +317,3 @@ colorize_init (diagnostic_color_rule_t rule)
       gcc_unreachable ();
     }
 }
-#endif
diff --git a/gcc/expr.c b/gcc/expr.c
index bcba244379c..42e949bbda9 100644
--- a/gcc/expr.c
+++ b/gcc/expr.c
@@ -4310,7 +4310,11 @@ emit_push_insn (rtx x, machine_mode mode, tree type, rtx size,
 	  size = GEN_INT (GET_MODE_SIZE (mode));
 	  if (!MEM_P (xinner))
 	    {
-	      temp = assign_temp (type, 1, 1);
+	      tree atype = type;
+
+	      if (atype == NULL)
+		atype = lang_hooks.types.type_for_mode (mode, 0);
+	      temp = assign_temp (atype, 1, 1);
 	      emit_move_insn (temp, xinner);
 	      xinner = temp;
 	    }
diff --git a/gcc/file-find.c b/gcc/file-find.c
index b5a1fe8494e..c3e34b4a905 100644
--- a/gcc/file-find.c
+++ b/gcc/file-find.c
@@ -22,6 +22,20 @@ along with GCC; see the file COPYING3.  If not see
 #include "filenames.h"
 #include "file-find.h"
 
+/*
+ * these are from xm-mingw32.h, but this is only included
+ * for the target; we need those definitions here also
+ * when using MinGW as host for a cross-compiler
+ */
+#if defined(__MSDOS__) || defined(_WIN32) || defined(__OS2__) || defined (__CYGWIN__)
+#undef HOST_EXECUTABLE_SUFFIX
+#define HOST_EXECUTABLE_SUFFIX ".exe"
+#endif
+#if defined(__MSDOS__) || defined(_WIN32) || defined(__OS2__)
+#undef PATH_SEPARATOR
+#define PATH_SEPARATOR ';'
+#endif
+
 static bool debug = false;
 
 void
diff --git a/gcc/fortran/Make-lang.in b/gcc/fortran/Make-lang.in
index 14481fde4c1..c1760706b6c 100644
--- a/gcc/fortran/Make-lang.in
+++ b/gcc/fortran/Make-lang.in
@@ -84,7 +84,7 @@ gfortran$(exeext): $(GFORTRAN_D_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a \
 	$(LIBDEPS)
 	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \
 	  $(GFORTRAN_D_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a \
-	  $(EXTRA_GCC_LIBS) $(LIBS)
+	  $(EXTRA_GCC_LIBS) $(LIBS) $(GLIBC_SO)
 
 # Create a version of the gfortran driver which calls the cross-compiler.
 gfortran-cross$(exeext): gfortran$(exeext)
@@ -95,7 +95,7 @@ gfortran-cross$(exeext): gfortran$(exeext)
 f951$(exeext): $(F95_OBJS) \
 		$(BACKEND) $(LIBDEPS) attribs.o
 	+$(LLINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \
-		$(F95_OBJS) $(BACKEND) $(ZLIB) $(LIBS) attribs.o \
+		$(F95_OBJS) $(BACKEND) $(ZLIB) $(LIBS) $(GLIBC_SO) attribs.o \
 		$(BACKENDLIBS)
 
 gt-fortran-trans.h    : s-gtype; @true
diff --git a/gcc/gcc-ar.c b/gcc/gcc-ar.c
index d5d80e042e5..0b157bb9d13 100644
--- a/gcc/gcc-ar.c
+++ b/gcc/gcc-ar.c
@@ -122,6 +122,46 @@ setup_prefixes (const char *exec_path)
   prefix_from_env ("PATH", &path);
 }
 
+#if defined(__LINUX_GLIBC_WRAP_H)
+
+/* ugly hack to get __libc_start_main versioned */
+
+#if __GLIBC_PREREQ(2, 34)
+
+#define STR_(s) #s
+#define STR(s)  STR_(s)
+#include <dlfcn.h>
+
+#ifdef __UCLIBC__
+#define __libc_start_main       __uClibc_main
+#endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+int __libc_start_main(
+        int (*main)(int,char**,char**), int ac, char **av,
+        int (*init)(void), void (*fini)(void),
+        void (*rtld_fini)(void), void *stack_end);
+int __libc_start_main(
+        int (*main)(int,char**,char**), int ac, char **av,
+        int (*init)(void), void (*fini)(void),
+        void (*rtld_fini)(void), void *stack_end)
+{
+	typeof(__libc_start_main) *real_lsm;
+	if ((*(void**)&real_lsm = dlsym(RTLD_NEXT, STR(__libc_start_main))) != 0)
+		return real_lsm(main, ac, av, init, fini, rtld_fini, stack_end);
+	fputs("BUG: dlsym error\n", stderr);
+	return 1;
+}
+#ifdef __cplusplus
+}
+#endif
+#undef STR
+#undef STR_
+#endif
+#endif
+
 int 
 main (int ac, char **av)
 {
diff --git a/gcc/gcc-main.c b/gcc/gcc-main.c
index d8bdcf32268..e2df9eaf900 100644
--- a/gcc/gcc-main.c
+++ b/gcc/gcc-main.c
@@ -37,6 +37,46 @@ along with GCC; see the file COPYING3.  If not see
 
 extern int main (int, char **);
 
+#if defined(__LINUX_GLIBC_WRAP_H)
+
+/* ugly hack to get __libc_start_main versioned */
+
+#if __GLIBC_PREREQ(2, 34)
+
+#define STR_(s) #s
+#define STR(s)  STR_(s)
+#include <dlfcn.h>
+
+#ifdef __UCLIBC__
+#define __libc_start_main       __uClibc_main
+#endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+int __libc_start_main(
+        int (*main)(int,char**,char**), int ac, char **av,
+        int (*init)(void), void (*fini)(void),
+        void (*rtld_fini)(void), void *stack_end);
+int __libc_start_main(
+        int (*main)(int,char**,char**), int ac, char **av,
+        int (*init)(void), void (*fini)(void),
+        void (*rtld_fini)(void), void *stack_end)
+{
+	typeof(__libc_start_main) *real_lsm;
+	if ((*(void**)&real_lsm = dlsym(RTLD_NEXT, STR(__libc_start_main))) != 0)
+		return real_lsm(main, ac, av, init, fini, rtld_fini, stack_end);
+	fputs("BUG: dlsym error\n", stderr);
+	return 1;
+}
+#ifdef __cplusplus
+}
+#endif
+#undef STR
+#undef STR_
+#endif
+#endif
+
 int
 main (int argc, char **argv)
 {
diff --git a/gcc/gcc.c b/gcc/gcc.c
index eced0d53aae..75462033c74 100644
--- a/gcc/gcc.c
+++ b/gcc/gcc.c
@@ -42,8 +42,30 @@ compilation is specified by a string called a "spec".  */
 #include "opts.h"
 #include "params.h"
 #include "filenames.h"
+#include "common/common-target.h"
 #include "spellcheck.h"
 
+/*
+ * these are from xm-mingw32.h, but this is only included
+ * for the target; we need those definitions here also
+ * when using MinGW as host for a cross-compiler
+ */
+#ifdef __MINGW32__
+#undef HOST_BIT_BUCKET
+#undef HOST_BIT_BUCKET2
+#undef HOST_EXECUTABLE_SUFFIX
+/* This is the name of the null device on windows.  */
+#define HOST_BIT_BUCKET "nul"
+#define HOST_BIT_BUCKET2 "/dev/null"
+#define HOST_EXECUTABLE_SUFFIX ".exe"
+#endif
+
+#if defined(__MSDOS__) || defined(_WIN32) || defined(__OS2__)
+#  define HOST_LACKS_INODE_NUMBERS 1
+#  undef PATH_SEPARATOR
+#  define PATH_SEPARATOR ';'
+#endif
+
 
 
 /* Manage the manipulation of env vars.
@@ -4462,7 +4484,8 @@ process_command (unsigned int decoded_options_count,
 
   if (output_file
       && strcmp (output_file, "-") != 0
-      && strcmp (output_file, HOST_BIT_BUCKET) != 0)
+      && strcmp (output_file, HOST_BIT_BUCKET) != 0
+      && strcmp (output_file, HOST_BIT_BUCKET2) != 0)
     {
       int i;
       for (i = 0; i < n_infiles; i++)
@@ -6655,6 +6678,13 @@ print_configuration (FILE *file)
 #endif
 
   fnotice (file, "Thread model: %s\n", thrmod);
+  enum unwind_info_type unwind_info = targetm_common.except_unwind_info (&global_options);
+  fnotice (file, "Exceptions: %s\n",
+    unwind_info == UI_NONE ? "none" :
+    unwind_info == UI_SJLJ ? "SJLJ" :
+    unwind_info == UI_DWARF2 ? "Dwarf2" :
+    unwind_info == UI_SEH ? "SEH" :
+    "target");
 
   /* compiler_version is truncated at the first space when initialized
   from version string, so truncate version_string at the first space
diff --git a/gcc/gcov-dump.c b/gcc/gcov-dump.c
index 3bf16ab2c53..b816f542567 100644
--- a/gcc/gcov-dump.c
+++ b/gcc/gcov-dump.c
@@ -77,6 +77,46 @@ static const tag_format_t tag_table[] =
   {0, NULL, NULL}
 };
 
+#if defined(__LINUX_GLIBC_WRAP_H)
+
+/* ugly hack to get __libc_start_main versioned */
+
+#if __GLIBC_PREREQ(2, 34)
+
+#define STR_(s) #s
+#define STR(s)  STR_(s)
+#include <dlfcn.h>
+
+#ifdef __UCLIBC__
+#define __libc_start_main       __uClibc_main
+#endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+int __libc_start_main(
+        int (*main)(int,char**,char**), int ac, char **av,
+        int (*init)(void), void (*fini)(void),
+        void (*rtld_fini)(void), void *stack_end);
+int __libc_start_main(
+        int (*main)(int,char**,char**), int ac, char **av,
+        int (*init)(void), void (*fini)(void),
+        void (*rtld_fini)(void), void *stack_end)
+{
+	typeof(__libc_start_main) *real_lsm;
+	if ((*(void**)&real_lsm = dlsym(RTLD_NEXT, STR(__libc_start_main))) != 0)
+		return real_lsm(main, ac, av, init, fini, rtld_fini, stack_end);
+	fputs("BUG: dlsym error\n", stderr);
+	return 1;
+}
+#ifdef __cplusplus
+}
+#endif
+#undef STR
+#undef STR_
+#endif
+#endif
+
 int
 main (int argc ATTRIBUTE_UNUSED, char **argv)
 {
diff --git a/gcc/gcov-tool.c b/gcc/gcov-tool.c
index 74e77b90d72..3e248d05cb0 100644
--- a/gcc/gcov-tool.c
+++ b/gcc/gcov-tool.c
@@ -52,7 +52,7 @@ extern void gcov_set_verbose (void);
 /* Set to verbose output mode.  */
 static bool verbose;
 
-#if HAVE_FTW_H
+#if defined(HAVE_FTW_H) && defined(FTW_DEPTH)
 
 /* Remove file NAME if it has a gcda suffix. */
 
@@ -81,7 +81,7 @@ unlink_gcda_file (const char *name,
 static int
 unlink_profile_dir (const char *path ATTRIBUTE_UNUSED)
 {
-#if HAVE_FTW_H
+#if defined(HAVE_FTW_H) && defined(FTW_DEPTH)
     return nftw(path, unlink_gcda_file, 64, FTW_DEPTH | FTW_PHYS);
 #else
     return -1;
@@ -572,6 +572,46 @@ process_args (int argc, char **argv)
 
 /* Main function for gcov-tool.  */
 
+#if defined(__LINUX_GLIBC_WRAP_H)
+
+/* ugly hack to get __libc_start_main versioned */
+
+#if __GLIBC_PREREQ(2, 34)
+
+#define STR_(s) #s
+#define STR(s)  STR_(s)
+#include <dlfcn.h>
+
+#ifdef __UCLIBC__
+#define __libc_start_main       __uClibc_main
+#endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+int __libc_start_main(
+        int (*main)(int,char**,char**), int ac, char **av,
+        int (*init)(void), void (*fini)(void),
+        void (*rtld_fini)(void), void *stack_end);
+int __libc_start_main(
+        int (*main)(int,char**,char**), int ac, char **av,
+        int (*init)(void), void (*fini)(void),
+        void (*rtld_fini)(void), void *stack_end)
+{
+	typeof(__libc_start_main) *real_lsm;
+	if ((*(void**)&real_lsm = dlsym(RTLD_NEXT, STR(__libc_start_main))) != 0)
+		return real_lsm(main, ac, av, init, fini, rtld_fini, stack_end);
+	fputs("BUG: dlsym error\n", stderr);
+	return 1;
+}
+#ifdef __cplusplus
+}
+#endif
+#undef STR
+#undef STR_
+#endif
+#endif
+
 int
 main (int argc, char **argv)
 {
diff --git a/gcc/gcov.c b/gcc/gcov.c
index 8972f4b03e9..126c1733168 100644
--- a/gcc/gcov.c
+++ b/gcc/gcov.c
@@ -591,6 +591,46 @@ get_cycles_count (line_t &linfo, bool handle_negative_cycles = true)
   return count;
 }
 
+#if defined(__LINUX_GLIBC_WRAP_H)
+
+/* ugly hack to get __libc_start_main versioned */
+
+#if __GLIBC_PREREQ(2, 34)
+
+#define STR_(s) #s
+#define STR(s)  STR_(s)
+#include <dlfcn.h>
+
+#ifdef __UCLIBC__
+#define __libc_start_main       __uClibc_main
+#endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+int __libc_start_main(
+        int (*main)(int,char**,char**), int ac, char **av,
+        int (*init)(void), void (*fini)(void),
+        void (*rtld_fini)(void), void *stack_end);
+int __libc_start_main(
+        int (*main)(int,char**,char**), int ac, char **av,
+        int (*init)(void), void (*fini)(void),
+        void (*rtld_fini)(void), void *stack_end)
+{
+	typeof(__libc_start_main) *real_lsm;
+	if ((*(void**)&real_lsm = dlsym(RTLD_NEXT, STR(__libc_start_main))) != 0)
+		return real_lsm(main, ac, av, init, fini, rtld_fini, stack_end);
+	fputs("BUG: dlsym error\n", stderr);
+	return 1;
+}
+#ifdef __cplusplus
+}
+#endif
+#undef STR
+#undef STR_
+#endif
+#endif
+
 int
 main (int argc, char **argv)
 {
diff --git a/gcc/ggc-common.c b/gcc/ggc-common.c
index b4c36fb0bbd..d8481d0f289 100644
--- a/gcc/ggc-common.c
+++ b/gcc/ggc-common.c
@@ -598,7 +598,9 @@ gt_pch_restore (FILE *f)
   size_t i;
   struct mmap_info mmi;
   int result;
-
+  long pch_tabs_off;
+  long pch_data_off;
+  
   /* Delete any deletable objects.  This makes ggc_pch_read much
      faster, as it can be sure that no GCable objects remain other
      than the ones just read in.  */
@@ -606,20 +608,24 @@ gt_pch_restore (FILE *f)
     for (rti = *rt; rti->base != NULL; rti++)
       memset (rti->base, 0, rti->stride);
 
-  /* Read in all the scalar variables.  */
+  /* We need to read tables after mapping, or fatal_error will
+     segfault when gt_pch_use_address returns -1. Skip them for now. */
+  pch_tabs_off = ftell(f);
+     
+  /* Skip all the scalar variables. */
   for (rt = gt_pch_scalar_rtab; *rt; rt++)
     for (rti = *rt; rti->base != NULL; rti++)
-      if (fread (rti->base, rti->stride, 1, f) != 1)
-	fatal_error (input_location, "can%'t read PCH file: %m");
+      if (fseek (f, rti->stride, SEEK_CUR) != 0)
+        fatal_error (input_location, "can%'t read PCH file: %m");
 
-  /* Read in all the global pointers, in 6 easy loops.  */
+  /* Skip all the global pointers. */
   for (rt = gt_ggc_rtab; *rt; rt++)
     for (rti = *rt; rti->base != NULL; rti++)
       for (i = 0; i < rti->nelt; i++)
-	if (fread ((char *)rti->base + rti->stride * i,
-		   sizeof (void *), 1, f) != 1)
-	  fatal_error (input_location, "can%'t read PCH file: %m");
-
+        if (fseek (f, sizeof (void *), SEEK_CUR) != 0)
+          fatal_error (input_location, "can%'t read PCH file: %m");
+          
+  /* mmi still has to be read now. */          
   if (fread (&mmi, sizeof (mmi), 1, f) != 1)
     fatal_error (input_location, "can%'t read PCH file: %m");
 
@@ -630,12 +636,35 @@ gt_pch_restore (FILE *f)
   if (result == 0)
     {
       if (fseek (f, mmi.offset, SEEK_SET) != 0
-	  || fread (mmi.preferred_base, mmi.size, 1, f) != 1)
-	fatal_error (input_location, "can%'t read PCH file: %m");
+          || fread (mmi.preferred_base, mmi.size, 1, f) != 1)
+        fatal_error (input_location, "can%'t read PCH file: %m");
     }
   else if (fseek (f, mmi.offset + mmi.size, SEEK_SET) != 0)
     fatal_error (input_location, "can%'t read PCH file: %m");
+    
+  /* File mapping done, read tables now. */
+  pch_data_off = ftell(f);
+  
+  if (fseek (f, pch_tabs_off, SEEK_SET) != 0)
+    fatal_error (input_location, "can%'t read PCH file: %m");
 
+  /* Read in all the scalar variables.  */
+  for (rt = gt_pch_scalar_rtab; *rt; rt++)
+    for (rti = *rt; rti->base != NULL; rti++)
+      if (fread (rti->base, rti->stride, 1, f) != 1)
+        fatal_error (input_location, "can%'t read PCH file: %m");
+
+  /* Read in all the global pointers, in 6 easy loops.  */
+  for (rt = gt_ggc_rtab; *rt; rt++)
+    for (rti = *rt; rti->base != NULL; rti++)
+      for (i = 0; i < rti->nelt; i++)
+        if (fread ((char *)rti->base + rti->stride * i,
+            sizeof (void *), 1, f) != 1)
+          fatal_error (input_location, "can%'t read PCH file: %m");
+
+  if (fseek (f, pch_data_off, SEEK_SET) != 0)
+    fatal_error (input_location, "can%'t read PCH file: %m");
+            
   ggc_pch_read (f, mmi.preferred_base);
 
   gt_pch_restore_stringpool ();
diff --git a/gcc/glibc.so b/gcc/glibc.so
new file mode 100644
index 00000000000..408ef8ba856
--- /dev/null
+++ b/gcc/glibc.so
@@ -0,0 +1,3 @@
+/* GNU ld script  */
+OUTPUT_FORMAT(elf64-x86-64)
+GROUP ( /lib64/libdl.so.2 /lib64/libc.so.6 /usr/lib64/libc_nonshared.a AS_NEEDED ( /lib64/ld-linux-x86-64.so.2 ) )
diff --git a/gcc/incpath.c b/gcc/incpath.c
index 98fe5ec9ab3..b9e25ce91b9 100644
--- a/gcc/incpath.c
+++ b/gcc/incpath.c
@@ -27,6 +27,12 @@
 #include "incpath.h"
 #include "cppdefault.h"
 
+#if defined(__MSDOS__) || defined(_WIN32) || defined(__OS2__)
+#  define HOST_LACKS_INODE_NUMBERS 1
+#  undef PATH_SEPARATOR
+#  define PATH_SEPARATOR ';'
+#endif
+
 /* Microsoft Windows does not natively support inodes.
    VMS has non-numeric inodes.  */
 #ifdef VMS
@@ -176,10 +182,17 @@ add_standard_paths (const char *sysroot, const char *iprefix,
 	    {
 	      char *sysroot_no_trailing_dir_separator = xstrdup (sysroot);
 	      size_t sysroot_len = strlen (sysroot);
+	      const char *fname;
 
 	      if (sysroot_len > 0 && sysroot[sysroot_len - 1] == DIR_SEPARATOR)
 		sysroot_no_trailing_dir_separator[sysroot_len - 1] = '\0';
-	      str = concat (sysroot_no_trailing_dir_separator, p->fname, NULL);
+	      fname = p->fname;
+#if defined(__MSDOS__) || defined(_WIN32) || defined(__OS2__)
+	      /* skip the C:/msys64/ part of p->fname */
+	      if (HAS_DRIVE_SPEC(fname))
+		fname = strchr(fname + 3, DIR_SEPARATOR);
+#endif
+	      str = concat (sysroot_no_trailing_dir_separator, fname, NULL);
 	      free (sysroot_no_trailing_dir_separator);
 	    }
 	  else if (!p->add_sysroot && relocated
diff --git a/gcc/libcwrap.h b/gcc/libcwrap.h
new file mode 100644
index 00000000000..990c44c0d7d
--- /dev/null
+++ b/gcc/libcwrap.h
@@ -0,0 +1,1548 @@
+/* glibc bindings for target ABI version glibc 2.14 */
+#if defined(__linux__) && !defined (__LIBC_CUSTOM_BINDINGS_H__) && !defined(__ANDROID__)
+
+#if defined(__x86_64__)
+
+#define __LINUX_GLIBC_WRAP_H
+
+#if defined (__cplusplus)
+extern "C" {
+#endif
+
+#undef SYMVER
+#undef SYMVER1
+#ifdef __ASSEMBLER__
+#define SYMVER1(name, ver) .symver name, name##@##ver
+#else
+#define SYMVER1(name, ver) __asm__(".symver " #name ", " #name "@" #ver );
+#endif
+#define SYMVER(name, ver) SYMVER1(name, ver)
+
+
+/* Symbols redirected to earlier glibc versions */
+SYMVER(__libc_start_main, GLIBC_2.2.5)
+SYMVER(__libpthread_version_placeholder, GLIBC_2.12)
+SYMVER(__mq_open_2, GLIBC_2.7)
+SYMVER(__pthread_cleanup_routine, GLIBC_2.3.3)
+SYMVER(__pthread_key_create, GLIBC_2.2.5)
+SYMVER(__pthread_register_cancel, GLIBC_2.3.3)
+SYMVER(__pthread_register_cancel_defer, GLIBC_2.3.3)
+SYMVER(__pthread_unregister_cancel, GLIBC_2.3.3)
+SYMVER(__pthread_unregister_cancel_restore, GLIBC_2.3.3)
+SYMVER(__pthread_unwind_next, GLIBC_2.3.3)
+SYMVER(_pthread_cleanup_pop, GLIBC_2.2.5)
+SYMVER(_pthread_cleanup_push, GLIBC_2.2.5)
+SYMVER(aio_cancel, GLIBC_2.2.5)
+SYMVER(aio_cancel64, GLIBC_2.2.5)
+SYMVER(aio_error, GLIBC_2.2.5)
+SYMVER(aio_error64, GLIBC_2.2.5)
+SYMVER(aio_fsync, GLIBC_2.2.5)
+SYMVER(aio_fsync64, GLIBC_2.2.5)
+SYMVER(aio_init, GLIBC_2.2.5)
+SYMVER(aio_read, GLIBC_2.2.5)
+SYMVER(aio_read64, GLIBC_2.2.5)
+SYMVER(aio_return, GLIBC_2.2.5)
+SYMVER(aio_return64, GLIBC_2.2.5)
+SYMVER(aio_suspend, GLIBC_2.2.5)
+SYMVER(aio_suspend64, GLIBC_2.2.5)
+SYMVER(aio_write, GLIBC_2.2.5)
+SYMVER(aio_write64, GLIBC_2.2.5)
+SYMVER(clock_adjtime, GLIBC_2.14)
+SYMVER(clock_getcpuclockid, GLIBC_2.2.5)
+SYMVER(clock_getres, GLIBC_2.2.5)
+SYMVER(clock_gettime, GLIBC_2.2.5)
+SYMVER(clock_nanosleep, GLIBC_2.2.5)
+SYMVER(clock_settime, GLIBC_2.2.5)
+SYMVER(dladdr, GLIBC_2.2.5)
+SYMVER(dladdr1, GLIBC_2.3.3)
+SYMVER(dlclose, GLIBC_2.2.5)
+SYMVER(dlerror, GLIBC_2.2.5)
+SYMVER(dlinfo, GLIBC_2.3.3)
+SYMVER(dlmopen, GLIBC_2.3.4)
+SYMVER(dlopen, GLIBC_2.2.5)
+SYMVER(dlsym, GLIBC_2.2.5)
+SYMVER(dlvsym, GLIBC_2.2.5)
+SYMVER(exp, GLIBC_2.2.5)
+SYMVER(exp10f, GLIBC_2.2.5)
+SYMVER(exp2, GLIBC_2.2.5)
+SYMVER(exp2f, GLIBC_2.2.5)
+SYMVER(expf, GLIBC_2.2.5)
+SYMVER(fmemopen, GLIBC_2.2.5)
+SYMVER(forkpty, GLIBC_2.2.5)
+SYMVER(gai_cancel, GLIBC_2.2.5)
+SYMVER(gai_error, GLIBC_2.2.5)
+SYMVER(gai_suspend, GLIBC_2.2.5)
+SYMVER(getaddrinfo_a, GLIBC_2.2.5)
+SYMVER(glob, GLIBC_2.2.5)
+SYMVER(glob64, GLIBC_2.2.5)
+SYMVER(hypot, GLIBC_2.2.5)
+SYMVER(hypotf, GLIBC_2.2.5)
+SYMVER(lgamma, GLIBC_2.2.5)
+SYMVER(lgammaf, GLIBC_2.2.5)
+SYMVER(lgammal, GLIBC_2.2.5)
+SYMVER(lio_listio, GLIBC_2.4)
+SYMVER(lio_listio64, GLIBC_2.4)
+SYMVER(log, GLIBC_2.2.5)
+SYMVER(log2, GLIBC_2.2.5)
+SYMVER(log2f, GLIBC_2.2.5)
+SYMVER(logf, GLIBC_2.2.5)
+SYMVER(login, GLIBC_2.2.5)
+SYMVER(login_tty, GLIBC_2.2.5)
+SYMVER(logout, GLIBC_2.2.5)
+SYMVER(logwtmp, GLIBC_2.2.5)
+SYMVER(memcpy, GLIBC_2.14)
+SYMVER(mq_close, GLIBC_2.3.4)
+SYMVER(mq_getattr, GLIBC_2.3.4)
+SYMVER(mq_notify, GLIBC_2.3.4)
+SYMVER(mq_open, GLIBC_2.3.4)
+SYMVER(mq_receive, GLIBC_2.3.4)
+SYMVER(mq_send, GLIBC_2.3.4)
+SYMVER(mq_setattr, GLIBC_2.3.4)
+SYMVER(mq_timedreceive, GLIBC_2.3.4)
+SYMVER(mq_timedsend, GLIBC_2.3.4)
+SYMVER(mq_unlink, GLIBC_2.3.4)
+SYMVER(name_to_handle_at, GLIBC_2.14)
+SYMVER(ns_name_compress, GLIBC_2.9)
+SYMVER(ns_name_ntop, GLIBC_2.9)
+SYMVER(ns_name_pack, GLIBC_2.9)
+SYMVER(ns_name_pton, GLIBC_2.9)
+SYMVER(ns_name_skip, GLIBC_2.9)
+SYMVER(ns_name_uncompress, GLIBC_2.9)
+SYMVER(ns_name_unpack, GLIBC_2.9)
+SYMVER(open_by_handle_at, GLIBC_2.14)
+SYMVER(openpty, GLIBC_2.2.5)
+SYMVER(posix_spawn, GLIBC_2.2.5)
+SYMVER(posix_spawnp, GLIBC_2.2.5)
+SYMVER(pow, GLIBC_2.2.5)
+SYMVER(powf, GLIBC_2.2.5)
+SYMVER(pthread_attr_getaffinity_np, GLIBC_2.3.4)
+SYMVER(pthread_attr_getguardsize, GLIBC_2.2.5)
+SYMVER(pthread_attr_getstack, GLIBC_2.2.5)
+SYMVER(pthread_attr_getstackaddr, GLIBC_2.2.5)
+SYMVER(pthread_attr_getstacksize, GLIBC_2.2.5)
+SYMVER(pthread_attr_setaffinity_np, GLIBC_2.3.4)
+SYMVER(pthread_attr_setguardsize, GLIBC_2.2.5)
+SYMVER(pthread_attr_setstack, GLIBC_2.2.5)
+SYMVER(pthread_attr_setstackaddr, GLIBC_2.2.5)
+SYMVER(pthread_attr_setstacksize, GLIBC_2.2.5)
+SYMVER(pthread_barrier_destroy, GLIBC_2.2.5)
+SYMVER(pthread_barrier_init, GLIBC_2.2.5)
+SYMVER(pthread_barrier_wait, GLIBC_2.2.5)
+SYMVER(pthread_barrierattr_destroy, GLIBC_2.2.5)
+SYMVER(pthread_barrierattr_getpshared, GLIBC_2.3.3)
+SYMVER(pthread_barrierattr_init, GLIBC_2.2.5)
+SYMVER(pthread_barrierattr_setpshared, GLIBC_2.2.5)
+SYMVER(pthread_cancel, GLIBC_2.2.5)
+SYMVER(pthread_condattr_getclock, GLIBC_2.3.3)
+SYMVER(pthread_condattr_getpshared, GLIBC_2.2.5)
+SYMVER(pthread_condattr_setclock, GLIBC_2.3.3)
+SYMVER(pthread_condattr_setpshared, GLIBC_2.2.5)
+SYMVER(pthread_create, GLIBC_2.2.5)
+SYMVER(pthread_detach, GLIBC_2.2.5)
+SYMVER(pthread_getaffinity_np, GLIBC_2.3.4)
+SYMVER(pthread_getattr_np, GLIBC_2.2.5)
+SYMVER(pthread_getconcurrency, GLIBC_2.2.5)
+SYMVER(pthread_getcpuclockid, GLIBC_2.2.5)
+SYMVER(pthread_getname_np, GLIBC_2.12)
+SYMVER(pthread_getspecific, GLIBC_2.2.5)
+SYMVER(pthread_join, GLIBC_2.2.5)
+SYMVER(pthread_key_create, GLIBC_2.2.5)
+SYMVER(pthread_key_delete, GLIBC_2.2.5)
+SYMVER(pthread_kill, GLIBC_2.2.5)
+SYMVER(pthread_mutex_consistent, GLIBC_2.12)
+SYMVER(pthread_mutex_getprioceiling, GLIBC_2.4)
+SYMVER(pthread_mutex_setprioceiling, GLIBC_2.4)
+SYMVER(pthread_mutex_timedlock, GLIBC_2.2.5)
+SYMVER(pthread_mutex_trylock, GLIBC_2.2.5)
+SYMVER(pthread_mutexattr_destroy, GLIBC_2.2.5)
+SYMVER(pthread_mutexattr_getprioceiling, GLIBC_2.4)
+SYMVER(pthread_mutexattr_getprotocol, GLIBC_2.4)
+SYMVER(pthread_mutexattr_getpshared, GLIBC_2.2.5)
+SYMVER(pthread_mutexattr_getrobust, GLIBC_2.12)
+SYMVER(pthread_mutexattr_gettype, GLIBC_2.2.5)
+SYMVER(pthread_mutexattr_init, GLIBC_2.2.5)
+SYMVER(pthread_mutexattr_setprioceiling, GLIBC_2.4)
+SYMVER(pthread_mutexattr_setprotocol, GLIBC_2.4)
+SYMVER(pthread_mutexattr_setpshared, GLIBC_2.2.5)
+SYMVER(pthread_mutexattr_setrobust, GLIBC_2.12)
+SYMVER(pthread_mutexattr_settype, GLIBC_2.2.5)
+SYMVER(pthread_once, GLIBC_2.2.5)
+SYMVER(pthread_rwlock_destroy, GLIBC_2.2.5)
+SYMVER(pthread_rwlock_init, GLIBC_2.2.5)
+SYMVER(pthread_rwlock_rdlock, GLIBC_2.2.5)
+SYMVER(pthread_rwlock_timedrdlock, GLIBC_2.2.5)
+SYMVER(pthread_rwlock_timedwrlock, GLIBC_2.2.5)
+SYMVER(pthread_rwlock_tryrdlock, GLIBC_2.2.5)
+SYMVER(pthread_rwlock_trywrlock, GLIBC_2.2.5)
+SYMVER(pthread_rwlock_unlock, GLIBC_2.2.5)
+SYMVER(pthread_rwlock_wrlock, GLIBC_2.2.5)
+SYMVER(pthread_rwlockattr_destroy, GLIBC_2.2.5)
+SYMVER(pthread_rwlockattr_getkind_np, GLIBC_2.2.5)
+SYMVER(pthread_rwlockattr_getpshared, GLIBC_2.2.5)
+SYMVER(pthread_rwlockattr_init, GLIBC_2.2.5)
+SYMVER(pthread_rwlockattr_setkind_np, GLIBC_2.2.5)
+SYMVER(pthread_rwlockattr_setpshared, GLIBC_2.2.5)
+SYMVER(pthread_setaffinity_np, GLIBC_2.3.4)
+SYMVER(pthread_setconcurrency, GLIBC_2.2.5)
+SYMVER(pthread_setname_np, GLIBC_2.12)
+SYMVER(pthread_setschedprio, GLIBC_2.3.4)
+SYMVER(pthread_setspecific, GLIBC_2.2.5)
+SYMVER(pthread_sigmask, GLIBC_2.2.5)
+SYMVER(pthread_sigqueue, GLIBC_2.11)
+SYMVER(pthread_spin_destroy, GLIBC_2.2.5)
+SYMVER(pthread_spin_init, GLIBC_2.2.5)
+SYMVER(pthread_spin_lock, GLIBC_2.2.5)
+SYMVER(pthread_spin_trylock, GLIBC_2.2.5)
+SYMVER(pthread_spin_unlock, GLIBC_2.2.5)
+SYMVER(pthread_testcancel, GLIBC_2.2.5)
+SYMVER(pthread_timedjoin_np, GLIBC_2.3.3)
+SYMVER(pthread_tryjoin_np, GLIBC_2.3.3)
+SYMVER(quick_exit, GLIBC_2.10)
+SYMVER(sem_close, GLIBC_2.2.5)
+SYMVER(sem_destroy, GLIBC_2.2.5)
+SYMVER(sem_getvalue, GLIBC_2.2.5)
+SYMVER(sem_init, GLIBC_2.2.5)
+SYMVER(sem_open, GLIBC_2.2.5)
+SYMVER(sem_post, GLIBC_2.2.5)
+SYMVER(sem_timedwait, GLIBC_2.2.5)
+SYMVER(sem_trywait, GLIBC_2.2.5)
+SYMVER(sem_unlink, GLIBC_2.2.5)
+SYMVER(sem_wait, GLIBC_2.2.5)
+SYMVER(sendmmsg, GLIBC_2.14)
+SYMVER(setns, GLIBC_2.14)
+SYMVER(shm_open, GLIBC_2.2.5)
+SYMVER(shm_unlink, GLIBC_2.2.5)
+SYMVER(syncfs, GLIBC_2.14)
+SYMVER(timer_create, GLIBC_2.3.3)
+SYMVER(timer_delete, GLIBC_2.3.3)
+SYMVER(timer_getoverrun, GLIBC_2.3.3)
+SYMVER(timer_gettime, GLIBC_2.3.3)
+SYMVER(timer_settime, GLIBC_2.3.3)
+
+/* Symbols introduced in newer glibc versions, which must not be used */
+SYMVER(_Fork, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(_ZGVbN2v_acos, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_acosh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_asin, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_asinh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_atan, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_atanh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_cbrt, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_cos, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVbN2v_cosh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_erf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_erfc, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_exp, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVbN2v_exp10, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_exp2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_expm1, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_log, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVbN2v_log10, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_log1p, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_log2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_sin, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVbN2v_sinh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_tan, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_tanh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2vv_atan2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2vv_hypot, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2vv_pow, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVbN2vvv_sincos, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVbN4v_acosf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_acoshf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_asinf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_asinhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_atanf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_atanhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_cbrtf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_cosf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVbN4v_coshf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_erfcf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_erff, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_exp10f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_exp2f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_expf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVbN4v_expm1f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_log10f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_log1pf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_log2f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_logf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVbN4v_sinf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVbN4v_sinhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_tanf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_tanhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4vv_atan2f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4vv_hypotf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4vv_powf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVbN4vvv_sincosf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVcN4v_acos, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_acosh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_asin, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_asinh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_atan, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_atanh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_cbrt, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_cos, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVcN4v_cosh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_erf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_erfc, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_exp, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVcN4v_exp10, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_exp2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_expm1, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_log, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVcN4v_log10, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_log1p, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_log2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_sin, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVcN4v_sinh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_tan, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_tanh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4vv_atan2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4vv_hypot, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4vv_pow, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVcN4vvv_sincos, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVcN8v_acosf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_acoshf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_asinf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_asinhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_atanf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_atanhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_cbrtf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_cosf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVcN8v_coshf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_erfcf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_erff, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_exp10f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_exp2f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_expf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVcN8v_expm1f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_log10f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_log1pf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_log2f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_logf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVcN8v_sinf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVcN8v_sinhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_tanf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_tanhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8vv_atan2f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8vv_hypotf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8vv_powf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVcN8vvv_sincosf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVdN4v_acos, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_acosh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_asin, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_asinh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_atan, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_atanh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_cbrt, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_cos, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVdN4v_cosh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_erf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_erfc, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_exp, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVdN4v_exp10, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_exp2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_expm1, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_log, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVdN4v_log10, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_log1p, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_log2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_sin, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVdN4v_sinh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_tan, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_tanh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4vv_atan2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4vv_hypot, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4vv_pow, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVdN4vvv_sincos, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVdN8v_acosf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_acoshf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_asinf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_asinhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_atanf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_atanhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_cbrtf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_cosf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVdN8v_coshf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_erfcf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_erff, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_exp10f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_exp2f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_expf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVdN8v_expm1f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_log10f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_log1pf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_log2f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_logf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVdN8v_sinf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVdN8v_sinhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_tanf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_tanhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8vv_atan2f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8vv_hypotf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8vv_powf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVdN8vvv_sincosf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVeN16v_acosf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_acoshf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_asinf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_asinhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_atanf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_atanhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_cbrtf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_cosf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVeN16v_coshf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_erfcf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_erff, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_exp10f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_exp2f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_expf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVeN16v_expm1f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_log10f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_log1pf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_log2f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_logf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVeN16v_sinf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVeN16v_sinhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_tanf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_tanhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16vv_atan2f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16vv_hypotf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16vv_powf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVeN16vvv_sincosf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVeN8v_acos, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_acosh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_asin, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_asinh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_atan, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_atanh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_cbrt, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_cos, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVeN8v_cosh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_erf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_erfc, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_exp, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVeN8v_exp10, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_exp2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_expm1, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_log, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVeN8v_log10, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_log1p, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_log2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_sin, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVeN8v_sinh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_tan, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_tanh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8vv_atan2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8vv_hypot, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8vv_pow, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVeN8vvv_sincos, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(__acos_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__acosf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__acosf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__acosh_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__acoshf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__acoshf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__acoshl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__acosl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__asin_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__asinf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__asinf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__asinl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__atan2_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__atan2f128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__atan2f_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__atan2l_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__atanh_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__atanhf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__atanhf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__atanhl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__cosh_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__coshf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__coshf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__coshl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__cxa_thread_atexit_impl, GLIBC_DONT_USE_THIS_VERSION_2.18)
+SYMVER(__exp10_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__exp10f128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__exp10f_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__exp10l_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__exp2_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__exp2f128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__exp2f_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__exp2l_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__exp_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__expf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__expf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__expl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__explicit_bzero_chk, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(__fdelt_chk, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__fdelt_warn, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__finitef128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__fmod_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__fmodf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__fmodf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__fmodl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__fpclassifyf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__gamma_r_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__gammaf128_r_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__gammaf_r_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__gammal_r_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__getauxval, GLIBC_DONT_USE_THIS_VERSION_2.16)
+SYMVER(__hypot_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__hypotf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__hypotf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__hypotl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__iscanonicall, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(__iseqsig, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(__iseqsigf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(__iseqsigf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__iseqsigl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(__isinff128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__isnanf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__issignaling, GLIBC_DONT_USE_THIS_VERSION_2.18)
+SYMVER(__issignalingf, GLIBC_DONT_USE_THIS_VERSION_2.18)
+SYMVER(__issignalingf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__issignalingl, GLIBC_DONT_USE_THIS_VERSION_2.18)
+SYMVER(__j0_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__j0f128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__j0f_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__j0l_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__j1_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__j1f128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__j1f_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__j1l_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__jn_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__jnf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__jnf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__jnl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__lgamma_r_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__lgammaf128_r_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__lgammaf_r_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__lgammal_r_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__libc_single_threaded, GLIBC_DONT_USE_THIS_VERSION_2.32)
+SYMVER(__log10_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__log10f128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__log10f_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__log10l_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__log2_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__log2f128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__log2f_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__log2l_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__log_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__logf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__logf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__logl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__memcmpeq, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(__poll_chk, GLIBC_DONT_USE_THIS_VERSION_2.16)
+SYMVER(__pow_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__powf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__powf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__powl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__ppoll_chk, GLIBC_DONT_USE_THIS_VERSION_2.16)
+SYMVER(__remainder_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__remainderf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__remainderf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__remainderl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__rseq_flags, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(__rseq_offset, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(__rseq_size, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(__rtld_version_placeholder, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(__scalb_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__scalbf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__scalbl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__signbitf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__signgam, GLIBC_DONT_USE_THIS_VERSION_2.23)
+SYMVER(__sinh_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__sinhf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__sinhf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__sinhl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__sqrt_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__sqrtf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__sqrtf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__sqrtl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__strtof128_internal, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__wcstof128_internal, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__x86_get_cpuid_feature_leaf, GLIBC_DONT_USE_THIS_VERSION_2.33)
+SYMVER(__y0_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__y0f128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__y0f_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__y0l_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__y1_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__y1f128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__y1f_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__y1l_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__yn_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__ynf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__ynf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__ynl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(_dl_find_object, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(acosf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(acosf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(acosf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(acosf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(acosf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(acoshf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(acoshf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(acoshf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(acoshf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(acoshf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(aligned_alloc, GLIBC_DONT_USE_THIS_VERSION_2.16)
+SYMVER(arc4random, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(arc4random_buf, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(arc4random_uniform, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(asinf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(asinf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(asinf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(asinf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(asinf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(asinhf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(asinhf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(asinhf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(asinhf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(asinhf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(atan2f128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(atan2f32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(atan2f32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(atan2f64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(atan2f64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(atanf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(atanf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(atanf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(atanf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(atanf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(atanhf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(atanhf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(atanhf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(atanhf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(atanhf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(c16rtomb, GLIBC_DONT_USE_THIS_VERSION_2.16)
+SYMVER(c32rtomb, GLIBC_DONT_USE_THIS_VERSION_2.16)
+SYMVER(c8rtomb, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(cabsf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(cabsf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cabsf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cabsf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cabsf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cacosf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(cacosf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cacosf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cacosf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cacosf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cacoshf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(cacoshf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cacoshf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cacoshf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cacoshf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(call_once, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(canonicalize, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(canonicalizef, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(canonicalizef128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(canonicalizef32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(canonicalizef32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(canonicalizef64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(canonicalizef64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(canonicalizel, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(cargf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(cargf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cargf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cargf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cargf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(casinf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(casinf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(casinf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(casinf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(casinf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(casinhf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(casinhf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(casinhf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(casinhf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(casinhf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(catanf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(catanf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(catanf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(catanf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(catanf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(catanhf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(catanhf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(catanhf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(catanhf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(catanhf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cbrtf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(cbrtf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cbrtf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cbrtf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cbrtf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ccosf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(ccosf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ccosf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ccosf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ccosf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ccoshf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(ccoshf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ccoshf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ccoshf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ccoshf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ceilf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(ceilf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ceilf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ceilf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ceilf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cexpf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(cexpf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cexpf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cexpf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cexpf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cimagf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(cimagf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cimagf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cimagf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cimagf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(clog10f128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(clog10f32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(clog10f32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(clog10f64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(clog10f64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(clogf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(clogf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(clogf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(clogf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(clogf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(close_range, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(closefrom, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(cnd_broadcast, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(cnd_destroy, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(cnd_init, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(cnd_signal, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(cnd_timedwait, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(cnd_wait, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(conjf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(conjf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(conjf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(conjf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(conjf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(copy_file_range, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(copysignf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(copysignf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(copysignf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(copysignf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(copysignf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cosf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(cosf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cosf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cosf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cosf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(coshf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(coshf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(coshf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(coshf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(coshf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cpowf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(cpowf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cpowf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cpowf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cpowf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cprojf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(cprojf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cprojf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cprojf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cprojf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(crealf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(crealf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(crealf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(crealf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(crealf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(csinf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(csinf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(csinf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(csinf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(csinf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(csinhf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(csinhf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(csinhf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(csinhf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(csinhf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(csqrtf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(csqrtf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(csqrtf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(csqrtf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(csqrtf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ctanf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(ctanf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ctanf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ctanf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ctanf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ctanhf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(ctanhf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ctanhf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ctanhf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ctanhf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(daddl, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(ddivl, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(dfmal, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(dmull, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(dn_comp, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(dn_expand, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(dn_skipname, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(dsqrtl, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(dsubl, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(epoll_pwait2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(erfcf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(erfcf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(erfcf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(erfcf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(erfcf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(erff128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(erff32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(erff32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(erff64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(erff64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(execveat, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(exp10f128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(exp10f32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(exp10f32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(exp10f64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(exp10f64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(exp2f128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(exp2f32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(exp2f32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(exp2f64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(exp2f64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(expf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(expf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(expf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(expf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(expf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(explicit_bzero, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(expm1f128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(expm1f32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(expm1f32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(expm1f64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(expm1f64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(f32addf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32addf32x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32addf64, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32addf64x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32divf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32divf32x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32divf64, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32divf64x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32fmaf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32fmaf32x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32fmaf64, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32fmaf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32mulf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32mulf32x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32mulf64, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32mulf64x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32sqrtf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32sqrtf32x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32sqrtf64, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32sqrtf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32subf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32subf32x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32subf64, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32subf64x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32xaddf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32xaddf64, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32xaddf64x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32xdivf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32xdivf64, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32xdivf64x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32xfmaf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32xfmaf64, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32xfmaf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32xmulf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32xmulf64, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32xmulf64x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32xsqrtf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32xsqrtf64, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32xsqrtf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32xsubf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32xsubf64, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32xsubf64x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f64addf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f64addf64x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f64divf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f64divf64x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f64fmaf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f64fmaf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f64mulf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f64mulf64x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f64sqrtf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f64sqrtf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f64subf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f64subf64x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f64xaddf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f64xdivf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f64xfmaf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f64xmulf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f64xsqrtf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f64xsubf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(fabsf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(fabsf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fabsf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fabsf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fabsf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fadd, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(faddl, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(fcntl64, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(fdimf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(fdimf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fdimf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fdimf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fdimf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fdiv, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(fdivl, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(fegetmode, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fesetexcept, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fesetmode, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fetestexceptflag, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(ffma, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(ffmal, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(floorf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(floorf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(floorf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(floorf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(floorf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(fmaf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaxf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(fmaxf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaxf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaxf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaxf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaximum, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_mag, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_mag_num, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_mag_numf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_mag_numf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_mag_numf32, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_mag_numf32x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_mag_numf64, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_mag_numf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_mag_numl, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_magf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_magf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_magf32, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_magf32x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_magf64, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_magf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_magl, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_num, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_numf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_numf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_numf32, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_numf32x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_numf64, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_numf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_numl, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximumf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximumf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximumf32, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximumf32x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximumf64, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximumf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximuml, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaxmag, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fmaxmagf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fmaxmagf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(fmaxmagf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaxmagf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaxmagf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaxmagf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaxmagl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fminf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(fminf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fminf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fminf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fminf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fminimum, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_mag, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_mag_num, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_mag_numf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_mag_numf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_mag_numf32, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_mag_numf32x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_mag_numf64, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_mag_numf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_mag_numl, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_magf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_magf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_magf32, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_magf32x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_magf64, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_magf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_magl, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_num, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_numf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_numf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_numf32, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_numf32x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_numf64, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_numf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_numl, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimumf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimumf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimumf32, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimumf32x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimumf64, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimumf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimuml, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminmag, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fminmagf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fminmagf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(fminmagf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fminmagf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fminmagf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fminmagf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fminmagl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fmodf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(fmodf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmodf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmodf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmodf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmul, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(fmull, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(frexpf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(frexpf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(frexpf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(frexpf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(frexpf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fromfp, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fromfpf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fromfpf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(fromfpf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fromfpf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fromfpf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fromfpf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fromfpl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fromfpx, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fromfpxf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fromfpxf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(fromfpxf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fromfpxf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fromfpxf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fromfpxf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fromfpxl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fsconfig, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(fsmount, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(fsopen, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(fspick, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(fsqrt, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fsqrtl, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fstat, GLIBC_DONT_USE_THIS_VERSION_2.33)
+SYMVER(fstat64, GLIBC_DONT_USE_THIS_VERSION_2.33)
+SYMVER(fstatat, GLIBC_DONT_USE_THIS_VERSION_2.33)
+SYMVER(fstatat64, GLIBC_DONT_USE_THIS_VERSION_2.33)
+SYMVER(fsub, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(fsubl, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(fts64_children, GLIBC_DONT_USE_THIS_VERSION_2.23)
+SYMVER(fts64_close, GLIBC_DONT_USE_THIS_VERSION_2.23)
+SYMVER(fts64_open, GLIBC_DONT_USE_THIS_VERSION_2.23)
+SYMVER(fts64_read, GLIBC_DONT_USE_THIS_VERSION_2.23)
+SYMVER(fts64_set, GLIBC_DONT_USE_THIS_VERSION_2.23)
+SYMVER(getauxval, GLIBC_DONT_USE_THIS_VERSION_2.16)
+SYMVER(getcpu, GLIBC_DONT_USE_THIS_VERSION_2.29)
+SYMVER(getdents64, GLIBC_DONT_USE_THIS_VERSION_2.30)
+SYMVER(getentropy, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(getpayload, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(getpayloadf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(getpayloadf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(getpayloadf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(getpayloadf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(getpayloadf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(getpayloadf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(getpayloadl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(getrandom, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(gettid, GLIBC_DONT_USE_THIS_VERSION_2.30)
+SYMVER(hypotf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(hypotf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(hypotf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(hypotf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(hypotf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ilogbf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(ilogbf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ilogbf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ilogbf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ilogbf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(j0f128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(j0f32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(j0f32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(j0f64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(j0f64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(j1f128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(j1f32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(j1f32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(j1f64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(j1f64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(jnf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(jnf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(jnf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(jnf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(jnf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ldexpf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(ldexpf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ldexpf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ldexpf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ldexpf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lgammaf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(lgammaf128_r, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(lgammaf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lgammaf32_r, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lgammaf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lgammaf32x_r, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lgammaf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lgammaf64_r, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lgammaf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lgammaf64x_r, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(llogb, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(llogbf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(llogbf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(llogbf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(llogbf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(llogbf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(llogbf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(llogbl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(llrintf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(llrintf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(llrintf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(llrintf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(llrintf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(llroundf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(llroundf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(llroundf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(llroundf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(llroundf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(log10f128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(log10f32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(log10f32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(log10f64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(log10f64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(log1pf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(log1pf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(log1pf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(log1pf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(log1pf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(log2f128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(log2f32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(log2f32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(log2f64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(log2f64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(logbf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(logbf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(logbf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(logbf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(logbf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(logf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(logf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(logf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(logf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(logf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lrintf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(lrintf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lrintf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lrintf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lrintf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lroundf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(lroundf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lroundf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lroundf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lroundf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lstat, GLIBC_DONT_USE_THIS_VERSION_2.33)
+SYMVER(lstat64, GLIBC_DONT_USE_THIS_VERSION_2.33)
+SYMVER(mallinfo2, GLIBC_DONT_USE_THIS_VERSION_2.33)
+SYMVER(mbrtoc16, GLIBC_DONT_USE_THIS_VERSION_2.16)
+SYMVER(mbrtoc32, GLIBC_DONT_USE_THIS_VERSION_2.16)
+SYMVER(mbrtoc8, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(memfd_create, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(mknod, GLIBC_DONT_USE_THIS_VERSION_2.33)
+SYMVER(mknodat, GLIBC_DONT_USE_THIS_VERSION_2.33)
+SYMVER(mlock2, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(modff128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(modff32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(modff32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(modff64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(modff64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(mount_setattr, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(move_mount, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(mtx_destroy, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(mtx_init, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(mtx_lock, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(mtx_timedlock, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(mtx_trylock, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(mtx_unlock, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(nanf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(nanf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nanf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nanf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nanf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nearbyintf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(nearbyintf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nearbyintf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nearbyintf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nearbyintf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextafterf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(nextafterf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextafterf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextafterf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextafterf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextdown, GLIBC_DONT_USE_THIS_VERSION_2.24)
+SYMVER(nextdownf, GLIBC_DONT_USE_THIS_VERSION_2.24)
+SYMVER(nextdownf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(nextdownf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextdownf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextdownf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextdownf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextdownl, GLIBC_DONT_USE_THIS_VERSION_2.24)
+SYMVER(nextup, GLIBC_DONT_USE_THIS_VERSION_2.24)
+SYMVER(nextupf, GLIBC_DONT_USE_THIS_VERSION_2.24)
+SYMVER(nextupf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(nextupf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextupf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextupf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextupf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextupl, GLIBC_DONT_USE_THIS_VERSION_2.24)
+SYMVER(open_tree, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(pidfd_getfd, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(pidfd_open, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(pidfd_send_signal, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(pkey_alloc, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(pkey_free, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(pkey_get, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(pkey_mprotect, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(pkey_set, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(posix_spawn_file_actions_addchdir_np, GLIBC_DONT_USE_THIS_VERSION_2.29)
+SYMVER(posix_spawn_file_actions_addclosefrom_np, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(posix_spawn_file_actions_addfchdir_np, GLIBC_DONT_USE_THIS_VERSION_2.29)
+SYMVER(posix_spawn_file_actions_addtcsetpgrp_np, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(powf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(powf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(powf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(powf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(powf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(preadv2, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(preadv64v2, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(process_madvise, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(process_mrelease, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(process_vm_readv, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(process_vm_writev, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(pthread_attr_getsigmask_np, GLIBC_DONT_USE_THIS_VERSION_2.32)
+SYMVER(pthread_attr_setsigmask_np, GLIBC_DONT_USE_THIS_VERSION_2.32)
+SYMVER(pthread_clockjoin_np, GLIBC_DONT_USE_THIS_VERSION_2.31)
+SYMVER(pthread_cond_clockwait, GLIBC_DONT_USE_THIS_VERSION_2.30)
+SYMVER(pthread_getattr_default_np, GLIBC_DONT_USE_THIS_VERSION_2.18)
+SYMVER(pthread_mutex_clocklock, GLIBC_DONT_USE_THIS_VERSION_2.30)
+SYMVER(pthread_rwlock_clockrdlock, GLIBC_DONT_USE_THIS_VERSION_2.30)
+SYMVER(pthread_rwlock_clockwrlock, GLIBC_DONT_USE_THIS_VERSION_2.30)
+SYMVER(pthread_setattr_default_np, GLIBC_DONT_USE_THIS_VERSION_2.18)
+SYMVER(pwritev2, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(pwritev64v2, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(reallocarray, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(remainderf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(remainderf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(remainderf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(remainderf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(remainderf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(remquof128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(remquof32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(remquof32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(remquof64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(remquof64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(renameat2, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(res_dnok, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_hnok, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_mailok, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_mkquery, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_nmkquery, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_nquery, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_nquerydomain, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_nsearch, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_nsend, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_ownok, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_query, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_querydomain, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_search, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_send, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(rintf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(rintf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(rintf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(rintf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(rintf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(roundeven, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(roundevenf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(roundevenf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(roundevenf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(roundevenf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(roundevenf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(roundevenf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(roundevenl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(roundf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(roundf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(roundf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(roundf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(roundf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(scalblnf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(scalblnf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(scalblnf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(scalblnf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(scalblnf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(scalbnf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(scalbnf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(scalbnf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(scalbnf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(scalbnf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(scandirat, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(scandirat64, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(secure_getenv, GLIBC_DONT_USE_THIS_VERSION_2.17)
+SYMVER(sem_clockwait, GLIBC_DONT_USE_THIS_VERSION_2.30)
+SYMVER(setpayload, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(setpayloadf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(setpayloadf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(setpayloadf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(setpayloadf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(setpayloadf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(setpayloadf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(setpayloadl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(setpayloadsig, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(setpayloadsigf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(setpayloadsigf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(setpayloadsigf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(setpayloadsigf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(setpayloadsigf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(setpayloadsigf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(setpayloadsigl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(sigabbrev_np, GLIBC_DONT_USE_THIS_VERSION_2.32)
+SYMVER(sigdescr_np, GLIBC_DONT_USE_THIS_VERSION_2.32)
+SYMVER(sincosf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(sincosf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sincosf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sincosf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sincosf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sinf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(sinf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sinf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sinf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sinf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sinhf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(sinhf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sinhf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sinhf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sinhf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sqrtf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(sqrtf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sqrtf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sqrtf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sqrtf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(stat, GLIBC_DONT_USE_THIS_VERSION_2.33)
+SYMVER(stat64, GLIBC_DONT_USE_THIS_VERSION_2.33)
+SYMVER(statx, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(strerrordesc_np, GLIBC_DONT_USE_THIS_VERSION_2.32)
+SYMVER(strerrorname_np, GLIBC_DONT_USE_THIS_VERSION_2.32)
+SYMVER(strfromd, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(strfromf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(strfromf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(strfromf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(strfromf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(strfromf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(strfromf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(strfroml, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(strtof128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(strtof128_l, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(strtof32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(strtof32_l, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(strtof32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(strtof32x_l, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(strtof64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(strtof64_l, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(strtof64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(strtof64x_l, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tanf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(tanf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tanf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tanf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tanf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tanhf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(tanhf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tanhf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tanhf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tanhf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tgammaf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(tgammaf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tgammaf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tgammaf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tgammaf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tgkill, GLIBC_DONT_USE_THIS_VERSION_2.30)
+SYMVER(thrd_create, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(thrd_current, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(thrd_detach, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(thrd_equal, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(thrd_exit, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(thrd_join, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(thrd_sleep, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(thrd_yield, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(timespec_get, GLIBC_DONT_USE_THIS_VERSION_2.16)
+SYMVER(timespec_getres, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(totalorder, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(totalorderf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(totalorderf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(totalorderf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(totalorderf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(totalorderf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(totalorderf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(totalorderl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(totalordermag, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(totalordermagf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(totalordermagf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(totalordermagf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(totalordermagf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(totalordermagf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(totalordermagf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(totalordermagl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(truncf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(truncf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(truncf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(truncf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(truncf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tss_create, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(tss_delete, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(tss_get, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(tss_set, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(twalk_r, GLIBC_DONT_USE_THIS_VERSION_2.30)
+SYMVER(ufromfp, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(ufromfpf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(ufromfpf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(ufromfpf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ufromfpf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ufromfpf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ufromfpf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ufromfpl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(ufromfpx, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(ufromfpxf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(ufromfpxf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(ufromfpxf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ufromfpxf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ufromfpxf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ufromfpxf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ufromfpxl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(wcstof128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(wcstof128_l, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(wcstof32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(wcstof32_l, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(wcstof32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(wcstof32x_l, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(wcstof64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(wcstof64_l, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(wcstof64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(wcstof64x_l, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(y0f128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(y0f32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(y0f32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(y0f64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(y0f64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(y1f128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(y1f32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(y1f32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(y1f64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(y1f64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ynf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(ynf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ynf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ynf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ynf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+
+#undef SYMVER
+#undef SYMVER1
+
+#ifndef _GNU_SOURCE
+#define _GNU_SOURCE
+#endif
+#include <sys/stat.h>
+
+#if __GLIBC_PREREQ(2, 33)
+
+/*
+ * avoid references to stat/lstat/fstat, which are only available in glibc >= 2.33
+ */
+
+extern int __fxstat(int __ver, int __fildes, struct stat *__stat_buf)
+     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3)));
+extern int __xstat(int __ver, const char *__filename,
+      struct stat *__stat_buf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
+extern int __lxstat(int __ver, const char *__filename,
+       struct stat *__stat_buf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
+extern int __fxstatat (int __ver, int __fildes, const char *__filename,
+         struct stat *__stat_buf, int __flag)
+     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4)));
+#ifdef __USE_LARGEFILE64
+extern int __xstat64(int __ver, const char *__filename,
+      struct stat64 *__stat_buf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
+extern int __lxstat64(int __ver, const char *__filename,
+       struct stat64 *__stat_buf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
+extern int __fxstat64(int __ver, int __fildes, struct stat64 *__stat_buf)
+     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3)));
+#endif
+
+extern __inline __attribute__((__gnu_inline__))
+__attribute__((__nothrow__))
+int stat(const char *__path, struct stat *__statbuf)
+{
+	return __xstat(1, __path, __statbuf);
+}
+
+extern __inline __attribute__((__gnu_inline__))
+__attribute__((__nothrow__)) 
+int lstat (const char *__path, struct stat *__statbuf)
+{
+	return __lxstat(1, __path, __statbuf);
+}
+
+extern __inline __attribute__((__gnu_inline__))
+__attribute__((__nothrow__)) 
+int fstat(int __fd, struct stat *__statbuf)
+{
+	return __fxstat(1, __fd, __statbuf);
+}
+
+extern __inline __attribute__((__gnu_inline__))
+__attribute__((__nothrow__)) 
+int fstatat(int __fd, const char *__filename, struct stat *__statbuf, int __flag)
+{
+	return __fxstatat(1, __fd, __filename, __statbuf, __flag);
+}
+
+#ifdef __USE_LARGEFILE64
+extern __inline __attribute__((__gnu_inline__))
+__attribute__((__nothrow__))
+int stat64(const char *__path, struct stat64 *__statbuf)
+{
+	return __xstat64(1, __path, __statbuf);
+}
+
+extern __inline __attribute__((__gnu_inline__))
+__attribute__((__nothrow__)) 
+int lstat64 (const char *__path, struct stat64 *__statbuf)
+{
+	return __lxstat64(1, __path, __statbuf);
+}
+
+extern __inline __attribute__((__gnu_inline__))
+__attribute__((__nothrow__)) 
+int fstat64(int __fd, struct stat64 *__statbuf)
+{
+	return __fxstat64(1, __fd, __statbuf);
+}
+
+#endif /* __USE_LARGEFILE64 */
+
+#endif /* __GLIBC_PREREQ */
+
+#if defined (__cplusplus)
+}
+#endif
+
+
+#endif /* __x86_64__ */
+#endif /* __linux__ */
diff --git a/gcc/lto-wrapper.c b/gcc/lto-wrapper.c
index 5e5caa85408..a58081cb461 100644
--- a/gcc/lto-wrapper.c
+++ b/gcc/lto-wrapper.c
@@ -1097,7 +1097,8 @@ run_gcc (unsigned argc, char *argv[])
   if (linker_output)
     {
       char *output_dir, *base, *name;
-      bool bit_bucket = strcmp (linker_output, HOST_BIT_BUCKET) == 0;
+      bool bit_bucket = strcmp (linker_output, HOST_BIT_BUCKET) == 0 ||
+                        strcmp (linker_output, HOST_BIT_BUCKET2) == 0;
 
       output_dir = xstrdup (linker_output);
       base = output_dir;
@@ -1459,6 +1460,46 @@ cont:
 
 /* Entry point.  */
 
+#if defined(__LINUX_GLIBC_WRAP_H)
+
+/* ugly hack to get __libc_start_main versioned */
+
+#if __GLIBC_PREREQ(2, 34)
+
+#define STR_(s) #s
+#define STR(s)  STR_(s)
+#include <dlfcn.h>
+
+#ifdef __UCLIBC__
+#define __libc_start_main       __uClibc_main
+#endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+int __libc_start_main(
+        int (*main)(int,char**,char**), int ac, char **av,
+        int (*init)(void), void (*fini)(void),
+        void (*rtld_fini)(void), void *stack_end);
+int __libc_start_main(
+        int (*main)(int,char**,char**), int ac, char **av,
+        int (*init)(void), void (*fini)(void),
+        void (*rtld_fini)(void), void *stack_end)
+{
+	typeof(__libc_start_main) *real_lsm;
+	if ((*(void**)&real_lsm = dlsym(RTLD_NEXT, STR(__libc_start_main))) != 0)
+		return real_lsm(main, ac, av, init, fini, rtld_fini, stack_end);
+	fputs("BUG: dlsym error\n", stderr);
+	return 1;
+}
+#ifdef __cplusplus
+}
+#endif
+#undef STR
+#undef STR_
+#endif
+#endif
+
 int
 main (int argc, char *argv[])
 {
diff --git a/gcc/main.c b/gcc/main.c
index 9462e7a85d5..9a173a9ff9e 100644
--- a/gcc/main.c
+++ b/gcc/main.c
@@ -24,6 +24,46 @@ along with GCC; see the file COPYING3.  If not see
 #include "diagnostic-core.h"
 #include "toplev.h"
 
+#if defined(__LINUX_GLIBC_WRAP_H)
+
+/* ugly hack to get __libc_start_main versioned */
+
+#if __GLIBC_PREREQ(2, 34)
+
+#define STR_(s) #s
+#define STR(s)  STR_(s)
+#include <dlfcn.h>
+
+#ifdef __UCLIBC__
+#define __libc_start_main       __uClibc_main
+#endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+int __libc_start_main(
+        int (*main)(int,char**,char**), int ac, char **av,
+        int (*init)(void), void (*fini)(void),
+        void (*rtld_fini)(void), void *stack_end);
+int __libc_start_main(
+        int (*main)(int,char**,char**), int ac, char **av,
+        int (*init)(void), void (*fini)(void),
+        void (*rtld_fini)(void), void *stack_end)
+{
+	typeof(__libc_start_main) *real_lsm;
+	if ((*(void**)&real_lsm = dlsym(RTLD_NEXT, STR(__libc_start_main))) != 0)
+		return real_lsm(main, ac, av, init, fini, rtld_fini, stack_end);
+	fputs("BUG: dlsym error\n", stderr);
+	return 1;
+}
+#ifdef __cplusplus
+}
+#endif
+#undef STR
+#undef STR_
+#endif
+#endif
+
 int main (int argc, char **argv);
 
 /* We define main() to call toplev::main(), which is defined in toplev.c.
diff --git a/gcc/pretty-print.c b/gcc/pretty-print.c
index bcb1a70ac03..810c65a4405 100644
--- a/gcc/pretty-print.c
+++ b/gcc/pretty-print.c
@@ -30,6 +30,673 @@ along with GCC; see the file COPYING3.  If not see
 #include <iconv.h>
 #endif
 
+#ifdef __MINGW32__
+
+/* Replacement for fputs() that handles ANSI escape codes on Windows NT.
+   Contributed by: Liu Hao (lh_mouse at 126 dot com)
+
+   XXX: This file is compiled into libcommon.a that will be self-contained.
+	It looks like that these functions can be put nowhere else. */
+
+#include <io.h>
+#define WIN32_LEAN_AND_MEAN 1
+#include <windows.h>
+
+#ifndef COMMON_LVB_REVERSE_VIDEO
+#define COMMON_LVB_REVERSE_VIDEO 0x4000
+#endif
+#ifndef COMMON_LVB_UNDERSCORE
+#define COMMON_LVB_UNDERSCORE 0x8000
+#endif
+
+/* Write all bytes in [s,s+n) into the specified stream.
+   Errors are ignored. */
+static void
+write_all (HANDLE h, const char *s, size_t n)
+{
+  size_t rem = n;
+  DWORD step;
+
+  while (rem != 0)
+    {
+      if (rem <= UINT_MAX)
+	step = rem;
+      else
+	step = UINT_MAX;
+      if (!WriteFile (h, s + n - rem, step, &step, NULL))
+	break;
+      rem -= step;
+    }
+}
+
+/* Find the beginning of an escape sequence.
+   There are two cases:
+   1. If the sequence begins with an ESC character (0x1B) and a second
+      character X in [0x40,0x5F], returns X and stores a pointer to
+      the third character into *head.
+   2. If the sequence begins with a character X in [0x80,0x9F], returns
+      (X-0x40) and stores a pointer to the second character into *head.
+   Stores the number of ESC character(s) in *prefix_len.
+   Returns 0 if no such sequence can be found. */
+static int
+find_esc_head (int *prefix_len, const char **head, const char *str)
+{
+  int c;
+  const char *r = str;
+  int escaped = 0;
+
+  for (;;)
+    {
+      c = (unsigned char)*r;
+      if (c == 0)
+	{
+	  /* Not found. */
+	  return 0;
+	}
+      if (escaped && 0x40 <= c && c <= 0x5F)
+	{
+	  /* Found (case 1). */
+	  *prefix_len = 2;
+	  *head = r + 1;
+	  return c;
+	}
+      if (0x80 <= c && c <= 0x9F)
+	{
+	  /* Found (case 2). */
+	  *prefix_len = 1;
+	  *head = r + 1;
+	  return c - 0x40;
+	}
+      ++r;
+      escaped = c == 0x1B;
+    }
+}
+
+/* Find the terminator of an escape sequence.
+   str should be the value stored in *head by a previous successful
+   call to find_esc_head().
+   Returns -1 if no such sequence can be found. */
+static int
+find_esc_terminator (const char **term, const char *str)
+{
+  int c;
+  const char *r = str;
+
+  for (;;)
+    {
+      c = (unsigned char)*r;
+      if (c == 0)
+	{
+	  /* Not found. */
+	  return 0;
+	}
+      if (0x40 <= c && c <= 0x7E)
+	{
+	  /* Found. */
+	  *term = r;
+	  return c;
+	}
+      ++r;
+    }
+}
+
+/* Handle a sequence of codes. Sequences that are invalid, reserved,
+   unrecognized or unimplemented are ignored silently.
+   There isn't much we can do because of lameness of Windows consoles. */
+static void
+eat_esc_sequence (HANDLE h, int esc_code,
+		  const char *esc_head, const char *esc_term)
+{
+  /* Numbers in an escape sequence cannot be negative, because
+     a minus sign in the middle of it would have terminated it. */
+  long n1, n2;
+  char *eptr, *delim;
+  CONSOLE_SCREEN_BUFFER_INFO sb;
+  COORD cr;
+  /* ED and EL parameters. */
+  DWORD cnt, step;
+  long rows;
+  /* SGR parameters. */
+  WORD attrib_add, attrib_rm;
+  const char *param;
+
+  switch (MAKEWORD (esc_code, *esc_term))
+    {
+    /* ESC [ n1 'A'
+	 Move the cursor up by n1 characters. */
+    case MAKEWORD ('[', 'A'):
+      if (esc_head == esc_term)
+	n1 = 1;
+      else
+	{
+	  n1 = strtol (esc_head, &eptr, 10);
+	  if (eptr != esc_term)
+	    break;
+	}
+
+      if (GetConsoleScreenBufferInfo (h, &sb))
+	{
+	  cr = sb.dwCursorPosition;
+	  /* Stop at the topmost boundary. */
+	  if (cr.Y > n1)
+	    cr.Y -= n1;
+	  else
+	    cr.Y = 0;
+	  SetConsoleCursorPosition (h, cr);
+	}
+      break;
+
+    /* ESC [ n1 'B'
+	 Move the cursor down by n1 characters. */
+    case MAKEWORD ('[', 'B'):
+      if (esc_head == esc_term)
+	n1 = 1;
+      else
+	{
+	  n1 = strtol (esc_head, &eptr, 10);
+	  if (eptr != esc_term)
+	    break;
+	}
+
+      if (GetConsoleScreenBufferInfo (h, &sb))
+	{
+	  cr = sb.dwCursorPosition;
+	  /* Stop at the bottommost boundary. */
+	  if (sb.dwSize.Y - cr.Y > n1)
+	    cr.Y += n1;
+	  else
+	    cr.Y = sb.dwSize.Y;
+	  SetConsoleCursorPosition (h, cr);
+	}
+      break;
+
+    /* ESC [ n1 'C'
+	 Move the cursor right by n1 characters. */
+    case MAKEWORD ('[', 'C'):
+      if (esc_head == esc_term)
+	n1 = 1;
+      else
+	{
+	  n1 = strtol (esc_head, &eptr, 10);
+	  if (eptr != esc_term)
+	    break;
+	}
+
+      if (GetConsoleScreenBufferInfo (h, &sb))
+	{
+	  cr = sb.dwCursorPosition;
+	  /* Stop at the rightmost boundary. */
+	  if (sb.dwSize.X - cr.X > n1)
+	    cr.X += n1;
+	  else
+	    cr.X = sb.dwSize.X;
+	  SetConsoleCursorPosition (h, cr);
+	}
+      break;
+
+    /* ESC [ n1 'D'
+	 Move the cursor left by n1 characters. */
+    case MAKEWORD ('[', 'D'):
+      if (esc_head == esc_term)
+	n1 = 1;
+      else
+	{
+	  n1 = strtol (esc_head, &eptr, 10);
+	  if (eptr != esc_term)
+	    break;
+	}
+
+      if (GetConsoleScreenBufferInfo (h, &sb))
+	{
+	  cr = sb.dwCursorPosition;
+	  /* Stop at the leftmost boundary. */
+	  if (cr.X > n1)
+	    cr.X -= n1;
+	  else
+	    cr.X = 0;
+	  SetConsoleCursorPosition (h, cr);
+	}
+      break;
+
+    /* ESC [ n1 'E'
+	 Move the cursor to the beginning of the n1-th line downwards. */
+    case MAKEWORD ('[', 'E'):
+      if (esc_head == esc_term)
+	n1 = 1;
+      else
+	{
+	  n1 = strtol (esc_head, &eptr, 10);
+	  if (eptr != esc_term)
+	    break;
+	}
+
+      if (GetConsoleScreenBufferInfo (h, &sb))
+	{
+	  cr = sb.dwCursorPosition;
+	  cr.X = 0;
+	  /* Stop at the bottommost boundary. */
+	  if (sb.dwSize.Y - cr.Y > n1)
+	    cr.Y += n1;
+	  else
+	    cr.Y = sb.dwSize.Y;
+	  SetConsoleCursorPosition (h, cr);
+	}
+      break;
+
+    /* ESC [ n1 'F'
+	 Move the cursor to the beginning of the n1-th line upwards. */
+    case MAKEWORD ('[', 'F'):
+      if (esc_head == esc_term)
+	n1 = 1;
+      else
+	{
+	  n1 = strtol (esc_head, &eptr, 10);
+	  if (eptr != esc_term)
+	    break;
+	}
+
+      if (GetConsoleScreenBufferInfo (h, &sb))
+	{
+	  cr = sb.dwCursorPosition;
+	  cr.X = 0;
+	  /* Stop at the topmost boundary. */
+	  if (cr.Y > n1)
+	    cr.Y -= n1;
+	  else
+	    cr.Y = 0;
+	  SetConsoleCursorPosition (h, cr);
+	}
+      break;
+
+    /* ESC [ n1 'G'
+	 Move the cursor to the (1-based) n1-th column. */
+    case MAKEWORD ('[', 'G'):
+      if (esc_head == esc_term)
+	n1 = 1;
+      else
+	{
+	  n1 = strtol (esc_head, &eptr, 10);
+	  if (eptr != esc_term)
+	    break;
+	}
+
+      if (GetConsoleScreenBufferInfo (h, &sb))
+	{
+	  cr = sb.dwCursorPosition;
+	  n1 -= 1;
+	  /* Stop at the leftmost or rightmost boundary. */
+	  if (n1 < 0)
+	    cr.X = 0;
+	  else if (n1 > sb.dwSize.X)
+	    cr.X = sb.dwSize.X;
+	  else
+	    cr.X = n1;
+	  SetConsoleCursorPosition (h, cr);
+	}
+      break;
+
+    /* ESC [ n1 ';' n2 'H'
+       ESC [ n1 ';' n2 'f'
+	 Move the cursor to the (1-based) n1-th row and
+	 (also 1-based) n2-th column. */
+    case MAKEWORD ('[', 'H'):
+    case MAKEWORD ('[', 'f'):
+      if (esc_head == esc_term)
+	{
+	  /* Both parameters are omitted and set to 1 by default. */
+	  n1 = 1;
+	  n2 = 1;
+	}
+      else if (!(delim = (char *)memchr (esc_head, ';',
+					 esc_term - esc_head)))
+	{
+	  /* Only the first parameter is given. The second one is
+	     set to 1 by default. */
+	  n1 = strtol (esc_head, &eptr, 10);
+	  if (eptr != esc_term)
+	    break;
+	  n2 = 1;
+	}
+      else
+	{
+	  /* Both parameters are given. The first one shall be
+	     terminated by the semicolon. */
+	  n1 = strtol (esc_head, &eptr, 10);
+	  if (eptr != delim)
+	    break;
+	  n2 = strtol (delim + 1, &eptr, 10);
+	  if (eptr != esc_term)
+	    break;
+	}
+
+      if (GetConsoleScreenBufferInfo (h, &sb))
+	{
+	  cr = sb.dwCursorPosition;
+	  n1 -= 1;
+	  n2 -= 1;
+	  /* The cursor position shall be relative to the view coord of
+	     the console window, which is usually smaller than the actual
+	     buffer. FWIW, the 'appropriate' solution will be shrinking
+	     the buffer to match the size of the console window,
+	     destroying scrollback in the process. */
+	  n1 += sb.srWindow.Top;
+	  n2 += sb.srWindow.Left;
+	  /* Stop at the topmost or bottommost boundary. */
+	  if (n1 < 0)
+	    cr.Y = 0;
+	  else if (n1 > sb.dwSize.Y)
+	    cr.Y = sb.dwSize.Y;
+	  else
+	    cr.Y = n1;
+	  /* Stop at the leftmost or rightmost boundary. */
+	  if (n2 < 0)
+	    cr.X = 0;
+	  else if (n2 > sb.dwSize.X)
+	    cr.X = sb.dwSize.X;
+	  else
+	    cr.X = n2;
+	  SetConsoleCursorPosition (h, cr);
+	}
+      break;
+
+    /* ESC [ n1 'J'
+	 Erase display. */
+    case MAKEWORD ('[', 'J'):
+      if (esc_head == esc_term)
+	/* This is one of the very few codes whose parameters have
+	   a default value of zero. */
+	n1 = 0;
+      else
+	{
+	  n1 = strtol (esc_head, &eptr, 10);
+	  if (eptr != esc_term)
+	    break;
+	}
+
+      if (GetConsoleScreenBufferInfo (h, &sb))
+	{
+	  /* The cursor is not necessarily in the console window, which
+	     makes the behavior of this code harder to define. */
+	  switch (n1)
+	    {
+	    case 0:
+	      /* If the cursor is in or above the window, erase from
+		 it to the bottom of the window; otherwise, do nothing. */
+	      cr = sb.dwCursorPosition;
+	      cnt = sb.dwSize.X - sb.dwCursorPosition.X;
+	      rows = sb.srWindow.Bottom - sb.dwCursorPosition.Y;
+	      break;
+	    case 1:
+	      /* If the cursor is in or under the window, erase from
+		 it to the top of the window; otherwise, do nothing. */
+	      cr.X = 0;
+	      cr.Y = sb.srWindow.Top;
+	      cnt = sb.dwCursorPosition.X + 1;
+	      rows = sb.dwCursorPosition.Y - sb.srWindow.Top;
+	      break;
+	    case 2:
+	      /* Erase the entire window. */
+	      cr.X = sb.srWindow.Left;
+	      cr.Y = sb.srWindow.Top;
+	      cnt = 0;
+	      rows = sb.srWindow.Bottom - sb.srWindow.Top + 1;
+	      break;
+	    default:
+	      /* Erase the entire buffer. */
+	      cr.X = 0;
+	      cr.Y = 0;
+	      cnt = 0;
+	      rows = sb.dwSize.Y;
+	      break;
+	    }
+	  if (rows < 0)
+	    break;
+	  cnt += rows * sb.dwSize.X;
+	  FillConsoleOutputCharacterW (h, L' ', cnt, cr, &step);
+	  FillConsoleOutputAttribute (h, sb.wAttributes, cnt, cr, &step);
+	}
+      break;
+
+    /* ESC [ n1 'K'
+	 Erase line. */
+    case MAKEWORD ('[', 'K'):
+      if (esc_head == esc_term)
+	/* This is one of the very few codes whose parameters have
+	   a default value of zero. */
+	n1 = 0;
+      else
+	{
+	  n1 = strtol (esc_head, &eptr, 10);
+	  if (eptr != esc_term)
+	    break;
+	}
+
+      if (GetConsoleScreenBufferInfo (h, &sb))
+	{
+	  switch (n1)
+	    {
+	    case 0:
+	      /* Erase from the cursor to the end. */
+	      cr = sb.dwCursorPosition;
+	      cnt = sb.dwSize.X - sb.dwCursorPosition.X;
+	      break;
+	    case 1:
+	      /* Erase from the cursor to the beginning. */
+	      cr = sb.dwCursorPosition;
+	      cr.X = 0;
+	      cnt = sb.dwCursorPosition.X + 1;
+	      break;
+	    default:
+	      /* Erase the entire line. */
+	      cr = sb.dwCursorPosition;
+	      cr.X = 0;
+	      cnt = sb.dwSize.X;
+	      break;
+	    }
+	  FillConsoleOutputCharacterW (h, L' ', cnt, cr, &step);
+	  FillConsoleOutputAttribute (h, sb.wAttributes, cnt, cr, &step);
+	}
+      break;
+
+    /* ESC [ n1 ';' n2 'm'
+	 Set SGR parameters. Zero or more parameters will follow. */
+    case MAKEWORD ('[', 'm'):
+      attrib_add = 0;
+      attrib_rm = 0;
+      if (esc_head == esc_term)
+	{
+	  /* When no parameter is given, reset the console. */
+	  attrib_add |= (FOREGROUND_RED | FOREGROUND_GREEN
+			 | FOREGROUND_BLUE);
+	  attrib_rm = -1; /* Removes everything. */
+	  goto sgr_set_it;
+	}
+      param = esc_head;
+      do
+	{
+	  /* Parse a parameter. */
+	  n1 = strtol (param, &eptr, 10);
+	  if (*eptr != ';' && eptr != esc_term)
+	    goto sgr_set_it;
+
+	  switch (n1)
+	    {
+	    case 0:
+	      /* Reset */
+	      attrib_add |= (FOREGROUND_RED | FOREGROUND_GREEN
+			     | FOREGROUND_BLUE);
+	      attrib_rm = -1; /* Removes everything. */
+	      break;
+	    case 1:
+	      /* Bold */
+	      attrib_add |= FOREGROUND_INTENSITY;
+	      break;
+	    case 4:
+	      /* Underline */
+	      attrib_add |= COMMON_LVB_UNDERSCORE;
+	      break;
+	    case 5:
+	      /* Blink */
+	      /* XXX: It is not BLINKING at all! */
+	      attrib_add |= BACKGROUND_INTENSITY;
+	      break;
+	    case 7:
+	      /* Reverse */
+	      attrib_add |= COMMON_LVB_REVERSE_VIDEO;
+	      break;
+	    case 22:
+	      /* No bold */
+	      attrib_add &= ~FOREGROUND_INTENSITY;
+	      attrib_rm |= FOREGROUND_INTENSITY;
+	      break;
+	    case 24:
+	      /* No underline */
+	      attrib_add &= ~COMMON_LVB_UNDERSCORE;
+	      attrib_rm |= COMMON_LVB_UNDERSCORE;
+	      break;
+	    case 25:
+	      /* No blink */
+	      /* XXX: It is not BLINKING at all! */
+	      attrib_add &= ~BACKGROUND_INTENSITY;
+	      attrib_rm |= BACKGROUND_INTENSITY;
+	      break;
+	    case 27:
+	      /* No reverse */
+	      attrib_add &= ~COMMON_LVB_REVERSE_VIDEO;
+	      attrib_rm |= COMMON_LVB_REVERSE_VIDEO;
+	      break;
+	    case 30:
+	    case 31:
+	    case 32:
+	    case 33:
+	    case 34:
+	    case 35:
+	    case 36:
+	    case 37:
+	      /* Foreground color */
+	      attrib_add &= ~(FOREGROUND_RED | FOREGROUND_GREEN
+			      | FOREGROUND_BLUE);
+	      n1 -= 30;
+	      if (n1 & 1)
+		attrib_add |= FOREGROUND_RED;
+	      if (n1 & 2)
+		attrib_add |= FOREGROUND_GREEN;
+	      if (n1 & 4)
+		attrib_add |= FOREGROUND_BLUE;
+	      attrib_rm |= (FOREGROUND_RED | FOREGROUND_GREEN
+			    | FOREGROUND_BLUE);
+	      break;
+	    case 38:
+	      /* Reserved for extended foreground color.
+		 Don't know how to handle parameters remaining.
+		 Bail out. */
+	      goto sgr_set_it;
+	    case 39:
+	      /* Reset foreground color */
+	      /* Set to grey. */
+	      attrib_add |= (FOREGROUND_RED | FOREGROUND_GREEN
+			     | FOREGROUND_BLUE);
+	      attrib_rm |= (FOREGROUND_RED | FOREGROUND_GREEN
+			    | FOREGROUND_BLUE);
+	      break;
+	    case 40:
+	    case 41:
+	    case 42:
+	    case 43:
+	    case 44:
+	    case 45:
+	    case 46:
+	    case 47:
+	      /* Background color */
+	      attrib_add &= ~(BACKGROUND_RED | BACKGROUND_GREEN
+			      | BACKGROUND_BLUE);
+	      n1 -= 40;
+	      if (n1 & 1)
+		attrib_add |= BACKGROUND_RED;
+	      if (n1 & 2)
+		attrib_add |= BACKGROUND_GREEN;
+	      if (n1 & 4)
+		attrib_add |= BACKGROUND_BLUE;
+	      attrib_rm |= (BACKGROUND_RED | BACKGROUND_GREEN
+			    | BACKGROUND_BLUE);
+	      break;
+	    case 48:
+	      /* Reserved for extended background color.
+		 Don't know how to handle parameters remaining.
+		 Bail out. */
+	      goto sgr_set_it;
+	    case 49:
+	      /* Reset background color */
+	      /* Set to black. */
+	      attrib_add &= ~(BACKGROUND_RED | BACKGROUND_GREEN
+			      | BACKGROUND_BLUE);
+	      attrib_rm |= (BACKGROUND_RED | BACKGROUND_GREEN
+			    | BACKGROUND_BLUE);
+	      break;
+	    }
+
+	  /* Prepare the next parameter. */
+	  param = eptr + 1;
+	}
+      while (param != esc_term);
+
+sgr_set_it:
+      /* 0xFFFF removes everything. If it is not the case,
+	 care must be taken to preserve old attributes. */
+      if (attrib_rm != 0xFFFF && GetConsoleScreenBufferInfo (h, &sb))
+	{
+	  attrib_add |= sb.wAttributes & ~attrib_rm;
+	}
+      SetConsoleTextAttribute (h, attrib_add);
+      break;
+    }
+}
+
+int
+mingw_ansi_fputs (const char *str, FILE *fp)
+{
+  const char *read = str;
+  HANDLE h;
+  DWORD mode;
+  int esc_code, prefix_len;
+  const char *esc_head, *esc_term;
+
+  h = (HANDLE)_get_osfhandle (_fileno (fp));
+  if (h == INVALID_HANDLE_VALUE)
+    return EOF;
+
+  /* Don't mess up stdio functions with Windows APIs. */
+  fflush (fp);
+
+  if (GetConsoleMode (h, &mode))
+    /* If it is a console, translate ANSI escape codes as needed. */
+    for (;;)
+      {
+	if ((esc_code = find_esc_head (&prefix_len, &esc_head, read)) == 0)
+	  {
+	    /* Write all remaining characters, then exit. */
+	    write_all (h, read, strlen (read));
+	    break;
+	  }
+	if (find_esc_terminator (&esc_term, esc_head) == 0)
+	  /* Ignore incomplete escape sequences at the moment.
+	     FIXME: The escape state shall be cached for further calls
+		    to this function. */
+	  break;
+	write_all (h, read, esc_head - prefix_len - read);
+	eat_esc_sequence (h, esc_code, esc_head, esc_term);
+	read = esc_term + 1;
+      }
+  else
+    /* If it is not a console, write everything as-is. */
+    write_all (h, read, strlen (read));
+
+  _close ((intptr_t)h);
+  return 1;
+}
+
+#endif /* __MINGW32__ */
+
 static void pp_quoted_string (pretty_printer *, const char *, size_t = -1);
 
 /* Overwrite the given location/range within this text_info's rich_location.
@@ -140,7 +807,11 @@ void
 pp_write_text_to_stream (pretty_printer *pp)
 {
   const char *text = pp_formatted_text (pp);
+#ifdef __MINGW32__
+  mingw_ansi_fputs (text, pp_buffer (pp)->stream);
+#else
   fputs (text, pp_buffer (pp)->stream);
+#endif
   pp_clear_output_area (pp);
 }
 
diff --git a/gcc/symtab.c b/gcc/symtab.c
index 8009dc9e97f..909e11104bd 100644
--- a/gcc/symtab.c
+++ b/gcc/symtab.c
@@ -2179,7 +2179,7 @@ increase_alignment_1 (symtab_node *n, void *v)
 void
 symtab_node::increase_alignment (unsigned int align)
 {
-  gcc_assert (can_increase_alignment_p () && align < MAX_OFILE_ALIGNMENT);
+  gcc_assert (can_increase_alignment_p () && align <= MAX_OFILE_ALIGNMENT);
   ultimate_alias_target()->call_for_symbol_and_aliases (increase_alignment_1,
 						        (void *)(size_t) align,
 						        true);
diff --git a/gcc/system.h b/gcc/system.h
index 0cbf60a28d0..0859f41ef1e 100644
--- a/gcc/system.h
+++ b/gcc/system.h
@@ -701,6 +701,9 @@ extern int vsnprintf (char *, size_t, const char *, va_list);
 #ifndef HOST_BIT_BUCKET
 #define HOST_BIT_BUCKET "/dev/null"
 #endif
+#ifndef HOST_BIT_BUCKET2
+#define HOST_BIT_BUCKET2 ""
+#endif
 
 #ifndef offsetof
 #define offsetof(TYPE, MEMBER)	((size_t) &((TYPE *) 0)->MEMBER)
diff --git a/gcc/toplev.c b/gcc/toplev.c
index 6f0bc9fe736..b2e03a4caa5 100644
--- a/gcc/toplev.c
+++ b/gcc/toplev.c
@@ -96,6 +96,14 @@ along with GCC; see the file COPYING3.  If not see
 #include <isl/version.h>
 #endif
 
+#ifdef __MINGW32__
+#undef HOST_BIT_BUCKET
+#undef HOST_BIT_BUCKET2
+/* This is the name of the null device on windows.  */
+#define HOST_BIT_BUCKET "nul"
+#define HOST_BIT_BUCKET2 "/dev/null"
+#endif
+
 static void general_init (const char *, bool);
 static void do_compile ();
 static void process_options (void);
@@ -884,7 +892,8 @@ init_asm_output (const char *name)
       if (!strcmp (asm_file_name, "-"))
 	asm_out_file = stdout;
       else if (!canonical_filename_eq (asm_file_name, name)
-	       || !strcmp (asm_file_name, HOST_BIT_BUCKET))
+	       || !strcmp (asm_file_name, HOST_BIT_BUCKET)
+	       || !strcmp (asm_file_name, HOST_BIT_BUCKET2))
 	asm_out_file = fopen (asm_file_name, "w");
       else
 	/* Use UNKOWN_LOCATION to prevent gcc from printing the first
diff --git a/gcc/varasm.c b/gcc/varasm.c
index 1b9030029ac..3a278d67e34 100644
--- a/gcc/varasm.c
+++ b/gcc/varasm.c
@@ -1169,7 +1169,7 @@ get_variable_section (tree decl, bool prefer_noswitch_p)
       && !(prefer_noswitch_p && targetm.have_switchable_bss_sections)
       && bss_initializer_p (decl))
     {
-      if (!TREE_PUBLIC (decl)
+      if (!TREE_PUBLIC (decl) && !flag_no_common
 	  && !((flag_sanitize & SANITIZE_ADDRESS)
 	       && asan_protect_global (decl)))
 	return lcomm_section;
diff --git a/gnattools/Makefile.in b/gnattools/Makefile.in
index b0860eaf96d..ebe2aaf88c9 100644
--- a/gnattools/Makefile.in
+++ b/gnattools/Makefile.in
@@ -197,7 +197,7 @@ gnattools-native: $(GCC_DIR)/stamp-tools $(GCC_DIR)/stamp-gnatlib-rts
 	  ../../gnatmake$(exeext) ../../gnatlink$(exeext)
 	# gnattools2
 	$(MAKE) -C $(GCC_DIR)/ada/tools -f ../Makefile \
-	  $(TOOLS_FLAGS_TO_PASS_NATIVE) common-tools
+	  $(TOOLS_FLAGS_TO_PASS_NATIVE) common-tools $(EXTRA_GNATTOOLS)
 
 # gnatmake/link can be built with recent gnatmake/link if they are available.
 # This is especially convenient for building cross tools or for rebuilding
@@ -209,7 +209,7 @@ regnattools: $(GCC_DIR)/stamp-gnatlib-rts
 	  gnatmake-re gnatlink-re
 	# gnattools2
 	$(MAKE) -C $(GCC_DIR)/ada/tools -f ../Makefile \
-	  $(TOOLS_FLAGS_TO_PASS_NATIVE) common-tools
+	  $(TOOLS_FLAGS_TO_PASS_NATIVE) common-tools $(EXTRA_GNATTOOLS)
 
 gnattools-cross: $(GCC_DIR)/stamp-tools
 	# gnattools1-re
diff --git a/intl/Makefile.in b/intl/Makefile.in
index 3dd0b7fe8fd..e2b86666ffe 100644
--- a/intl/Makefile.in
+++ b/intl/Makefile.in
@@ -53,6 +53,7 @@ DEFS = -DHAVE_CONFIG_H
 COMPILE = $(CC) -c $(CPPFLAGS) $(CFLAGS) $(DEFS) $(DEFS-$@) $(INCLUDES)
 
 HEADERS = \
+  canonicalize.h \
   gmo.h \
   gettextP.h \
   hash-string.h \
@@ -61,6 +62,7 @@ HEADERS = \
   eval-plural.h \
   localcharset.h \
   relocatable.h \
+  relocatex.h \
   libgnuintl.h
 SOURCES = \
   bindtextdom.c \
@@ -81,6 +83,8 @@ SOURCES = \
   plural-exp.c \
   localcharset.c \
   relocatable.c \
+  relocatex.c \
+  canonicalize.c \
   localename.c \
   log.c \
   osdep.c \
@@ -104,6 +108,8 @@ OBJECTS = \
   plural-exp.o \
   localcharset.o \
   relocatable.o \
+  relocatex.o \
+  canonicalize.o \
   localename.o \
   log.o \
   osdep.o \
@@ -158,7 +164,7 @@ install-info install-dvi install-ps install-pdf install-html:
 $(OBJECTS): config.h libintl.h
 bindtextdom.o dcgettext.o dcigettext.o dcngettext.o dgettext.o \
 dngettext.o finddomain.o gettext.o intl-compat.o loadmsgcat.o \
-localealias.o ngettext.o textdomain.o: gettextP.h gmo.h loadinfo.h
+localealias.o ngettext.o textdomain.o: gettextP.h gmo.h loadinfo.h relocatex.h
 dcigettext.o loadmsgcat.o: hash-string.h
 explodename.o l10nflist.o: loadinfo.h
 dcigettext.o loadmsgcat.o plural.o plural-exp.o: plural-exp.h
diff --git a/intl/bindtextdom.c b/intl/bindtextdom.c
index 6faac5756a3..9b81fc45db0 100644
--- a/intl/bindtextdom.c
+++ b/intl/bindtextdom.c
@@ -23,6 +23,7 @@
 #include <stddef.h>
 #include <stdlib.h>
 #include <string.h>
+#include <unistd.h>
 
 #ifdef _LIBC
 # include <libintl.h>
@@ -91,6 +92,12 @@ static void set_binding_values PARAMS ((const char *domainname,
 					const char **dirnamep,
 					const char **codesetp));
 
+#if ENABLE_RELOCATABLE
+# include "relocatex.h"
+#else
+# define relocatex(installdir, pathname) (pathname)
+#endif
+
 /* Specifies the directory name *DIRNAMEP and the output codeset *CODESETP
    to be used for the DOMAINNAME message catalog.
    If *DIRNAMEP or *CODESETP is NULL, the corresponding attribute is not
@@ -352,8 +359,23 @@ BINDTEXTDOMAIN (domainname, dirname)
      const char *domainname;
      const char *dirname;
 {
+/*
   set_binding_values (domainname, &dirname, NULL);
   return (char *) dirname;
+*/
+  if (!access (dirname, R_OK)) {
+	  set_binding_values (domainname, &dirname, NULL);
+	  return (char *) dirname;
+  } else {
+	  char *locale_dirname, *installdir = strdup (dirname), *s;
+	  if ((s = strrchr (installdir, '/'))) *s = '\0';
+	  if ((s = strrchr (installdir, '/'))) *s = '\0';
+	  locale_dirname = relocatex (installdir, dirname);
+	  set_binding_values (domainname, (const char **) &locale_dirname, NULL);
+	  if (installdir)
+	  	free (installdir);
+	  return (char *) locale_dirname;
+  }	  
 }
 
 /* Specify the character encoding in which the messages from the
diff --git a/intl/canonicalize.c b/intl/canonicalize.c
new file mode 100644
index 00000000000..5217f304540
--- /dev/null
+++ b/intl/canonicalize.c
@@ -0,0 +1,343 @@
+/* Return the canonical absolute name of a given file.
+   Copyright (C) 1996, 1997, 1998, 1999, 2000 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, write to the Free
+   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+   02111-1307 USA.  */
+
+#include <stdlib.h>
+#include <string.h>
+#include <unistd.h>
+#include <limits.h>
+#include <sys/param.h>
+#include <sys/stat.h>
+#include <errno.h>
+#include <stddef.h>
+#include <malloc.h>
+#ifdef __WIN32__
+# include <stdio.h>
+# include <windows.h>
+//# include <gw32.h>
+#endif /* __WIN32__ */
+#include "canonicalize.h"
+
+#ifndef MAXSYMLINKS
+# define MAXSYMLINKS 20
+#endif
+
+#ifndef __set_errno
+# define __set_errno(Val) errno = (Val)
+#endif
+
+#  ifdef VMS
+    /* We want the directory in Unix syntax, not in VMS syntax.  */
+#   define __getcwd(buf, max) getcwd (buf, max, 0)
+#  else
+#   define __getcwd getcwd
+#  endif
+
+#define weak_alias(local, symbol)
+
+#if defined _WIN32 || defined __WIN32__ || defined __CYGWIN__ || defined __EMX__ || defined __DJGPP__
+  /* Win32, Cygwin, OS/2, DOS */
+# define ISDIRSEP(C) ((C) == '/' || (C) == '\\')
+#else
+  /* Unix */
+# define ISDIRSEP(C) ((C) == '/')
+#endif
+
+#ifdef __WIN32__
+char *win2unixpath (char *FileName)
+{
+	char *s = FileName;
+	while (*s) {
+		if (*s == '\\')
+			*s = '/';
+		*s++;
+	}
+	return FileName;
+}
+#endif
+
+/* Return the canonical absolute name of file NAME.  A canonical name
+   does not contain any `.', `..' components nor any repeated path
+   separators ('/') or symlinks.  All path components must exist.  If
+   RESOLVED is null, the result is malloc'd; otherwise, if the
+   canonical name is PATH_MAX chars or more, returns null with `errno'
+   set to ENAMETOOLONG; if the name fits in fewer than PATH_MAX chars,
+   returns the name in RESOLVED.  If the name cannot be resolved and
+   RESOLVED is non-NULL, it contains the path of the first component
+   that cannot be resolved.  If the path can be resolved, RESOLVED
+   holds the same value as the value returned.
+   RESOLVED must be at least PATH_MAX long */
+
+static char *
+canonicalize (const char *name, char *resolved)
+{
+  char *rpath, *dest, *extra_buf = NULL;
+  const char *start, *end, *rpath_limit;
+  long int path_max;
+  int num_links = 0, old_errno;
+
+  if (name == NULL)
+    {
+      /* As per Single Unix Specification V2 we must return an error if
+	 either parameter is a null pointer.  We extend this to allow
+	 the RESOLVED parameter to be NULL in case the we are expected to
+	 allocate the room for the return value.  */
+      __set_errno (EINVAL);
+      return NULL;
+    }
+
+  if (name[0] == '\0')
+    {
+      /* As per Single Unix Specification V2 we must return an error if
+	 the name argument points to an empty string.  */
+      __set_errno (ENOENT);
+      return NULL;
+    }
+#ifdef __WIN32__
+	{
+	char *lpFilePart;
+	int len;
+//  fprintf(stderr, "name: %s\n", name);
+	rpath = resolved ? __builtin_alloca (MAX_PATH) : malloc (MAX_PATH);
+//	unix2winpath (name);
+//  fprintf(stderr, "name: %s\n", name);
+len = GetFullPathName(name, MAX_PATH, rpath, &lpFilePart);
+/* GetFullPathName returns bogus paths for *nix-style paths, like
+ * /foo/bar - it just prepends current drive to them. Keep them
+ * intact (they need to be for relocation to work!).
+ */
+if (name[0] == '/') {
+  strncpy (rpath, name, MAX_PATH - 1);
+  rpath[MAX_PATH - 1] = '\0';
+  len = strlen (rpath);
+}
+//  fprintf(stderr, "rpath: %s\n", rpath);
+	if (len == 0) {
+		//set_werrno;
+		return NULL;
+	}
+	if (len > MAX_PATH)	{
+		if (resolved)
+			__set_errno(ENAMETOOLONG);
+		else {
+			rpath = realloc(rpath, len + 2);
+			GetFullPathName(name, len, rpath, &lpFilePart);
+//  fprintf(stderr, "rpath: %s\n", rpath);
+		}
+	}
+//	if ( ISDIRSEP(name[strlen(name)]) && !ISDIRSEP(rpath[len]) ) {
+//		rpath[len] = '\\';
+//		rpath[len + 1] = 0;
+//	}
+	old_errno = errno;
+	//if (!access (rpath, D_OK) && !ISDIRSEP(rpath[len - 1]) ){
+	if (!access (rpath, R_OK) && !ISDIRSEP(rpath[len - 1]) ){
+		rpath[len] = '\\';
+		rpath[len + 1] = 0;
+	}
+	errno = old_errno;
+	win2unixpath (rpath);
+//  fprintf(stderr, "rpath: %s\n", rpath);
+	return resolved ? strcpy(resolved, rpath) : rpath ;
+	}
+#else /* __WIN32__ */
+
+#ifdef PATH_MAX
+  path_max = PATH_MAX;
+#else
+  path_max = pathconf (name, _PC_PATH_MAX);
+  if (path_max <= 0)
+    path_max = 1024;
+#endif
+
+  rpath = resolved ? __builtin_alloca (path_max) : malloc (path_max);
+  rpath_limit = rpath + path_max;
+
+  if (name[0] != '/')
+    {
+      if (!__getcwd (rpath, path_max))
+	{
+	  rpath[0] = '\0';
+	  goto error;
+	}
+      dest = strchr (rpath, '\0');
+    }
+  else
+    {
+      rpath[0] = '/';
+      dest = rpath + 1;
+    }
+
+  for (start = end = name; *start; start = end)
+    {
+#ifdef _LIBC
+      struct stat64 st;
+#else
+      struct stat st;
+#endif
+      int n;
+
+      /* Skip sequence of multiple path-separators.  */
+      while (*start == '/')
+	++start;
+
+      /* Find end of path component.  */
+      for (end = start; *end && *end != '/'; ++end)
+	/* Nothing.  */;
+
+      if (end - start == 0)
+	break;
+      else if (end - start == 1 && start[0] == '.')
+	/* nothing */;
+      else if (end - start == 2 && start[0] == '.' && start[1] == '.')
+	{
+	  /* Back up to previous component, ignore if at root already.  */
+	  if (dest > rpath + 1)
+	    while ((--dest)[-1] != '/');
+	}
+      else
+	{
+	  size_t new_size;
+
+	  if (dest[-1] != '/')
+	    *dest++ = '/';
+
+	  if (dest + (end - start) >= rpath_limit)
+	    {
+	      ptrdiff_t dest_offset = dest - rpath;
+
+	      if (resolved)
+		{
+		  __set_errno (ENAMETOOLONG);
+		  if (dest > rpath + 1)
+		    dest--;
+		  *dest = '\0';
+		  goto error;
+		}
+	      new_size = rpath_limit - rpath;
+	      if (end - start + 1 > path_max)
+		new_size += end - start + 1;
+	      else
+		new_size += path_max;
+	      rpath = realloc (rpath, new_size);
+	      rpath_limit = rpath + new_size;
+	      if (rpath == NULL)
+		return NULL;
+
+	      dest = rpath + dest_offset;
+	    }
+
+#ifdef _LIBC
+	  dest = __mempcpy (dest, start, end - start);
+#else
+	  memcpy (dest, start, end - start);
+	  dest += end - start;
+#endif
+	  *dest = '\0';
+
+#ifdef _LIBC
+	  if (__lxstat64 (_STAT_VER, rpath, &st) < 0)
+#else
+	  if (lstat (rpath, &st) < 0)
+#endif
+	    goto error;
+
+#if HAVE_READLINK
+	  if (S_ISLNK (st.st_mode))
+	    {
+	      char *buf = __builtin_alloca (path_max);
+	      size_t len;
+
+	      if (++num_links > MAXSYMLINKS)
+		{
+		  __set_errno (ELOOP);
+		  goto error;
+		}
+
+	      n = __readlink (rpath, buf, path_max);
+	      if (n < 0)
+		goto error;
+	      buf[n] = '\0';
+
+	      if (!extra_buf)
+		extra_buf = __builtin_alloca (path_max);
+
+	      len = strlen (end);
+	      if ((long int) (n + len) >= path_max)
+		{
+		  __set_errno (ENAMETOOLONG);
+		  goto error;
+		}
+
+	      /* Careful here, end may be a pointer into extra_buf... */
+	      memmove (&extra_buf[n], end, len + 1);
+	      name = end = memcpy (extra_buf, buf, n);
+
+	      if (buf[0] == '/')
+		dest = rpath + 1;	/* It's an absolute symlink */
+	      else
+		/* Back up to previous component, ignore if at root already: */
+		if (dest > rpath + 1)
+		  while ((--dest)[-1] != '/');
+	    }
+#endif
+	}
+    }
+  if (dest > rpath + 1 && dest[-1] == '/')
+    --dest;
+  *dest = '\0';
+
+  return resolved ? memcpy (resolved, rpath, dest - rpath + 1) : rpath;
+
+error:
+  if (resolved)
+    strcpy (resolved, rpath);
+  else
+    free (rpath);
+  return NULL;
+
+#endif /* __WIN32__ */
+}
+
+
+char *
+__realpath (const char *name, char *resolved)
+{
+  if (resolved == NULL)
+    {
+      __set_errno (EINVAL);
+      return NULL;
+    }
+
+  return canonicalize (name, resolved);
+}
+weak_alias (__realpath, realpath)
+
+
+char *
+__canonicalize_file_name (const char *name)
+{
+  return canonicalize (name, NULL);
+}
+weak_alias (__canonicalize_file_name, canonicalize_file_name)
+
+char *
+canonicalize_file_name (const char *name)
+{
+  return canonicalize (name, NULL);
+}
diff --git a/intl/canonicalize.h b/intl/canonicalize.h
new file mode 100644
index 00000000000..ea707bf1bdf
--- /dev/null
+++ b/intl/canonicalize.h
@@ -0,0 +1,18 @@
+#ifndef __CANONICALIZE_H__
+#define __CANONICALIZE_H__ 1
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+char *canonicalize_file_name (const char *name);
+
+#ifdef __WIN32__
+char *win2unixpath (char *path);
+#endif
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif /* __CANONICALIZE_H__ */
diff --git a/intl/configure b/intl/configure
index d7af03fc71d..1cac03f24c1 100755
--- a/intl/configure
+++ b/intl/configure
@@ -4891,7 +4891,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by GCC" >&5
 $as_echo_n "checking for ld used by GCC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
diff --git a/intl/relocatex.c b/intl/relocatex.c
new file mode 100644
index 00000000000..a2b7438fb43
--- /dev/null
+++ b/intl/relocatex.c
@@ -0,0 +1,284 @@
+/* Provide relocatable packages.
+   Copyright (C) 2003 Free Software Foundation, Inc.
+   Written by Bruno Haible <bruno@clisp.org>, 2003.
+
+   This program is free software; you can redistribute it and/or modify it
+   under the terms of the GNU Library General Public License as published
+   by the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Library General Public License for more details.
+
+   You should have received a copy of the GNU Library General Public
+   License along with this program; if not, write to the Free Software
+   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
+   USA.  */
+
+
+/* Specification.  */
+#include <errno.h>
+#define _GNU_SOURCE
+#include <stdlib.h>
+#include <string.h>
+#include <stdio.h>
+#include <unistd.h>
+/* #include <path.h> */
+#include "relocatex.h"
+#include "canonicalize.h"
+/* #include <gw32.h> */
+
+
+#if defined _WIN32 || defined __WIN32__
+# define WIN32_LEAN_AND_MEAN
+# include <windows.h>
+//# define __GW32__
+//# include <winx/errnox.h>
+#endif
+#define set_werrno
+
+#if defined _WIN32 || defined __WIN32__ || defined __CYGWIN__ || defined __EMX__ || defined __DJGPP__
+  /* Win32, Cygwin, OS/2, DOS */
+# define ISDIRSEP(C) ((C) == '/' || (C) == '\\')
+#else
+  /* Unix */
+# define ISDIRSEP(C) ((C) == '/')
+#endif
+
+/* Original installation prefix.  */
+static char *orig_prefix = NULL;
+static size_t orig_prefix_len = 0;
+/* Current installation prefix.  */
+static char *curr_prefix = NULL;
+static size_t curr_prefix_len = 0;
+/* These prefixes do not end in a slash.  Anything that will be concatenated
+   to them must start with a slash.  */
+
+
+int win2posixpath (const char *winpath, char *posixpath)
+{
+	strcpy (posixpath, winpath);
+	win2unixpath (posixpath);
+	return 0;
+}
+
+
+/* Sets the original and the current installation prefix of this module.
+   Relocation simply replaces a pathname starting with the original prefix
+   by the corresponding pathname with the current prefix instead.  Both
+   prefixes should be directory names without trailing slash (i.e. use ""
+   instead of "/").  */
+static char *
+set_orig_prefix (const char *orig_prefix_arg)
+{
+      char *memory;
+//	  printf ("orig_prefix_arg: %s\n", orig_prefix_arg);
+	  if (!orig_prefix_arg) {
+		orig_prefix = NULL;
+		orig_prefix_len = 0;
+		return NULL;
+	  }
+	  if (orig_prefix)
+		  free (orig_prefix);
+
+	  memory = canonicalize_file_name (orig_prefix_arg);
+//	  printf ("memory: %s\n", memory);
+//	  memory = (char *) malloc (orig_prefix_len + 1);
+      if (!memory) {
+	  	set_werrno;
+		orig_prefix = NULL;
+		orig_prefix_len = 0;
+		return NULL;
+      }
+	  win2unixpath (memory);
+//	  win2posixpath (orig_prefix_arg, memory);
+	  orig_prefix = memory;
+	  orig_prefix_len = strlen (orig_prefix);
+//	  printf ("orig_prefix: %s\n", orig_prefix);
+	  if (ISDIRSEP (orig_prefix[orig_prefix_len-1])) {
+	  	orig_prefix[orig_prefix_len-1] = '\0';
+	  	orig_prefix_len--;
+	  }
+//	  printf ("orig_prefix: %s\n", orig_prefix);
+//	  printf ("orig_prefix_len: %d\n", orig_prefix_len);
+	  return orig_prefix;
+}
+
+#if defined __WIN32__
+static char *
+set_current_prefix (const char *ModuleName)
+{
+	LPTSTR curr_prefix_arg, q, lpFilePart;
+	DWORD len;
+	int nDIRSEP = 0;
+
+	if (curr_prefix)
+		free (curr_prefix);
+	curr_prefix_arg = malloc (MAX_PATH * sizeof (TCHAR));
+	if (!curr_prefix_arg) {
+		set_werrno;
+		curr_prefix = NULL;
+		curr_prefix_len = 0;
+		return NULL;
+	}		
+	if (ModuleName) {
+//		printf ("ModuleName:  %s\n", ModuleName);
+		len = SearchPath (NULL, ModuleName, ".DLL", MAX_PATH, curr_prefix_arg, &lpFilePart);
+		if (len) {
+//			printf ("ModulePath:  %s\n", curr_prefix_arg);
+//			printf ("FilePart:    %s\n", lpFilePart);
+		}
+	}
+	if (!ModuleName || !len) {
+		len = GetModuleFileName (NULL, curr_prefix_arg, MAX_PATH);
+		if (!len) {
+			set_werrno;
+			curr_prefix = NULL;
+			curr_prefix_len = 0;
+			return NULL;
+		}
+	}
+//		strncpy (curr_prefix_arg, ModuleName, MAX_PATH);
+//	  printf ("curr_prefix_arg: %s\n", curr_prefix_arg);
+	win2posixpath (curr_prefix_arg, curr_prefix_arg);
+	curr_prefix = curr_prefix_arg;
+	q = curr_prefix_arg + len - 1;
+	/* strip name of executable and its directory */
+	while (!ISDIRSEP (*q) && (q > curr_prefix_arg) && nDIRSEP < 2) {
+		q--;
+		if (ISDIRSEP (*q)) {
+			*q = '\0';
+			nDIRSEP++;
+		}
+	}
+	curr_prefix_len = q - curr_prefix_arg; 
+//	printf ("curr_prefix: %s\n", curr_prefix);
+//	printf ("curr_prefix_len: %d\n", curr_prefix_len);
+	return curr_prefix;
+}
+
+char *getshortpath (const char *longpath)
+{
+	char *shortpath = NULL;
+	DWORD len, res;
+	
+//	printf ("longpath: %s\n", longpath);
+	len = GetShortPathName(longpath, shortpath, 0);
+//	printf ("len: %ld\n", len);
+	if (!len) {
+//		WinErr ("getshortpath: len = 0");
+		set_werrno;
+		return (char *) longpath;
+	}
+	shortpath = (char *) malloc (len + 1);
+	if (!shortpath) {
+//		WinErr ("getshortpath: malloc");
+		set_werrno;
+		return (char *) longpath;
+	}
+	res = GetShortPathName(longpath, shortpath, len);
+//	printf ("res: %ld\n", res);
+	if (!res) {
+//		WinErr ("getshortpath: res = 0");
+		free (shortpath);
+		set_werrno;
+		return (char *) longpath;
+	}
+//	printf ("shortpath: %s\n", shortpath);
+	return shortpath;
+}
+
+char *relocaten (const char *ModuleName, const char *path)
+{
+	char *relative_path, *relocated_path, *relocated_short_path;
+	int relative_path_len;
+	
+	if (!curr_prefix)
+		set_current_prefix (ModuleName);
+//	printf ("path:                 %s\n", path);
+//	printf ("orig_prefix:          %s\n", orig_prefix);
+//	printf ("curr_prefix:          %s\n", curr_prefix);
+//	if (strncmp (orig_prefix, path, orig_prefix_len))
+//	if (strcmp (orig_prefix, path))
+//		return (char *) path;
+	relative_path = (char *) path + orig_prefix_len;
+//	printf ("relative_path:        %s\n", relative_path);
+	relative_path_len = strlen (relative_path);
+	relocated_path = malloc (curr_prefix_len + relative_path_len + 1);
+	strcpy (relocated_path, curr_prefix);
+	strcat (relocated_path, relative_path);
+//	printf ("relocated_path:       %s\n", relocated_path);
+	relocated_short_path = getshortpath (relocated_path);
+//	printf ("relocated_short_path: %s\n", relocated_short_path);
+	if (relocated_short_path) {
+		if (relocated_short_path != relocated_path)
+			free (relocated_path);
+		return relocated_short_path;
+	} else
+		return relocated_path;
+}
+
+#else // __WIN32__
+char *relocaten (const char *ModuleName, const char *path)
+{
+	// dummy function for Unix/Linux
+	return (char *)path;
+}
+#endif
+
+char *relocaten2 (const char *ModuleName, const char *installdir, const char *path)
+{
+	set_orig_prefix (installdir);
+	return relocaten (ModuleName, path);
+}
+
+char *relocatenx (const char *ModuleName, const char *installdir, const char *path)
+{
+	char *p;
+
+	set_orig_prefix (installdir);
+	if (access (path, R_OK))
+		p = relocaten (ModuleName, path);
+	else
+		p = (char *) path;
+//	printf ("relocatenx: %s\n", p);
+	return p;
+}
+
+char *relocate2 (const char *installdir, const char *path)
+{
+	return relocaten2 (NULL, installdir, path);
+}
+
+char *relocatex (const char *installdir, const char *path)
+{
+	return relocatenx (NULL, installdir, path);
+}
+
+char *relocatepx (const char *cprefix, const char *installdir, const char *path)
+{
+	if (curr_prefix)
+		free (curr_prefix);
+	curr_prefix = strdup (cprefix);
+	return relocatex (installdir, path);
+}
+
+static char *get_orig_prefix (void)
+{
+	return orig_prefix;
+}
+
+static char *get_curr_prefix (void)
+{
+	return curr_prefix;
+}
+
+static char *set_curr_prefix (const char *ModuleName)
+{
+	if (curr_prefix)
+		free (curr_prefix);
+	set_current_prefix (ModuleName);
+	return curr_prefix;
+}
diff --git a/intl/relocatex.h b/intl/relocatex.h
new file mode 100644
index 00000000000..5cc7c5174a9
--- /dev/null
+++ b/intl/relocatex.h
@@ -0,0 +1,41 @@
+/* 
+   Copyright (C) 2006 Free Software Foundation, Inc.
+   This file is part of the GnuWin C Library.
+
+   The GnuWin C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GnuWin C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GnuWin32 C Library; if not, write to the Free
+   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+   02111-1307 USA.  */
+
+#ifndef __RELOCATE_H__
+#define __RELOCATE_H__ 1
+
+/* #include <libc-dll.h> */
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+char *relocaten (const char *ModuleName, const char *path);
+char *relocaten2 (const char *ModuleName, const char *installdir, const char *path);
+char *relocatenx (const char *ModuleName, const char *installdir, const char *path);
+char *relocate2 (const char *installdir, const char *path);
+char *relocatex (const char *installdir, const char *path);
+
+#ifdef __cplusplus
+}
+#endif
+
+//#endif /*  __GW32__ */
+
+#endif /* __RELOCATE_H__ */
diff --git a/libatomic/configure b/libatomic/configure
index 2ae9b8d40f3..45ceed7e6f8 100755
--- a/libatomic/configure
+++ b/libatomic/configure
@@ -5048,7 +5048,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -8849,7 +8849,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -9280,7 +9280,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -10181,14 +10181,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -10212,7 +10212,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -10843,7 +10843,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -11462,7 +11462,7 @@ CC="$lt_save_CC"
 
 
 case $host in
-  *-cygwin* | *-mingw*)
+  *-cygwin* | *-mingw* | *-msys*)
     # 'host' will be top-level target in the case of a target lib,
     # we must compare to with_cross_host to decide if this is a native
     # or cross-compiler and select where to install dlls appropriately.
@@ -14745,7 +14745,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
diff --git a/libbacktrace/configure b/libbacktrace/configure
index ee90bc6dea0..d42dba80634 100755
--- a/libbacktrace/configure
+++ b/libbacktrace/configure
@@ -5333,7 +5333,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -8865,7 +8865,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -9296,7 +9296,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -10197,14 +10197,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -10228,7 +10228,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -10859,7 +10859,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -12406,7 +12406,7 @@ fi
 # Check for the fcntl function.
 if test -n "${with_target_subdir}"; then
    case "${host}" in
-   *-*-mingw*) have_fcntl=no ;;
+   *-*-mingw* | *-*-msys*) have_fcntl=no ;;
    spu-*-*) have_fcntl=no ;;
    *) have_fcntl=yes ;;
    esac
diff --git a/libbacktrace/configure.ac b/libbacktrace/configure.ac
index f9cad214447..d5f1846754a 100644
--- a/libbacktrace/configure.ac
+++ b/libbacktrace/configure.ac
@@ -328,7 +328,7 @@ fi
 # Check for the fcntl function.
 if test -n "${with_target_subdir}"; then
    case "${host}" in
-   *-*-mingw*) have_fcntl=no ;;
+   *-*-mingw* | *-*-msys*) have_fcntl=no ;;
    spu-*-*) have_fcntl=no ;;
    *) have_fcntl=yes ;;
    esac
diff --git a/libcc1/configure b/libcc1/configure
index 962d34d9271..b16da7bed64 100755
--- a/libcc1/configure
+++ b/libcc1/configure
@@ -4747,7 +4747,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -8278,7 +8278,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -8709,7 +8709,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -9610,14 +9610,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -9641,7 +9641,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -10272,7 +10272,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -11552,7 +11552,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -11905,7 +11905,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,
         # as there is no search path for DLLs.
         hardcode_libdir_flag_spec_CXX='-L$libdir'
@@ -13678,14 +13678,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -13708,7 +13708,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
diff --git a/libcilkrts/configure b/libcilkrts/configure
index 503337dc4b4..844777631bc 100644
--- a/libcilkrts/configure
+++ b/libcilkrts/configure
@@ -6144,7 +6144,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -9675,7 +9675,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -10106,7 +10106,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -11007,14 +11007,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -11038,7 +11038,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -11669,7 +11669,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -12543,7 +12543,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -12896,7 +12896,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,
         # as there is no search path for DLLs.
         hardcode_libdir_flag_spec_CXX='-L$libdir'
@@ -14669,14 +14669,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -14699,7 +14699,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
diff --git a/libcpp/configure b/libcpp/configure
index 12c1907ed40..cb7b4b80f62 100755
--- a/libcpp/configure
+++ b/libcpp/configure
@@ -6531,7 +6531,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by GCC" >&5
 $as_echo_n "checking for ld used by GCC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
diff --git a/libcpp/files.c b/libcpp/files.c
index 969a531033f..c60dbc9182a 100644
--- a/libcpp/files.c
+++ b/libcpp/files.c
@@ -30,6 +30,13 @@ along with this program; see the file COPYING3.  If not see
 #include "md5.h"
 #include <dirent.h>
 
+/* Needed for stat_st_mode_symlink below */
+#if defined(_WIN32)
+#  include <windows.h>
+#  define S_IFLNK 0xF000
+#  define S_ISLNK(m) (((m) & S_IFMT) == S_IFLNK)
+#endif
+
 /* Variable length record files on VMS will have a stat size that includes
    record control characters that won't be included in the read size.  */
 #ifdef VMS
@@ -202,6 +209,49 @@ static int pchf_save_compare (const void *e1, const void *e2);
 static int pchf_compare (const void *d_p, const void *e_p);
 static bool check_file_against_entries (cpp_reader *, _cpp_file *, bool);
 
+#if defined(_WIN32)
+
+static int stat_st_mode_symlink (char const* path, struct stat* buf)
+{
+  WIN32_FILE_ATTRIBUTE_DATA attr;
+  memset(buf,0,sizeof(*buf));
+  int err = GetFileAttributesExA (path, GetFileExInfoStandard, &attr) ? 0 : 1;
+  if (!err)
+    {
+      WIN32_FIND_DATAA finddata;
+      HANDLE h = FindFirstFileA (path, &finddata);
+      if (h != INVALID_HANDLE_VALUE)
+        {
+          FindClose (h);
+          if ((finddata.dwFileAttributes & FILE_ATTRIBUTE_REPARSE_POINT) &&
+              (finddata.dwReserved0 == IO_REPARSE_TAG_SYMLINK))
+              buf->st_mode = S_IFLNK;
+          else if (finddata.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY)
+              buf->st_mode = S_IFDIR;
+          else if (finddata.dwFileAttributes & FILE_ATTRIBUTE_ARCHIVE)
+              buf->st_mode = S_IFDIR;
+          else
+              buf->st_mode = S_IFREG;
+          buf->st_mode |= S_IREAD;
+          if (!(finddata.dwFileAttributes & FILE_ATTRIBUTE_READONLY))
+              buf->st_mode |= S_IWRITE;
+        }
+      else
+        {
+          buf->st_mode = S_IFDIR;
+        }
+      return 0;
+    }
+  return -1;
+}
+
+#else
+
+#define stat_st_mode_symlink(_name, _buf) stat ((_name), (_buf))
+
+#endif
+
+
 /* Given a filename in FILE->PATH, with the empty string interpreted
    as <stdin>, open it.
 
@@ -231,6 +281,43 @@ open_file (_cpp_file *file)
     }
   else
     file->fd = open (file->path, O_RDONLY | O_NOCTTY | O_BINARY, 0666);
+#if defined(_WIN32) || defined(__CYGWIN__)
+  /* Windows and Posix differ in the face of paths of the form:
+     nonexistantdir/.. in that Posix will return ENOENT whereas
+     Windows won't care that we stepped into a non-existant dir
+     Only do these slow checks if ".." appears in file->path.
+     Cygwin also suffers from the same problem (but doesn't need
+     a new stat function):
+     http://cygwin.com/ml/cygwin/2013-05/msg00222.html
+  */
+  if (file->fd > 0)
+    {
+      char *filepath = xstrdup(file->path);
+      char* dirsep = filepath;
+      while ( (dirsep = strchr (dirsep, '\\')) != NULL)
+        *dirsep = '/';
+      if (strstr(file->path, "/../"))
+	{
+	  dirsep = filepath;
+	  char dirsepc;
+	  /* Check each directory in the chain. */
+	  while ( (dirsep = strpbrk (dirsep, "\\/")) != NULL)
+	    {
+	      dirsepc = *(++dirsep);
+	      *dirsep = '\0';
+	      if (stat_st_mode_symlink (filepath, &file->st) == -1)
+	        {
+	          free(filepath);
+	          close (file->fd);
+	          file->fd = -1;
+	          return false;
+	        }
+	      *dirsep++ = dirsepc;
+	    }
+	}
+	free(filepath);
+    }
+#endif
 
   if (file->fd != -1)
     {
diff --git a/libcpp/macro.c b/libcpp/macro.c
index de18c2210cf..daf5b64bad7 100644
--- a/libcpp/macro.c
+++ b/libcpp/macro.c
@@ -2918,7 +2918,8 @@ parse_params (cpp_reader *pfile, cpp_macro *macro)
 			"anonymous variadic macros were introduced in C99");
 		}
 	      else if (CPP_OPTION (pfile, cpp_warn_c90_c99_compat) > 0
-		       && ! CPP_OPTION (pfile, cplusplus))
+		       && ! CPP_OPTION (pfile, cplusplus)
+		  && CPP_OPTION (pfile, warn_variadic_macros))
 		cpp_error (pfile, CPP_DL_WARNING,
 			   "anonymous variadic macros were introduced in C99");
 	    }
diff --git a/libdecnumber/decNumberLocal.h b/libdecnumber/decNumberLocal.h
index f8bcd96a446..37372e94d81 100644
--- a/libdecnumber/decNumberLocal.h
+++ b/libdecnumber/decNumberLocal.h
@@ -187,7 +187,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
   #if (DECNUMMAXE != DEC_MAX_EMAX)
     #error Maximum exponent mismatch
   #endif
-  #if (DECNUMMINE != DEC_MIN_EMIN)
+  #if !(DECNUMMINE == DEC_MIN_EMIN) /* gcc 2.95.3 has bug in '!=' operator for negative constants */
     #error Minimum exponent mismatch
   #endif
 
diff --git a/libffi/acinclude.m4 b/libffi/acinclude.m4
index 270dadfcc18..cd949ab9aed 100644
--- a/libffi/acinclude.m4
+++ b/libffi/acinclude.m4
@@ -37,7 +37,7 @@ else
    # Systems known to be in this category are Windows (all variants),
    # VMS, and Darwin.
    case "$host_os" in
-     vms* | cygwin* | pe | mingw* | darwin* | ultrix* | hpux10* | hpux11.00)
+     vms* | cygwin* | pe | mingw* | msys* | darwin* | ultrix* | hpux10* | hpux11.00)
 	ac_cv_func_mmap_dev_zero=no ;;
      *)
 	ac_cv_func_mmap_dev_zero=yes;;
@@ -69,7 +69,7 @@ else
    # above for use of /dev/zero.
    # Systems known to be in this category are Windows, VMS, and SCO Unix.
    case "$host_os" in
-     vms* | cygwin* | pe | mingw* | sco* | udk* )
+     vms* | cygwin* | pe | mingw* | mwys* | sco* | udk* )
 	ac_cv_func_mmap_anon=no ;;
      *)
 	ac_cv_func_mmap_anon=yes;;
diff --git a/libffi/configure b/libffi/configure
index 790a291011f..42deeee6d64 100755
--- a/libffi/configure
+++ b/libffi/configure
@@ -5322,7 +5322,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -5674,6 +5674,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
@@ -9124,7 +9130,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -9555,7 +9561,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -10456,14 +10462,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -10487,7 +10493,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -11118,7 +11124,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -11992,7 +11998,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -12345,7 +12351,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,
         # as there is no search path for DLLs.
         hardcode_libdir_flag_spec_CXX='-L$libdir'
@@ -14118,14 +14124,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -14148,7 +14154,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -14892,7 +14898,7 @@ else
    # Systems known to be in this category are Windows (all variants),
    # VMS, and Darwin.
    case "$host_os" in
-     vms* | cygwin* | pe | mingw* | darwin* | ultrix* | hpux10* | hpux11.00)
+     vms* | cygwin* | pe | mingw* | msys* | darwin* | ultrix* | hpux10* | hpux11.00)
 	ac_cv_func_mmap_dev_zero=no ;;
      *)
 	ac_cv_func_mmap_dev_zero=yes;;
@@ -14949,7 +14955,7 @@ else
    # above for use of /dev/zero.
    # Systems known to be in this category are Windows, VMS, and SCO Unix.
    case "$host_os" in
-     vms* | cygwin* | pe | mingw* | sco* | udk* )
+     vms* | cygwin* | pe | mingw* | msys* | sco* | udk* )
 	ac_cv_func_mmap_anon=no ;;
      *)
 	ac_cv_func_mmap_anon=yes;;
@@ -16040,7 +16046,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
diff --git a/libffi/configure.host b/libffi/configure.host
index 24fbfc438f0..f65013b2e7f 100644
--- a/libffi/configure.host
+++ b/libffi/configure.host
@@ -65,7 +65,7 @@ case "${host}" in
 	;;
 
   i?86-win32* | i?86-*-cygwin* | i?86-*-mingw* | i?86-*-os2* | i?86-*-interix* \
-  | x86_64-*-cygwin* | x86_64-*-mingw*)
+  | x86_64-*-cygwin* | x86_64-*-mingw* | *-*-msys*)
 	TARGETDIR=x86
 	if test $ac_cv_sizeof_size_t = 4; then
 	  TARGET=X86_WIN32
diff --git a/libgcc/config.host b/libgcc/config.host
index b8e23766695..44385b8684d 100644
--- a/libgcc/config.host
+++ b/libgcc/config.host
@@ -835,6 +835,13 @@ m68k-*-linux*)			# Motorola m68k's running GNU/Linux
 	fi
 	md_unwind_header=m68k/linux-unwind.h
 	;;
+m68k-*-mintelf*)
+	tmake_file="$tmake_file m68k/t-floatlib m68k/t-mint"
+	extra_parts="$extra_parts crtbegin.o crtend.o"
+	;;
+m68k-*-mint*)
+	tmake_file="$tmake_file m68k/t-floatlib m68k/t-mint"
+	;;
 m68k-*-rtems*)
 	tmake_file="$tmake_file m68k/t-floatlib"
 	extra_parts="$extra_parts crti.o crtn.o"
diff --git a/libgcc/config/m68k/addxf3.c b/libgcc/config/m68k/addxf3.c
new file mode 100644
index 00000000000..d8a718fe32b
--- /dev/null
+++ b/libgcc/config/m68k/addxf3.c
@@ -0,0 +1 @@
+#include "soft-fp/addxf3.c"
diff --git a/libgcc/config/m68k/crti.S b/libgcc/config/m68k/crti.S
index bc2f600242b..9d28726443a 100644
--- a/libgcc/config/m68k/crti.S
+++ b/libgcc/config/m68k/crti.S
@@ -42,3 +42,9 @@ _init:
 	.type   _fini,@function
 _fini:
 	linkw %fp,#0
+
+
+#if defined (__ELF__)
+	/* Make stack non-executable for ELF linux targets.  */
+	.section	.note.GNU-stack,"",@progbits
+#endif
diff --git a/libgcc/config/m68k/crtn.S b/libgcc/config/m68k/crtn.S
index 33e7f2a986a..9d4b69ba178 100644
--- a/libgcc/config/m68k/crtn.S
+++ b/libgcc/config/m68k/crtn.S
@@ -38,3 +38,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 	.section .fini
 	unlk %fp
 	rts
+
+
+#if defined (__ELF__)
+	/* Make stack non-executable for ELF linux targets.  */
+	.section	.note.GNU-stack,"",@progbits
+#endif
diff --git a/libgcc/config/m68k/divxf3.c b/libgcc/config/m68k/divxf3.c
new file mode 100644
index 00000000000..b8be020eaae
--- /dev/null
+++ b/libgcc/config/m68k/divxf3.c
@@ -0,0 +1 @@
+#include "soft-fp/divxf3.c"
diff --git a/libgcc/config/m68k/extenddfxf2.c b/libgcc/config/m68k/extenddfxf2.c
new file mode 100644
index 00000000000..9480b1d4806
--- /dev/null
+++ b/libgcc/config/m68k/extenddfxf2.c
@@ -0,0 +1,2 @@
+#define L_extenddfxf2
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/extendsfdf2.c b/libgcc/config/m68k/extendsfdf2.c
new file mode 100644
index 00000000000..d323cf2fa35
--- /dev/null
+++ b/libgcc/config/m68k/extendsfdf2.c
@@ -0,0 +1,2 @@
+#define L_extendsfdf2
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/extendsfxf2.c b/libgcc/config/m68k/extendsfxf2.c
new file mode 100644
index 00000000000..5bd4bea784f
--- /dev/null
+++ b/libgcc/config/m68k/extendsfxf2.c
@@ -0,0 +1,2 @@
+#define L_extendsfxf2
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/fixdfsi.c b/libgcc/config/m68k/fixdfsi.c
new file mode 100644
index 00000000000..1d811017e2c
--- /dev/null
+++ b/libgcc/config/m68k/fixdfsi.c
@@ -0,0 +1,2 @@
+#define L_fixdfsi
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/fixsfsi.c b/libgcc/config/m68k/fixsfsi.c
new file mode 100644
index 00000000000..c76353b3bd6
--- /dev/null
+++ b/libgcc/config/m68k/fixsfsi.c
@@ -0,0 +1,2 @@
+#define L_fixsfsi
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/fixxfsi.c b/libgcc/config/m68k/fixxfsi.c
new file mode 100644
index 00000000000..ba166b14308
--- /dev/null
+++ b/libgcc/config/m68k/fixxfsi.c
@@ -0,0 +1,2 @@
+#define L_fixxfsi
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/floatsidf.c b/libgcc/config/m68k/floatsidf.c
new file mode 100644
index 00000000000..0fe443ca183
--- /dev/null
+++ b/libgcc/config/m68k/floatsidf.c
@@ -0,0 +1,2 @@
+#define L_floatsidf
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/floatsisf.c b/libgcc/config/m68k/floatsisf.c
new file mode 100644
index 00000000000..7ce07487f40
--- /dev/null
+++ b/libgcc/config/m68k/floatsisf.c
@@ -0,0 +1,2 @@
+#define L_floatsisf
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/floatsixf.c b/libgcc/config/m68k/floatsixf.c
new file mode 100644
index 00000000000..5c10b8081ed
--- /dev/null
+++ b/libgcc/config/m68k/floatsixf.c
@@ -0,0 +1,2 @@
+#define L_floatsixf
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/floatunsidf.c b/libgcc/config/m68k/floatunsidf.c
new file mode 100644
index 00000000000..f901056f428
--- /dev/null
+++ b/libgcc/config/m68k/floatunsidf.c
@@ -0,0 +1,2 @@
+#define L_floatunsidf
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/floatunsisf.c b/libgcc/config/m68k/floatunsisf.c
new file mode 100644
index 00000000000..8a143a26cdc
--- /dev/null
+++ b/libgcc/config/m68k/floatunsisf.c
@@ -0,0 +1,2 @@
+#define L_floatunsisf
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/floatunsixf.c b/libgcc/config/m68k/floatunsixf.c
new file mode 100644
index 00000000000..d67949bd696
--- /dev/null
+++ b/libgcc/config/m68k/floatunsixf.c
@@ -0,0 +1,2 @@
+#define L_floatunsixf
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/fpgnulib.c b/libgcc/config/m68k/fpgnulib.c
index fe41edf26aa..d4889a52a93 100644
--- a/libgcc/config/m68k/fpgnulib.c
+++ b/libgcc/config/m68k/fpgnulib.c
@@ -1,10 +1,6 @@
 /* This is a stripped down version of floatlib.c.  It supplies only those
    functions which exist in libgcc, but for which there is not assembly
-   language versions in m68k/lb1sf68.S.
-
-   It also includes simplistic support for extended floats (by working in
-   double precision).  You must compile this file again with -DEXTFLOAT
-   to get this support.  */
+   language versions in m68k/lb1sf68.S.  */
 
 /*
 ** gnulib support for software floating point.
@@ -53,6 +49,7 @@
 #define EXCESS		126L
 #define SIGNBIT		0x80000000L
 #define HIDDEN		(1L << 23L)
+#define EXPFMASK	0xFFL
 #define SIGN(fp)	((fp) & SIGNBIT)
 #define EXP(fp)		(((fp) >> 23L) & 0xFF)
 #define MANT(fp)	(((fp) & 0x7FFFFFL) | HIDDEN)
@@ -102,23 +99,64 @@ union long_double_long
       unsigned long lower;
     } l;
 };
-
-#ifndef EXTFLOAT
 
+/* Prototypes for functions defined here in case we use them.  */
+int __unordsf2(float a, float b);
+int __unorddf2(double a, double b);
+double __floatunsidf (unsigned long a1);
+double __floatsidf (long a1);
+float __floatunsisf (unsigned long l);
+float __floatsisf (long l);
+double __extendsfdf2 (float a1);
+float __truncdfsf2 (double a1);
+long __fixdfsi (double a1);
+long __fixsfsi (float a1);
+long __cmpdf2 (double x1, double x2);
+
+#if !defined (__mcoldfire__)
+int __unordxf2(long double a, long double b);
+long double __extenddfxf2 (double d);
+double __truncxfdf2 (long double ld);
+long double __extendsfxf2 (float f);
+float __truncxfsf2 (long double ld);
+long double __floatsixf (long l);
+long double __floatunsixf (unsigned long l);
+long __fixxfsi (long double ld);
+long double __addxf3 (long double x1, long double x2);
+long double __subxf3 (long double x1, long double x2);
+long double __mulxf3 (long double x1, long double x2);
+long double __divxf3 (long double x1, long double x2);
+long double __negxf2 (long double x1);
+long __cmpxf2 (long double x1, long double x2);
+long __eqxf2 (long double x1, long double x2);
+long __nexf2 (long double x1, long double x2);
+long __ltxf2 (long double x1, long double x2);
+long __lexf2 (long double x1, long double x2);
+long __gtxf2 (long double x1, long double x2);
+long __gexf2 (long double x1, long double x2);
+#endif
+
+#include "elf-alias.h"
+
+
+#ifdef L_unordsf2
 int
 __unordsf2(float a, float b)
 {
   union float_long fl;
 
   fl.f = a;
-  if (EXP(fl.l) == EXP(~0u) && (MANT(fl.l) & ~HIDDEN) != 0)
+  if (EXP(fl.l) == EXP(~0ul) && (MANT(fl.l) & ~HIDDEN) != 0)
     return 1;
   fl.f = b;
-  if (EXP(fl.l) == EXP(~0u) && (MANT(fl.l) & ~HIDDEN) != 0)
+  if (EXP(fl.l) == EXP(~0ul) && (MANT(fl.l) & ~HIDDEN) != 0)
     return 1;
   return 0;
 }
+ELF_ALIAS(__unordsf2)
+#endif
 
+#ifdef L_unorddf2
 int
 __unorddf2(double a, double b)
 {
@@ -134,7 +172,10 @@ __unorddf2(double a, double b)
     return 1;
   return 0;
 }
+ELF_ALIAS(__unorddf2)
+#endif
 
+#ifdef L_floatunsidf
 /* convert unsigned int to double */
 double
 __floatunsidf (unsigned long a1)
@@ -167,7 +208,10 @@ __floatunsidf (unsigned long a1)
 
   return dl.d;
 }
+ELF_ALIAS(__floatunsidf)
+#endif
 
+#ifdef L_floatsidf
 /* convert int to double */
 double
 __floatsidf (long a1)
@@ -213,7 +257,10 @@ __floatsidf (long a1)
 
   return dl.d;
 }
+ELF_ALIAS(__floatsidf)
+#endif
 
+#ifdef L_floatunsisf
 /* convert unsigned int to float */
 float
 __floatunsisf (unsigned long l)
@@ -221,7 +268,10 @@ __floatunsisf (unsigned long l)
   double foo = __floatunsidf (l);
   return foo;
 }
+ELF_ALIAS(__floatunsisf)
+#endif
 
+#ifdef L_floatsisf
 /* convert int to float */
 float
 __floatsisf (long l)
@@ -229,15 +279,18 @@ __floatsisf (long l)
   double foo = __floatsidf (l);
   return foo;
 }
+ELF_ALIAS(__floatsisf)
+#endif
 
+#ifdef L_extendsfdf2
 /* convert float to double */
 double
 __extendsfdf2 (float a1)
 {
-  register union float_long fl1;
-  register union double_long dl;
-  register long exp;
-  register long mant;
+  union float_long fl1;
+  union double_long dl;
+  long exp;
+  long mant;
 
   fl1.f = a1;
 
@@ -250,7 +303,7 @@ __extendsfdf2 (float a1)
 
   exp = EXP(fl1.l);
   mant = MANT (fl1.l) & ~HIDDEN;
-  if (exp == 0)
+  if (exp == 0) /* case of mant == 0 has already been catched above */
     {
       /* Denormal.  */
       exp = 1;
@@ -261,22 +314,28 @@ __extendsfdf2 (float a1)
 	}
       mant &= ~HIDDEN;
     }
-  exp = exp - EXCESS + EXCESSD;
+  if (exp == EXPFMASK)
+    exp = EXPDMASK;
+  else
+    exp = exp - EXCESS + EXCESSD;
   dl.l.upper |= exp << 20;
   dl.l.upper |= mant >> 3;
   dl.l.lower = mant << 29;
 	
   return dl.d;
 }
+ELF_ALIAS(__extendsfdf2)
+#endif
 
+#ifdef L_truncdfsf2
 /* convert double to float */
 float
 __truncdfsf2 (double a1)
 {
-  register long exp;
-  register long mant;
-  register union float_long fl;
-  register union double_long dl1;
+  long exp;
+  long mant;
+  union float_long fl;
+  union double_long dl1;
   int sticky;
   int shift;
 
@@ -290,7 +349,7 @@ __truncdfsf2 (double a1)
 
   exp = EXPD (dl1) - EXCESSD + EXCESS;
 
-  sticky = dl1.l.lower & ((1 << 22) - 1);
+  sticky = dl1.l.lower & ((1L << 22) - 1);
   mant = MANTD (dl1);
   /* shift double mantissa 6 bits so we can round */
   sticky |= mant & ((1 << 6) - 1);
@@ -311,7 +370,15 @@ __truncdfsf2 (double a1)
 	}
       exp = 0;
     }
-  
+  else if (exp >= EXPFMASK)
+    {
+      if (exp == EXPDMASK - EXCESSD + EXCESS)
+        mant &= ~3; /* was already inf or nan; do not round */
+      else
+        mant = 0; /* just overflowed */
+      exp = EXPFMASK;
+    }
+
   /* now round */
   shift = 1;
   if ((mant & 1) && (sticky || (mant & 2)))
@@ -336,14 +403,17 @@ __truncdfsf2 (double a1)
   fl.l = PACK (SIGND (dl1), exp, mant);
   return (fl.f);
 }
+ELF_ALIAS(__truncdfsf2)
+#endif
 
+#ifdef L_fixdfsi
 /* convert double to int */
 long
 __fixdfsi (double a1)
 {
-  register union double_long dl1;
-  register long exp;
-  register long l;
+  union double_long dl1;
+  long exp;
+  long l;
 
   dl1.d = a1;
 
@@ -368,7 +438,10 @@ __fixdfsi (double a1)
 
   return (SIGND (dl1) ? -l : l);
 }
+ELF_ALIAS(__fixdfsi)
+#endif
 
+#ifdef L_fixsfsi
 /* convert float to int */
 long
 __fixsfsi (float a1)
@@ -376,8 +449,8 @@ __fixsfsi (float a1)
   double foo = a1;
   return __fixdfsi (foo);
 }
-
-#else /* EXTFLOAT */
+ELF_ALIAS(__fixsfsi)
+#endif
 
 /* We do not need these routines for coldfire, as it has no extended
    float format. */
@@ -387,15 +460,7 @@ __fixsfsi (float a1)
 
    We assume all numbers are normalized, don't do any rounding, etc.  */
 
-/* Prototypes for the above in case we use them.  */
-double __floatunsidf (unsigned long);
-double __floatsidf (long);
-float __floatsisf (long);
-double __extendsfdf2 (float);
-float __truncdfsf2 (double);
-long __fixdfsi (double);
-long __fixsfsi (float);
-
+#ifdef L_unordxf2
 int
 __unordxf2(long double a, long double b)
 {
@@ -411,14 +476,17 @@ __unordxf2(long double a, long double b)
     return 1;
   return 0;
 }
+ELF_ALIAS(__unordxf2)
+#endif
 
+#ifdef L_extenddfxf2
 /* convert double to long double */
 long double
 __extenddfxf2 (double d)
 {
-  register union double_long dl;
-  register union long_double_long ldl;
-  register long exp;
+  union double_long dl;
+  union long_double_long ldl;
+  long exp;
 
   dl.d = d;
   /*printf ("dfxf in: %g\n", d);*/
@@ -431,7 +499,11 @@ __extenddfxf2 (double d)
       return ldl.ld;
     }
 
-  exp = EXPD (dl) - EXCESSD + EXCESSX;
+  exp = EXPD (dl);
+  if (exp == EXPDMASK)
+    exp = EXPXMASK;
+  else
+    exp = exp - EXCESSD + EXCESSX;
   ldl.l.upper |= exp << 16;
   ldl.l.middle = HIDDENX;
   /* 31-20: # mantissa bits in ldl.l.middle - # mantissa bits in dl.l.upper */
@@ -444,39 +516,67 @@ __extenddfxf2 (double d)
   /*printf ("dfxf out: %s\n", dumpxf (ldl.ld));*/
   return ldl.ld;
 }
+ELF_ALIAS(__extenddfxf2)
+#endif
 
+#ifdef L_truncxfdf2
 /* convert long double to double */
 double
 __truncxfdf2 (long double ld)
 {
-  register long exp;
-  register union double_long dl;
-  register union long_double_long ldl;
+  long exp;
+  union double_long dl;
+  union long_double_long ldl;
 
   ldl.ld = ld;
   /*printf ("xfdf in: %s\n", dumpxf (ld));*/
 
+  exp = EXPX (ldl);
   dl.l.upper = SIGNX (ldl);
-  if ((ldl.l.upper & ~SIGNBIT) == 0 && !ldl.l.middle && !ldl.l.lower)
+  if (exp == 0 && (ldl.l.middle & MANTXMASK) == 0 && !ldl.l.lower)
     {
       dl.l.lower = 0;
-      return dl.d;
     }
-
-  exp = EXPX (ldl) - EXCESSX + EXCESSD;
-  /* ??? quick and dirty: keep `exp' sane */
-  if (exp >= EXPDMASK)
-    exp = EXPDMASK - 1;
-  dl.l.upper |= exp << (32 - (EXPDBITS + 1));
-  /* +1-1: add one for sign bit, but take one off for explicit-integer-bit */
-  dl.l.upper |= (ldl.l.middle & MANTXMASK) >> (EXPDBITS + 1 - 1);
-  dl.l.lower = (ldl.l.middle & MANTXMASK) << (32 - (EXPDBITS + 1 - 1));
-  dl.l.lower |= ldl.l.lower >> (EXPDBITS + 1 - 1);
+  else
+    {
+      if (exp == EXPXMASK)
+        {
+          exp = EXPDMASK;
+          ldl.l.middle = 0;
+          ldl.l.lower = 0;
+        }
+      else
+        {
+          exp = exp - EXCESSX + EXCESSD;
+          /* ??? quick and dirty: keep `exp' sane */
+          if (exp >= EXPDMASK)
+          {
+          	/* overflow: return infinity */
+            exp = EXPDMASK;
+            ldl.l.middle = 0;
+            ldl.l.lower = 0;
+          } else if (exp <= 0)
+          {
+          	/* underflow */
+            exp = 0;
+            ldl.l.middle = 0;
+            ldl.l.lower = 0;
+          }
+        }
+      dl.l.upper |= exp << (32 - (EXPDBITS + 1));
+      /* +1-1: add one for sign bit, but take one off for explicit-integer-bit */
+      dl.l.upper |= (ldl.l.middle & MANTXMASK) >> (EXPDBITS + 1 - 1);
+      dl.l.lower = (ldl.l.middle & MANTXMASK) << (32 - (EXPDBITS + 1 - 1));
+      dl.l.lower |= ldl.l.lower >> (EXPDBITS + 1 - 1);
+	}
 
   /*printf ("xfdf out: %g\n", dl.d);*/
   return dl.d;
 }
+ELF_ALIAS(__truncxfdf2)
+#endif
 
+#ifdef L_extendsfxf2
 /* convert a float to a long double */
 long double
 __extendsfxf2 (float f)
@@ -484,7 +584,10 @@ __extendsfxf2 (float f)
   long double foo = __extenddfxf2 (__extendsfdf2 (f));
   return foo;
 }
+ELF_ALIAS(__extendsfxf2)
+#endif
 
+#ifdef L_truncxfsf2
 /* convert a long double to a float */
 float
 __truncxfsf2 (long double ld)
@@ -492,7 +595,10 @@ __truncxfsf2 (long double ld)
   float foo = __truncdfsf2 (__truncxfdf2 (ld));
   return foo;
 }
+ELF_ALIAS(__truncxfsf2)
+#endif
 
+#ifdef L_floatsixf
 /* convert an int to a long double */
 long double
 __floatsixf (long l)
@@ -500,7 +606,10 @@ __floatsixf (long l)
   double foo = __floatsidf (l);
   return foo;
 }
+ELF_ALIAS(__floatsixf)
+#endif
 
+#ifdef L_floatunsixf
 /* convert an unsigned int to a long double */
 long double
 __floatunsixf (unsigned long l)
@@ -508,7 +617,10 @@ __floatunsixf (unsigned long l)
   double foo = __floatunsidf (l);
   return foo;
 }
+ELF_ALIAS(__floatunsixf)
+#endif
 
+#ifdef L_fixxfsi
 /* convert a long double to an int */
 long
 __fixxfsi (long double ld)
@@ -516,80 +628,7 @@ __fixxfsi (long double ld)
   long foo = __fixdfsi ((double) ld);
   return foo;
 }
-
-/* The remaining provide crude math support by working in double precision.  */
-
-long double
-__addxf3 (long double x1, long double x2)
-{
-  return (double) x1 + (double) x2;
-}
-
-long double
-__subxf3 (long double x1, long double x2)
-{
-  return (double) x1 - (double) x2;
-}
-
-long double
-__mulxf3 (long double x1, long double x2)
-{
-  return (double) x1 * (double) x2;
-}
-
-long double
-__divxf3 (long double x1, long double x2)
-{
-  return (double) x1 / (double) x2;
-}
-
-long double
-__negxf2 (long double x1)
-{
-  return - (double) x1;
-}
-
-long
-__cmpxf2 (long double x1, long double x2)
-{
-  return __cmpdf2 ((double) x1, (double) x2);
-}
-
-long
-__eqxf2 (long double x1, long double x2)
-{
-  return __cmpdf2 ((double) x1, (double) x2);
-}
-
-long
-__nexf2 (long double x1, long double x2)
-{
-  return __cmpdf2 ((double) x1, (double) x2);
-}
-
-long
-__ltxf2 (long double x1, long double x2)
-{
-  return __cmpdf2 ((double) x1, (double) x2);
-}
-
-long
-__lexf2 (long double x1, long double x2)
-{
-  return __cmpdf2 ((double) x1, (double) x2);
-}
-
-long
-__gtxf2 (long double x1, long double x2)
-{
-  return __cmpdf2 ((double) x1, (double) x2);
-}
-
-long
-__gexf2 (long double x1, long double x2)
-{
-  return __cmpdf2 ((double) x1, (double) x2);
-}
+ELF_ALIAS(__fixxfsi)
+#endif
 
 #endif /* !__mcoldfire__ */
-#endif /* EXTFLOAT */
diff --git a/libgcc/config/m68k/lb1sf68-fast.S b/libgcc/config/m68k/lb1sf68-fast.S
new file mode 100644
index 00000000000..7e36c376c7e
--- /dev/null
+++ b/libgcc/config/m68k/lb1sf68-fast.S
@@ -0,0 +1,219 @@
+/* libgcc routines for 68000 w/o floating-point hardware.
+   Copyright (C) 1994, 1996, 1997, 1998, 2008, 2009 Free Software Foundation, Inc.
+
+This file is part of GCC.
+
+GCC is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3, or (at your option) any
+later version.
+
+This file is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+General Public License for more details.
+
+Under Section 7 of GPL version 3, you are granted additional
+permissions described in the GCC Runtime Library Exception, version
+3.1, as published by the Free Software Foundation.
+
+You should have received a copy of the GNU General Public License and
+a copy of the GCC Runtime Library Exception along with this program;
+see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+<http://www.gnu.org/licenses/>.  */
+
+#ifdef  L_mulsi3
+	.text
+	FUNC(__mulsi3)
+	.globl	SYM (__mulsi3)
+	.globl	SYM (__mulsi3_internal)
+#ifdef __ELF__
+	.hidden	SYM (__mulsi3_internal)
+#endif
+SYM (__mulsi3):
+SYM (__mulsi3_internal):
+	move.l  d2,-(sp)
+	movel   d0, a0          | d0a0 = x0:x1
+	movel   d1, a1		| d1a1 = y0:y1
+	swap	d0              | d0   = x1:x0 
+	muluw   d1, d0          | d0 = y1*x0 
+	swap	d1		| d1 = y1:y0
+	movel   a0, d2		| d2 = x0:x1
+	muluw   d2, d1          | d1 = x1*y0	
+#ifndef __mcoldfire__
+	addw	d1, d0
+#else
+	addl	d1, d0
+#endif
+	swap	d0
+	clrw	d0
+	movel	a1,d1		| d1 = y0:y1
+	muluw	d2, d1		| d1 = x1*y1
+
+	move.l  (sp)+,d2
+	addl	d1, d0
+
+	rts
+#endif /* L_mulsi3 */
+
+#ifdef  L_udivsi3
+	.text
+	FUNC(__udivsi3)
+	.globl	SYM (__udivsi3)
+	.globl	SYM (__udivsi3_internal)
+#ifdef __ELF__
+	.hidden	SYM (__udivsi3_internal)
+#endif
+SYM (__udivsi3):
+SYM (__udivsi3_internal):
+#ifndef __mcoldfire__
+	move.l  d2,-(sp)
+	movel	d0, a0
+
+	cmpl	IMM (0x10000), d1 /* divisor >= 2 ^ 16 ?   */
+	jcc	udivsi3_fast_L3		/* then try next algorithm */
+	movel	d0, d2
+	clrw	d2
+	swap	d2
+	divu	d1, d2          /* high quotient in lower word */
+	movew	d2, d0		/* save high quotient */
+	swap	d0
+	movew	a0, d2		/* get low dividend + high rest */
+	divu	d1, d2		/* low quotient */
+	movew	d2, d0
+	jra	udivsi3_fast_L6
+
+udivsi3_fast_L3:	movel	d1, d2		/* use d2 as divisor backup */
+udivsi3_fast_L4:	lsrl	IMM (1), d1	/* shift divisor */
+	lsrl	IMM (1), d0	/* shift dividend */
+	cmpl	IMM (0x10000), d1 /* still divisor >= 2 ^ 16 ?  */
+	jcc	udivsi3_fast_L4
+	divu	d1, d0		/* now we have 16-bit divisor */
+	andl	IMM (0xffff), d0 /* mask out divisor, ignore remainder */
+
+/* Multiply the 16-bit tentative quotient with the 32-bit divisor.  Because of
+   the operand ranges, this might give a 33-bit product.  If this product is
+   greater than the dividend, the tentative quotient was too large. */
+	movel	d2, d1
+	mulu	d0, d1		/* low part, 32 bits */
+	swap	d2
+	mulu	d0, d2		/* high part, at most 17 bits */
+	swap	d2		/* align high part with low part */
+	tstw	d2		/* high part 17 bits? */
+	jne	udivsi3_fast_L5		/* if 17 bits, quotient was too large */
+	addl	d2, d1		/* add parts */
+	jcs	udivsi3_fast_L5		/* if sum is 33 bits, quotient was too large */
+	cmpl	a0, d1		/* compare the sum with the dividend */
+	jls	udivsi3_fast_L6		/* if sum > dividend, quotient was too large */
+udivsi3_fast_L5:	subql	IMM (1), d0	/* adjust quotient */
+
+udivsi3_fast_L6:
+	move.l  (sp)+,d2
+	rts
+
+#else /* __mcoldfire__ */
+
+/* ColdFire implementation of non-restoring division algorithm from
+   Hennessy & Patterson, Appendix A. */
+	moveml	d2-d4,sp@
+	clrl	d2		| clear p
+	moveq	IMM (31),d4
+udivsi3_fast_L1:	addl	d0,d0		| shift reg pair (p,a) one bit left
+	addxl	d2,d2
+	movl	d2,d3		| subtract b from p, store in tmp.
+	subl	d1,d3
+	jcs	udivsi3_fast_L2		| if no carry,
+	bset	IMM (0),d0	| set the low order bit of a to 1,
+	movl	d3,d2		| and store tmp in p.
+udivsi3_fast_L2:	subql	IMM (1),d4
+	jcc	udivsi3_fast_L1
+	moveml	sp@,d2-d4	| restore data registers
+	rts
+#endif /* __mcoldfire__ */
+
+#endif /* L_udivsi3 */
+
+#ifdef  L_divsi3
+	.text
+	FUNC(__divsi3)
+	.globl	SYM (__divsi3)
+	.globl	SYM (__divsi3_internal)
+#ifdef __ELF__
+	.hidden	SYM (__divsi3_internal)
+#endif
+SYM (__divsi3):
+SYM (__divsi3_internal):
+	move.l  d2,-(sp)
+	moveq	IMM (1), d2	/* sign of result stored in d2 (=1 or =-1) */
+	tstl	d1
+	jpl	divsi3_fast_L1
+	negl	d1
+#ifndef __mcoldfire__
+	negw	d2		/* change sign because divisor <0  */
+#else
+	negl	d2		/* change sign because divisor <0  */
+#endif
+divsi3_fast_L1:	tstl	d0		/* d0 = dividend */
+	jpl	divsi3_fast_L2
+	negl	d0
+#ifndef __mcoldfire__
+	negw	d2
+#else
+	negl	d2
+#endif
+
+divsi3_fast_L2:	movew	d2,a1		/* Called function MUST NOT clobber a1 */
+	PICCALL	SYM (__udivsi3_internal)	/* divide abs(dividend) by abs(divisor) */
+
+	movew	a1,d2
+	jpl	divsi3_fast_L3
+	negl	d0
+
+divsi3_fast_L3:
+	move.l  (sp)+,d2
+	rts
+#endif /* L_divsi3 */
+
+#ifdef  L_umodsi3
+	.text
+	FUNC(__umodsi3)
+	.globl	SYM (__umodsi3)
+SYM (__umodsi3):
+	move.l  d2,-(sp)
+	movel	d0, d2
+	movel	d1, a1		/* a1 MUST NOT be clobbered by calls*/
+	PICCALL	SYM (__udivsi3_internal)
+	movel	a1, d1		/* d1 = divisor */
+#ifndef __mcoldfire__
+	PICCALL	SYM (__mulsi3_internal)	/* d0 = (a/b)*b */
+#else
+	mulsl	d1,d0
+#endif
+	movel	d2, d1		/* d1 = dividend */
+	subl	d0, d1		/* d1 = a - (a/b)*b */
+	movel	d1, d0
+	move.l  (sp)+,d2
+	rts
+#endif /* L_umodsi3 */
+
+#ifdef  L_modsi3
+	.text
+	FUNC(__modsi3)
+	.globl	SYM (__modsi3)
+SYM (__modsi3):
+	move.l  d2,-(sp)
+	movel	d0, sp@-
+	movel	d1, sp@-
+	PICCALL	SYM (__divsi3_internal)
+	movel	sp@+, d1	/* d1 = divisor */
+#ifndef __mcoldfire__
+	PICCALL	SYM (__mulsi3_internal)	/* d0 = (a/b)*b */
+#else
+	mulsl	d1,d0
+#endif
+	movel	sp@+, d1	/* d1 = dividend */
+	subl	d0, d1		/* d1 = a - (a/b)*b */
+	movel	d1, d0
+	move.l  (sp)+,d2
+	rts
+#endif /* L_modsi3 */
diff --git a/libgcc/config/m68k/lb1sf68.S b/libgcc/config/m68k/lb1sf68.S
index 9f649f636dd..93faa8ed35d 100644
--- a/libgcc/config/m68k/lb1sf68.S
+++ b/libgcc/config/m68k/lb1sf68.S
@@ -51,18 +51,20 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 
 #define SYM(x) CONCAT1 (__USER_LABEL_PREFIX__, x)
 
+#include "elf-alias.h"
+
 /* Note that X is a function.  */
-	
+
 #ifdef __ELF__
 #define FUNC(x) .type SYM(x),function
 #else
-/* The .proc pseudo-op is accepted, but ignored, by GAS.  We could just	
+/* The .proc pseudo-op is accepted, but ignored, by GAS.  We could just
    define this to the empty string for non-ELF systems, but defining it
    to .proc means that the information is available to the assembler if
    the need arises.  */
 #define FUNC(x) .proc
 #endif
-		
+
 /* Use the right prefix for registers.  */
 
 #define REG(x) CONCAT1 (__REGISTER_PREFIX__, x)
@@ -90,6 +92,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 #define sp REG (sp)
 #define pc REG (pc)
 
+#ifndef M68K_STRUCT_VALUE_REGNUM
+#define M68K_STRUCT_VALUE_REGNUM a1
+#endif
+
 /* Provide a few macros to allow for PIC code support.
  * With PIC, data is stored A5 relative so we've got to take a bit of special
  * care to ensure that all loads of global data is via A5.  PIC also requires
@@ -223,9 +229,44 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 #endif /* __PIC__ */
 
 
+| The following exception types are supported:
+INEXACT_RESULT 		= 0x0001
+UNDERFLOW 		= 0x0002
+OVERFLOW 		= 0x0004
+DIVIDE_BY_ZERO 		= 0x0008
+INVALID_OPERATION 	= 0x0010
+
+| The allowed rounding modes are:
+UNKNOWN           = -1
+ROUND_TO_NEAREST  = 0 | round result to nearest representable value
+ROUND_TO_ZERO     = 1 | round result towards zero
+ROUND_TO_PLUS     = 2 | round result towards plus infinity
+ROUND_TO_MINUS    = 3 | round result towards minus infinity
+
+| The allowed values of format are:
+NIL          = 0
+SINGLE_FLOAT = 1
+DOUBLE_FLOAT = 2
+LONG_FLOAT   = 3
+
+| The allowed values for the last operation are:
+NOOP         = 0
+ADD          = 1
+MULTIPLY     = 2
+DIVIDE       = 3
+NEGATE       = 4
+COMPARE      = 5
+EXTENDSFDF   = 6
+TRUNCDFSF    = 7
+
+| return values from __cmpdf2/__cmpsf2/__cmpxf2
+GREATER =  1
+LESS    = -1
+EQUAL   =  0
+
 #ifdef L_floatex
 
-| This is an attempt at a decent floating point (single, double and 
+| This is an attempt at a decent floating point (single, double and
 | extended double) code for the GNU C compiler. It should be easy to
 | adapt to other compilers (but beware of the local labels!).
 
@@ -234,10 +275,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 | It is convenient to introduce the notation (s,e,f) for a floating point
 | number, where s=sign, e=exponent, f=fraction. We will call a floating
 | point number fpn to abbreviate, independently of the precision.
-| Let MAX_EXP be in each case the maximum exponent (255 for floats, 1023 
-| for doubles and 16383 for long doubles). We then have the following 
+| Let MAX_EXP be in each case the maximum exponent (255 for floats, 1023
+| for doubles and 16383 for long doubles). We then have the following
 | different cases:
-|  1. Normalized fpns have 0 < e < MAX_EXP. They correspond to 
+|  1. Normalized fpns have 0 < e < MAX_EXP. They correspond to
 |     (-1)^s x 1.f x 2^(e-bias-1).
 |  2. Denormalized fpns have e=0. They correspond to numbers of the form
 |     (-1)^s x 0.f x 2^(-bias).
@@ -252,8 +293,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 | This is the floating point condition code register (_fpCCR):
 |
 | struct {
-|   short _exception_bits;	
-|   short _trap_enable_bits;	
+|   short _exception_bits;
+|   short _trap_enable_bits;
 |   short _sticky_bits;
 |   short _rounding_mode;
 |   short _format;
@@ -261,10 +302,12 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 |   union {
 |     float sf;
 |     double df;
+|     long double xf;
 |   } _operand1;
 |   union {
 |     float sf;
 |     double df;
+|     long double xf;
 |   } _operand2;
 | } _fpCCR;
 
@@ -272,7 +315,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 	.even
 
 	.globl	SYM (_fpCCR)
-	
+
 SYM (_fpCCR):
 __exception_bits:
 	.word	0
@@ -289,9 +332,11 @@ __last_operation:
 __operand1:
 	.long	0
 	.long	0
+	.long	0
 __operand2:
 	.long 	0
 	.long	0
+	.long	0
 
 | Offsets:
 EBITS  = __exception_bits - SYM (_fpCCR)
@@ -303,42 +348,12 @@ LASTO  = __last_operation - SYM (_fpCCR)
 OPER1  = __operand1 - SYM (_fpCCR)
 OPER2  = __operand2 - SYM (_fpCCR)
 
-| The following exception types are supported:
-INEXACT_RESULT 		= 0x0001
-UNDERFLOW 		= 0x0002
-OVERFLOW 		= 0x0004
-DIVIDE_BY_ZERO 		= 0x0008
-INVALID_OPERATION 	= 0x0010
-
-| The allowed rounding modes are:
-UNKNOWN           = -1
-ROUND_TO_NEAREST  = 0 | round result to nearest representable value
-ROUND_TO_ZERO     = 1 | round result towards zero
-ROUND_TO_PLUS     = 2 | round result towards plus infinity
-ROUND_TO_MINUS    = 3 | round result towards minus infinity
-
-| The allowed values of format are:
-NIL          = 0
-SINGLE_FLOAT = 1
-DOUBLE_FLOAT = 2
-LONG_FLOAT   = 3
-
-| The allowed values for the last operation are:
-NOOP         = 0
-ADD          = 1
-MULTIPLY     = 2
-DIVIDE       = 3
-NEGATE       = 4
-COMPARE      = 5
-EXTENDSFDF   = 6
-TRUNCDFSF    = 7
-
 |=============================================================================
 |                           __clear_sticky_bits
 |=============================================================================
 
-| The sticky bits are normally not cleared (thus the name), whereas the 
-| exception type and exception value reflect the last computation. 
+| The sticky bits are normally not cleared (thus the name), whereas the
+| exception type and exception value reflect the last computation.
 | This routine is provided to clear them (you can also write to _fpCCR,
 | since it is globally visible).
 
@@ -348,13 +363,10 @@ TRUNCDFSF    = 7
 	.even
 
 | void __clear_sticky_bits(void);
-SYM (__clear_sticky_bit):		
+SYM (__clear_sticky_bit):
+ELF_ALIAS(__clear_sticky_bit)
 	PICLEA	SYM (_fpCCR),a0
-#ifndef __mcoldfire__
-	movew	IMM (0),a0@(STICK)
-#else
 	clr.w	a0@(STICK)
-#endif
 	rts
 
 |=============================================================================
@@ -370,13 +382,13 @@ SYM (__clear_sticky_bit):
 | NOTE: it is NOT callable from C!
 | It expects the exception type in d7, the format (SINGLE_FLOAT,
 | DOUBLE_FLOAT or LONG_FLOAT) in d6, and the last operation code in d5.
-| It sets the corresponding exception and sticky bits, and the format. 
-| Depending on the format if fills the corresponding slots for the 
+| It sets the corresponding exception and sticky bits, and the format.
+| Depending on the format if fills the corresponding slots for the
 | operands which produced the exception (all this information is provided
 | so if you write your own exception handlers you have enough information
 | to deal with the problem).
-| Then checks to see if the corresponding exception is trap-enabled, 
-| in which case it pushes the address of _fpCCR and traps through 
+| Then checks to see if the corresponding exception is trap-enabled,
+| in which case it pushes the address of _fpCCR and traps through
 | trap FPTRAP (15 for the moment).
 
 FPTRAP = 15
@@ -396,19 +408,33 @@ $_exception_handler:
 
 | Now put the operands in place:
 #ifndef __mcoldfire__
-	cmpw	IMM (SINGLE_FLOAT),d6
+	subqw	IMM (DOUBLE_FLOAT),d6
 #else
-	cmpl	IMM (SINGLE_FLOAT),d6
+	subql	IMM (DOUBLE_FLOAT),d6
 #endif
-	beq	1f
+	beq	2f
+	bmi	3f
+	moveml a6@(8),d0-d5
+	moveml d0-d5,a0@(OPER1)
+	| for cmpxf2, return value is int!
+#ifndef __mcoldfire__
+	subqw	IMM (2),d6
+#else
+	subql	IMM (2),d6
+#endif
+	beq		4f
+	moveml	d0-d2,M68K_STRUCT_VALUE_REGNUM@			| write return value for long double
+	movel	M68K_STRUCT_VALUE_REGNUM,d0
+	bra	4f
+2:
 	movel	a6@(8),a0@(OPER1)
 	movel	a6@(12),a0@(OPER1+4)
 	movel	a6@(16),a0@(OPER2)
 	movel	a6@(20),a0@(OPER2+4)
-	bra	2f
-1:	movel	a6@(8),a0@(OPER1)
+	bra	4f
+3:	movel	a6@(8),a0@(OPER1)
 	movel	a6@(12),a0@(OPER2)
-2:
+4:
 | And check whether the exception is trap-enabled:
 #ifndef __mcoldfire__
 	andw	a0@(TRAPE),d7	| is exception trap-enabled?
@@ -418,23 +444,27 @@ $_exception_handler:
 	andl	d6,d7
 #endif
 	beq	1f		| no, exit
-	PICPEA	SYM (_fpCCR),a1	| yes, push address of _fpCCR
+	pea		(a0)	| yes, push address of _fpCCR
 	trap	IMM (FPTRAP)	| and trap
-#ifndef __mcoldfire__
-1:	moveml	sp@+,d2-d7	| restore data registers
-#else
-1:	moveml	sp@,d2-d7
+1:
+	moveml	sp@,d2-d7/a2-a5	| restore data registers
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6		| and return
 	rts
 #endif /* L_floatex */
 
+#ifdef __FASTCALL__
+
+#include "lb1sf68-fast.S"
+
+#else
+
 #ifdef  L_mulsi3
 	.text
 	FUNC(__mulsi3)
 	.globl	SYM (__mulsi3)
+ELF_ALIAS(__mulsi3)
 SYM (__mulsi3):
 	movew	sp@(4), d0	/* x0 -> d0 */
 	muluw	sp@(10), d0	/* x0*y1 */
@@ -458,6 +488,7 @@ SYM (__mulsi3):
 	.text
 	FUNC(__udivsi3)
 	.globl	SYM (__udivsi3)
+ELF_ALIAS(__udivsi3)
 SYM (__udivsi3):
 #ifndef __mcoldfire__
 	movel	d2, sp@-
@@ -516,11 +547,11 @@ L6:	movel	sp@+, d2
 	moveq	IMM (31),d4
 L1:	addl	d0,d0		| shift reg pair (p,a) one bit left
 	addxl	d2,d2
-	movl	d2,d3		| subtract b from p, store in tmp.
+	movel	d2,d3		| subtract b from p, store in tmp.
 	subl	d1,d3
 	jcs	L2		| if no carry,
 	bset	IMM (0),d0	| set the low order bit of a to 1,
-	movl	d3,d2		| and store tmp in p.
+	movel	d3,d2		| and store tmp in p.
 L2:	subql	IMM (1),d4
 	jcc	L1
 	moveml	sp@,d2-d4	| restore data registers
@@ -534,6 +565,7 @@ L2:	subql	IMM (1),d4
 	.text
 	FUNC(__divsi3)
 	.globl	SYM (__divsi3)
+ELF_ALIAS(__divsi3)
 SYM (__divsi3):
 	movel	d2, sp@-
 
@@ -573,6 +605,7 @@ L3:	movel	sp@+, d2
 	FUNC(__umodsi3)
 	.globl	SYM (__umodsi3)
 SYM (__umodsi3):
+ELF_ALIAS (__umodsi3)
 	movel	sp@(8), d1	/* d1 = divisor */
 	movel	sp@(4), d0	/* d0 = dividend */
 	movel	d1, sp@-
@@ -599,6 +632,7 @@ SYM (__umodsi3):
 	FUNC(__modsi3)
 	.globl	SYM (__modsi3)
 SYM (__modsi3):
+ELF_ALIAS(__modsi3)
 	movel	sp@(8), d1	/* d1 = divisor */
 	movel	sp@(4), d0	/* d0 = dividend */
 	movel	d1, sp@-
@@ -620,13 +654,35 @@ SYM (__modsi3):
 	rts
 #endif /* L_modsi3 */
 
+#endif /* __FASTCALL__ */
 
 #ifdef  L_double
 
+|=============================================================================
+|=============================================================================
+|                         double precision routines
+|=============================================================================
+|=============================================================================
+
+| A double precision floating point number (double) has the format:
+|
+| struct _double {
+|  unsigned int sign      : 1;  /* sign bit */
+|  unsigned int exponent  : 11; /* exponent, shifted by 1022 */
+|  unsigned int fraction  : 52; /* fraction */
+| } double;
+|
+| Thus sizeof(double) = 8 (64 bits).
+|
+| All the routines are callable from C programs, and return the result
+| in the register pair d0-d1. They also preserve all registers except
+| d0-d1 and a0-a1.
+
 	.globl	SYM (_fpCCR)
 	.globl  $_exception_handler
 
 QUIET_NaN      = 0xffffffff
+INFINITY       = 0x7ff00000
 
 D_MAX_EXP      = 0x07ff
 D_BIAS         = 1022
@@ -634,29 +690,6 @@ DBL_MAX_EXP    = D_MAX_EXP - D_BIAS
 DBL_MIN_EXP    = 1 - D_BIAS
 DBL_MANT_DIG   = 53
 
-INEXACT_RESULT 		= 0x0001
-UNDERFLOW 		= 0x0002
-OVERFLOW 		= 0x0004
-DIVIDE_BY_ZERO 		= 0x0008
-INVALID_OPERATION 	= 0x0010
-
-DOUBLE_FLOAT = 2
-
-NOOP         = 0
-ADD          = 1
-MULTIPLY     = 2
-DIVIDE       = 3
-NEGATE       = 4
-COMPARE      = 5
-EXTENDSFDF   = 6
-TRUNCDFSF    = 7
-
-UNKNOWN           = -1
-ROUND_TO_NEAREST  = 0 | round result to nearest representable value
-ROUND_TO_ZERO     = 1 | round result towards zero
-ROUND_TO_PLUS     = 2 | round result towards plus infinity
-ROUND_TO_MINUS    = 3 | round result towards minus infinity
-
 | Entry points:
 
 	.globl SYM (__adddf3)
@@ -666,12 +699,14 @@ ROUND_TO_MINUS    = 3 | round result towards minus infinity
 	.globl SYM (__negdf2)
 	.globl SYM (__cmpdf2)
 	.globl SYM (__cmpdf2_internal)
+#ifdef __ELF__
 	.hidden SYM (__cmpdf2_internal)
+#endif
 
 	.text
 	.even
 
-| These are common routines to return and signal exceptions.	
+| These are common routines to return and signal exceptions.
 
 Ld$den:
 | Return and signal a denormalized number
@@ -682,8 +717,8 @@ Ld$den:
 
 Ld$infty:
 Ld$overflow:
-| Return a properly signed INFINITY and set the exception flags 
-	movel	IMM (0x7ff00000),d0
+| Return a properly signed INFINITY and set the exception flags
+	movel	IMM (INFINITY),d0
 	movel	IMM (0),d1
 	orl	d7,d0
 	movew	IMM (INEXACT_RESULT+OVERFLOW),d7
@@ -691,7 +726,7 @@ Ld$overflow:
 	PICJUMP	$_exception_handler
 
 Ld$underflow:
-| Return 0 and set the exception flags 
+| Return 0 and set the exception flags
 	movel	IMM (0),d0
 	movel	d0,d1
 	movew	IMM (INEXACT_RESULT+UNDERFLOW),d7
@@ -708,33 +743,13 @@ Ld$inop:
 
 Ld$div$0:
 | Return a properly signed INFINITY and set the exception flags
-	movel	IMM (0x7ff00000),d0
+	movel	IMM (INFINITY),d0
 	movel	IMM (0),d1
 	orl	d7,d0
 	movew	IMM (INEXACT_RESULT+DIVIDE_BY_ZERO),d7
 	moveq	IMM (DOUBLE_FLOAT),d6
 	PICJUMP	$_exception_handler
 
-|=============================================================================
-|=============================================================================
-|                         double precision routines
-|=============================================================================
-|=============================================================================
-
-| A double precision floating point number (double) has the format:
-|
-| struct _double {
-|  unsigned int sign      : 1;  /* sign bit */ 
-|  unsigned int exponent  : 11; /* exponent, shifted by 126 */
-|  unsigned int fraction  : 52; /* fraction */
-| } double;
-| 
-| Thus sizeof(double) = 8 (64 bits). 
-|
-| All the routines are callable from C programs, and return the result 
-| in the register pair d0-d1. They also preserve all registers except 
-| d0-d1 and a0-a1.
-
 |=============================================================================
 |                              __subdf3
 |=============================================================================
@@ -742,8 +757,10 @@ Ld$div$0:
 | double __subdf3(double, double);
 	FUNC(__subdf3)
 SYM (__subdf3):
+ELF_ALIAS(__subdf3)
 	bchg	IMM (31),sp@(12) | change sign of second operand
 				| and fall through, so we always add
+
 |=============================================================================
 |                              __adddf3
 |=============================================================================
@@ -751,34 +768,27 @@ SYM (__subdf3):
 | double __adddf3(double, double);
 	FUNC(__adddf3)
 SYM (__adddf3):
-#ifndef __mcoldfire__
-	link	a6,IMM (0)	| everything will be done in registers
-	moveml	d2-d7,sp@-	| save all data registers and a2 (but d0-d1)
-#else
-	link	a6,IMM (-24)
-	moveml	d2-d7,sp@
-#endif
-	movel	a6@(8),d0	| get first operand
-	movel	a6@(12),d1	| 
-	movel	a6@(16),d2	| get second operand
-	movel	a6@(20),d3	| 
+ELF_ALIAS(__adddf3)
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
+	moveml	a6@(8),d0-d3	| get first operand into d0-d1, and second operand into d2-d3
 
-	movel	d0,d7		| get d0's sign bit in d7 '
+	movel	d0,d7		| get d0's sign bit in d7
 	addl	d1,d1		| check and clear sign bit of a, and gain one
 	addxl	d0,d0		| bit of extra precision
 	beq	Ladddf$b	| if zero return second operand
 
-	movel	d2,d6		| save sign in d6 
+	movel	d2,d6		| save sign in d6
 	addl	d3,d3		| get rid of sign bit and gain one bit of
 	addxl	d2,d2		| extra precision
 	beq	Ladddf$a	| if zero return first operand
 
-	andl	IMM (0x80000000),d7 | isolate a's sign bit '
-        swap	d6		| and also b's sign bit '
+	andl	IMM (0x80000000),d7 | isolate a's sign bit
+	swap	d6		| and also b's sign bit
 #ifndef __mcoldfire__
 	andw	IMM (0x8000),d6	|
-	orw	d6,d7		| and combine them into d7, so that a's sign '
-				| bit is in the high word and b's is in the '
+	orw	d6,d7		| and combine them into d7, so that a's sign
+				| bit is in the high word and b's is in the
 				| low word, so d6 is free to be used
 #else
 	andl	IMM (0x8000),d6
@@ -792,13 +802,13 @@ SYM (__adddf3):
 	movel	IMM (0x001fffff),d6 | mask for the fraction
 	movel	IMM (0x00200000),d7 | mask to put hidden bit back
 
-	movel	d0,d4		| 
+	movel	d0,d4		|
 	andl	d6,d0		| get fraction in d0
 	notl	d6		| make d6 into mask for the exponent
 	andl	d6,d4		| get exponent in d4
 	beq	Ladddf$a$den	| branch if a is denormalized
 	cmpl	d6,d4		| check for INFINITY or NaN
-	beq	Ladddf$nf       | 
+	beq	Ladddf$nf       |
 	orl	d7,d0		| and put hidden bit back
 Ladddf$1:
 	swap	d4		| shift right exponent so that it starts
@@ -807,7 +817,7 @@ Ladddf$1:
 #else
 	lsrl	IMM (5),d4	| in bit 0 and not bit 20
 #endif
-| Now we have a's exponent in d4 and fraction in d0-d1 '
+| Now we have a's exponent in d4 and fraction in d0-d1
 	movel	d2,d5		| save b to get exponent
 	andl	d6,d5		| get exponent in d5
 	beq	Ladddf$b$den	| branch if b is denormalized
@@ -824,25 +834,17 @@ Ladddf$2:
 	lsrl	IMM (5),d5	| in bit 0 and not bit 20
 #endif
 
-| Now we have b's exponent in d5 and fraction in d2-d3. '
+| Now we have b's exponent in d5 and fraction in d2-d3.
 
-| The situation now is as follows: the signs are combined in a0, the 
+| The situation now is as follows: the signs are combined in a0, the
 | numbers are in d0-d1 (a) and d2-d3 (b), and the exponents in d4 (a)
 | and d5 (b). To do the rounding correctly we need to keep all the
 | bits until the end, so we need to use d0-d1-d2-d3 for the first number
 | and d4-d5-d6-d7 for the second. To do this we store (temporarily) the
 | exponents in a2-a3.
 
-#ifndef __mcoldfire__
-	moveml	a2-a3,sp@-	| save the address registers
-#else
-	movel	a2,sp@-	
-	movel	a3,sp@-	
-	movel	a4,sp@-	
-#endif
-
 	movel	d4,a2		| save the exponents
-	movel	d5,a3		| 
+	movel	d5,a3		|
 
 	movel	IMM (0),d7	| and move the numbers around
 	movel	d7,d6		|
@@ -851,7 +853,7 @@ Ladddf$2:
 	movel	d7,d3		|
 	movel	d7,d2		|
 
-| Here we shift the numbers until the exponents are the same, and put 
+| Here we shift the numbers until the exponents are the same, and put
 | the largest exponent in a2.
 #ifndef __mcoldfire__
 	exg	d4,a2		| get exponents back
@@ -866,10 +868,10 @@ Ladddf$2:
 	movel	a4,a3
 	cmpl	d4,d5		| compare the exponents
 #endif
-	beq	Ladddf$3	| if equal don't shift '
+	beq	Ladddf$3	| if equal don't shift
 	bhi	9f		| branch if second exponent is higher
 
-| Here we have a's exponent larger than b's, so we have to shift b. We do 
+| Here we have a's exponent larger than b's, so we have to shift b. We do
 | this by using as counter d2:
 1:	movew	d4,d2		| move largest exponent to d2
 #ifndef __mcoldfire__
@@ -885,7 +887,7 @@ Ladddf$2:
 	movel	a3,d5
 	movel	a4,a3
 #endif
-| if difference is too large we don't shift (actually, we can just exit) '
+| if difference is too large we don't shift (actually, we can just exit)
 #ifndef __mcoldfire__
 	cmpw	IMM (DBL_MANT_DIG+2),d2
 #else
@@ -900,9 +902,9 @@ Ladddf$2:
 	bge	5f
 2:
 #ifndef __mcoldfire__
-	cmpw	IMM (16),d2	| if difference >= 16, shift by words	
+	cmpw	IMM (16),d2	| if difference >= 16, shift by words
 #else
-	cmpl	IMM (16),d2	| if difference >= 16, shift by words	
+	cmpl	IMM (16),d2	| if difference >= 16, shift by words
 #endif
 	bge	6f
 	bra	3f		| enter dbra loop
@@ -933,10 +935,10 @@ Ladddf$2:
 	dbra	d2,4b
 #else
 	subql	IMM (1),d2
-	bpl	4b	
+	bpl	4b
 #endif
 	movel	IMM (0),d2
-	movel	d2,d3	
+	movel	d2,d3
 	bra	Ladddf$4
 5:
 	movel	d6,d7
@@ -964,7 +966,7 @@ Ladddf$2:
 	subl	IMM (16),d2
 #endif
 	bra	3b
-	
+
 9:
 #ifndef __mcoldfire__
 	exg	d4,d5
@@ -984,7 +986,7 @@ Ladddf$2:
 	movel	a3,d5
 	movel	a4,a3
 #endif
-| if difference is too large we don't shift (actually, we can just exit) '
+| if difference is too large we don't shift (actually, we can just exit)
 #ifndef __mcoldfire__
 	cmpw	IMM (DBL_MANT_DIG+2),d6
 #else
@@ -999,9 +1001,9 @@ Ladddf$2:
 	bge	5f
 2:
 #ifndef __mcoldfire__
-	cmpw	IMM (16),d6	| if difference >= 16, shift by words	
+	cmpw	IMM (16),d6	| if difference >= 16, shift by words
 #else
-	cmpl	IMM (16),d6	| if difference >= 16, shift by words	
+	cmpl	IMM (16),d6	| if difference >= 16, shift by words
 #endif
 	bge	6f
 	bra	3f		| enter dbra loop
@@ -1065,7 +1067,7 @@ Ladddf$2:
 	bra	3b
 Ladddf$3:
 #ifndef __mcoldfire__
-	exg	d4,a2	
+	exg	d4,a2
 	exg	d5,a3
 #else
 	movel	d4,a4
@@ -1075,13 +1077,13 @@ Ladddf$3:
 	movel	a3,d5
 	movel	a4,a3
 #endif
-Ladddf$4:	
+Ladddf$4:
 | Now we have the numbers in d0--d3 and d4--d7, the exponent in a2, and
-| the signs in a4.
+| the signs in a0.
 
 | Here we have to decide whether to add or subtract the numbers:
 #ifndef __mcoldfire__
-	exg	d7,a0		| get the signs 
+	exg	d7,a0		| get the signs
 	exg	d6,a3		| a3 is free to be used
 #else
 	movel	d7,a4
@@ -1092,11 +1094,11 @@ Ladddf$4:
 	movel	a4,a3
 #endif
 	movel	d7,d6		|
-	movew	IMM (0),d7	| get a's sign in d7 '
+	movew	IMM (0),d7	| get a's sign in d7
 	swap	d6              |
-	movew	IMM (0),d6	| and b's sign in d6 '
+	movew	IMM (0),d6	| and b's sign in d6
 	eorl	d7,d6		| compare the signs
-	bmi	Lsubdf$0	| if the signs are different we have 
+	bmi	Lsubdf$0	| if the signs are different we have
 				| to subtract
 #ifndef __mcoldfire__
 	exg	d7,a0		| else we add the numbers
@@ -1111,26 +1113,18 @@ Ladddf$4:
 #endif
 	addl	d7,d3		|
 	addxl	d6,d2		|
-	addxl	d5,d1		| 
+	addxl	d5,d1		|
 	addxl	d4,d0           |
 
 	movel	a2,d4		| return exponent to d4
-	movel	a0,d7		| 
+	movel	a0,d7		|
 	andl	IMM (0x80000000),d7 | d7 now has the sign
 
-#ifndef __mcoldfire__
-	moveml	sp@+,a2-a3	
-#else
-	movel	sp@+,a4	
-	movel	sp@+,a3	
-	movel	sp@+,a2	
-#endif
-
 | Before rounding normalize so bit #DBL_MANT_DIG is set (we will consider
 | the case of denormalized numbers in the rounding routine itself).
-| As in the addition (not in the subtraction!) we could have set 
+| As in the addition (not in the subtraction!) we could have set
 | one more bit we check this:
-	btst	IMM (DBL_MANT_DIG+1),d0	
+	btst	IMM (DBL_MANT_DIG+1-32),d0
 	beq	1f
 #ifndef __mcoldfire__
 	lsrl	IMM (1),d0
@@ -1155,12 +1149,12 @@ Ladddf$4:
 	addl	IMM (1),d4
 #endif
 1:
-	lea	pc@(Ladddf$5),a0 | to return from rounding routine
-	PICLEA	SYM (_fpCCR),a1	| check the rounding mode
+	PICLEA	SYM (_fpCCR),a0	| check the rounding mode
 #ifdef __mcoldfire__
 	clrl	d6
 #endif
-	movew	a1@(6),d6	| rounding mode in d6
+	movew	a0@(6),d6	| rounding mode in d6
+	lea	pc@(Ladddf$5),a0 | to return from rounding routine
 	beq	Lround$to$nearest
 #ifndef __mcoldfire__
 	cmpw	IMM (ROUND_TO_PLUS),d6
@@ -1173,18 +1167,18 @@ Ladddf$4:
 Ladddf$5:
 | Put back the exponent and check for overflow
 #ifndef __mcoldfire__
-	cmpw	IMM (0x7ff),d4	| is the exponent big?
+	cmpw	IMM (D_MAX_EXP),d4	| is the exponent big?
 #else
-	cmpl	IMM (0x7ff),d4	| is the exponent big?
+	cmpl	IMM (D_MAX_EXP),d4	| is the exponent big?
 #endif
 	bge	1f
-	bclr	IMM (DBL_MANT_DIG-1),d0
+	bclr	IMM (DBL_MANT_DIG-1-32),d0
 #ifndef __mcoldfire__
 	lslw	IMM (4),d4	| put exponent back into position
 #else
 	lsll	IMM (4),d4	| put exponent back into position
 #endif
-	swap	d0		| 
+	swap	d0		|
 #ifndef __mcoldfire__
 	orw	d4,d0		|
 #else
@@ -1222,23 +1216,16 @@ Lsubdf$0:
 	negxl	d2		|
 	negxl	d1              | and negate result
 	negxl	d0              |
-1:	
+1:
 	movel	a2,d4		| return exponent to d4
 	movel	a0,d7
 	andl	IMM (0x80000000),d7 | isolate sign bit
-#ifndef __mcoldfire__
-	moveml	sp@+,a2-a3	|
-#else
-	movel	sp@+,a4
-	movel	sp@+,a3
-	movel	sp@+,a2
-#endif
 
 | Before rounding normalize so bit #DBL_MANT_DIG is set (we will consider
 | the case of denormalized numbers in the rounding routine itself).
-| As in the addition (not in the subtraction!) we could have set 
+| As in the addition (not in the subtraction!) we could have set
 | one more bit we check this:
-	btst	IMM (DBL_MANT_DIG+1),d0	
+	btst	IMM (DBL_MANT_DIG+1-32),d0
 	beq	1f
 #ifndef __mcoldfire__
 	lsrl	IMM (1),d0
@@ -1263,12 +1250,12 @@ Lsubdf$0:
 	addl	IMM (1),d4
 #endif
 1:
-	lea	pc@(Lsubdf$1),a0 | to return from rounding routine
-	PICLEA	SYM (_fpCCR),a1	| check the rounding mode
+	PICLEA	SYM (_fpCCR),a0	| check the rounding mode
 #ifdef __mcoldfire__
 	clrl	d6
 #endif
-	movew	a1@(6),d6	| rounding mode in d6
+	movew	a0@(6),d6	| rounding mode in d6
+	lea	pc@(Lsubdf$1),a0 | to return from rounding routine
 	beq	Lround$to$nearest
 #ifndef __mcoldfire__
 	cmpw	IMM (ROUND_TO_PLUS),d6
@@ -1279,14 +1266,14 @@ Lsubdf$0:
 	blt	Lround$to$zero
 	bra	Lround$to$plus
 Lsubdf$1:
-| Put back the exponent and sign (we don't have overflow). '
-	bclr	IMM (DBL_MANT_DIG-1),d0	
+| Put back the exponent and sign (we don't have overflow).
+	bclr	IMM (DBL_MANT_DIG-1-32),d0
 #ifndef __mcoldfire__
 	lslw	IMM (4),d4	| put exponent back into position
 #else
 	lsll	IMM (4),d4	| put exponent back into position
 #endif
-	swap	d0		| 
+	swap	d0		|
 #ifndef __mcoldfire__
 	orw	d4,d0		|
 #else
@@ -1295,50 +1282,28 @@ Lsubdf$1:
 	swap	d0		|
 	bra	Ladddf$ret
 
-| If one of the numbers was too small (difference of exponents >= 
-| DBL_MANT_DIG+1) we return the other (and now we don't have to '
+| If one of the numbers was too small (difference of exponents >=
+| DBL_MANT_DIG+1) we return the other (and now we don't have to
 | check for finiteness or zero).
 Ladddf$a$small:
-#ifndef __mcoldfire__
-	moveml	sp@+,a2-a3	
-#else
-	movel	sp@+,a4
-	movel	sp@+,a3
-	movel	sp@+,a2
-#endif
 	movel	a6@(16),d0
 	movel	a6@(20),d1
 	PICLEA	SYM (_fpCCR),a0
-	movew	IMM (0),a0@
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7	| restore data registers
-#else
-	moveml	sp@,d2-d7
+	clrw	a0@
+	moveml	sp@,d2-d7/a2-a5	| restore data registers
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6		| and return
 	rts
 
 Ladddf$b$small:
-#ifndef __mcoldfire__
-	moveml	sp@+,a2-a3	
-#else
-	movel	sp@+,a4	
-	movel	sp@+,a3	
-	movel	sp@+,a2	
-#endif
 	movel	a6@(8),d0
 	movel	a6@(12),d1
 	PICLEA	SYM (_fpCCR),a0
-	movew	IMM (0),a0@
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7	| restore data registers
-#else
-	moveml	sp@,d2-d7
+	clrw	a0@
+	moveml	sp@,d2-d7/a2-a5
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6		| and return
 	rts
 
@@ -1372,7 +1337,7 @@ Ladddf$a:
 	bclr	IMM (31),d0		|
 	cmpl	IMM (0x7ff00000),d0	|
 	bge	2f			|
-	movel	d0,d0           	| check for zero, since we don't  '
+	movel	d0,d0           	| check for zero, since we don't
 	bne	Ladddf$ret		| want to return -0 by mistake
 	bclr	IMM (31),d7		|
 	bra	Ladddf$ret		|
@@ -1381,28 +1346,17 @@ Ladddf$a:
 	orl	d1,d0			|
 	bne	Ld$inop         	|
 	bra	Ld$infty		|
-	
+
 Ladddf$ret$1:
-#ifndef __mcoldfire__
-	moveml	sp@+,a2-a3	| restore regs and exit
-#else
-	movel	sp@+,a4
-	movel	sp@+,a3
-	movel	sp@+,a2
-#endif
 
 Ladddf$ret:
 | Normal exit.
 	PICLEA	SYM (_fpCCR),a0
-	movew	IMM (0),a0@
+	clrw	a0@
 	orl	d7,d0		| put sign bit back
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7
-#else
-	moveml	sp@,d2-d7
+	moveml	sp@,d2-d7/a2-a5
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6
 	rts
 
@@ -1426,25 +1380,25 @@ Ladddf$nf:
 | executed very often. We sacrifice speed for clarity here.
 	movel	a6@(8),d0	| get the numbers back (remember that we
 	movel	a6@(12),d1	| did some processing already)
-	movel	a6@(16),d2	| 
-	movel	a6@(20),d3	| 
-	movel	IMM (0x7ff00000),d4 | useful constant (INFINITY)
+	movel	a6@(16),d2	|
+	movel	a6@(20),d3	|
+	movel	IMM (INFINITY),d4 | useful constant (INFINITY)
 	movel	d0,d7		| save sign bits
-	movel	d2,d6		| 
+	movel	d2,d6		|
 	bclr	IMM (31),d0	| clear sign bits
-	bclr	IMM (31),d2	| 
+	bclr	IMM (31),d2	|
 | We know that one of them is either NaN of +/-INFINITY
 | Check for NaN (if either one is NaN return NaN)
 	cmpl	d4,d0		| check first a (d0)
 	bhi	Ld$inop		| if d0 > 0x7ff00000 or equal and
 	bne	2f
 	tstl	d1		| d1 > 0, a is NaN
-	bne	Ld$inop		| 
+	bne	Ld$inop		|
 2:	cmpl	d4,d2		| check now b (d1)
-	bhi	Ld$inop		| 
+	bhi	Ld$inop		|
 	bne	3f
-	tstl	d3		| 
-	bne	Ld$inop		| 
+	tstl	d3		|
+	bne	Ld$inop		|
 3:
 | Now comes the check for +/-INFINITY. We know that both are (maybe not
 | finite) numbers, but we have to check if both are infinite whether we
@@ -1461,8 +1415,8 @@ Ladddf$nf:
 	bne	1f		| if d0 <> d2 they are not equal
 	cmpl	d3,d1		| if d0 == d2 test d3 and d1
 	beq	Ld$inop		| if equal return NaN
-1:	
-	andl	IMM (0x80000000),d7 | get a's sign bit '
+1:
+	andl	IMM (0x80000000),d7 | get a's sign bit
 	cmpl	d4,d0		| test now for infinity
 	beq	Ld$infty	| if a is INFINITY return with this sign
 	bchg	IMM (31),d7	| else we know b is INFINITY and has
@@ -1475,34 +1429,27 @@ Ladddf$nf:
 | double __muldf3(double, double);
 	FUNC(__muldf3)
 SYM (__muldf3):
-#ifndef __mcoldfire__
-	link	a6,IMM (0)
-	moveml	d2-d7,sp@-
-#else
-	link	a6,IMM (-24)
-	moveml	d2-d7,sp@
-#endif
-	movel	a6@(8),d0		| get a into d0-d1
-	movel	a6@(12),d1		| 
-	movel	a6@(16),d2		| and b into d2-d3
-	movel	a6@(20),d3		|
+ELF_ALIAS(__muldf3)
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
+	moveml	a6@(8),d0-d3	| get a into d0-d1, and b into d2-d3
 	movel	d0,d7			| d7 will hold the sign of the product
 	eorl	d2,d7			|
 	andl	IMM (0x80000000),d7	|
-	movel	d7,a0			| save sign bit into a0 
-	movel	IMM (0x7ff00000),d7	| useful constant (+INFINITY)
+	movel	d7,a0			| save sign bit into a0
+	movel	IMM (INFINITY),d7	| useful constant (+INFINITY)
 	movel	d7,d6			| another (mask for fraction)
 	notl	d6			|
-	bclr	IMM (31),d0		| get rid of a's sign bit '
-	movel	d0,d4			| 
-	orl	d1,d4			| 
+	bclr	IMM (31),d0		| get rid of a's sign bit
+	movel	d0,d4			|
+	orl	d1,d4			|
 	beq	Lmuldf$a$0		| branch if a is zero
 	movel	d0,d4			|
-	bclr	IMM (31),d2		| get rid of b's sign bit '
+	bclr	IMM (31),d2		| get rid of b's sign bit
 	movel	d2,d5			|
-	orl	d3,d5			| 
+	orl	d3,d5			|
 	beq	Lmuldf$b$0		| branch if b is zero
-	movel	d2,d5			| 
+	movel	d2,d5			|
 	cmpl	d7,d0			| is a big?
 	bhi	Lmuldf$inop		| if a is NaN return NaN
 	beq	Lmuldf$a$nf		| we still have to check d1 and b ...
@@ -1517,11 +1464,11 @@ SYM (__muldf3):
 	orl	IMM (0x00100000),d0	| and put hidden bit back
 	swap	d4			| I like exponents in the first byte
 #ifndef __mcoldfire__
-	lsrw	IMM (4),d4		| 
+	lsrw	IMM (4),d4		|
 #else
-	lsrl	IMM (4),d4		| 
+	lsrl	IMM (4),d4		|
 #endif
-Lmuldf$1:			
+Lmuldf$1:
 	andl	d7,d5			|
 	beq	Lmuldf$b$den		|
 	andl	d6,d2			|
@@ -1542,8 +1489,8 @@ Lmuldf$2:				|
 #endif
 
 | We are now ready to do the multiplication. The situation is as follows:
-| both a and b have bit 52 ( bit 20 of d0 and d2) set (even if they were 
-| denormalized to start with!), which means that in the product bit 104 
+| both a and b have bit 52 ( bit 20 of d0 and d2) set (even if they were
+| denormalized to start with!), which means that in the product bit 104
 | (which will correspond to bit 8 of the fourth long) is set.
 
 | Here we have to do the product.
@@ -1551,13 +1498,6 @@ Lmuldf$2:				|
 | enough to keep everything in them. So we use the address registers to keep
 | some intermediate data.
 
-#ifndef __mcoldfire__
-	moveml	a2-a3,sp@-	| save a2 and a3 for temporary use
-#else
-	movel	a2,sp@-
-	movel	a3,sp@-
-	movel	a4,sp@-
-#endif
 	movel	IMM (0),a2	| a2 is a null register
 	movel	d4,a3		| and a3 will preserve the exponent
 
@@ -1591,8 +1531,8 @@ Lmuldf$2:				|
 	movel	d3,d1           |
 	movel	d3,d0	        |
 
-| We use a1 as counter:	
-	movel	IMM (DBL_MANT_DIG-1),a1		
+| We use a1 as counter:
+	movel	IMM (DBL_MANT_DIG-1),a1
 #ifndef __mcoldfire__
 	exg	d7,a1
 #else
@@ -1628,7 +1568,7 @@ Lmuldf$2:				|
 	addxl	d7,d1		|
 	addxl	d7,d0		|
 #ifndef __mcoldfire__
-	exg	d7,a2		| 
+	exg	d7,a2		|
 #else
 	movel	d7,a4
 	movel	a2,d7
@@ -1647,16 +1587,9 @@ Lmuldf$2:				|
 #endif
 
 	movel	a3,d4		| restore exponent
-#ifndef __mcoldfire__
-	moveml	sp@+,a2-a3
-#else
-	movel	sp@+,a4
-	movel	sp@+,a3
-	movel	sp@+,a2
-#endif
 
-| Now we have the product in d0-d1-d2-d3, with bit 8 of d0 set. The 
-| first thing to do now is to normalize it so bit 8 becomes bit 
+| Now we have the product in d0-d1-d2-d3, with bit 8 of d0 set. The
+| first thing to do now is to normalize it so bit 8 becomes bit
 | DBL_MANT_DIG-32 (to do the rounding); later we will shift right.
 	swap	d0
 	swap	d1
@@ -1695,7 +1628,7 @@ Lmuldf$2:				|
 	orl	d7,d1
 	lsrl	IMM (3),d0
 #endif
-	
+
 | Now round, check for over- and underflow, and exit.
 	movel	a0,d7		| get sign bit back into d7
 	moveq	IMM (MULTIPLY),d5
@@ -1757,18 +1690,14 @@ Lmuldf$a$0:
 1:	cmpl	IMM (0x7ff00000),d2 | check for non-finiteness
 	bge	Ld$inop		| in case NaN or +/-INFINITY return NaN
 	PICLEA	SYM (_fpCCR),a0
-	movew	IMM (0),a0@
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7
-#else
-	moveml	sp@,d2-d7
+	clrw	a0@
+	moveml	sp@,d2-d7/a2-a5
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6
 	rts
 
-| If a number is denormalized we put an exponent of 1 but do not put the 
+| If a number is denormalized we put an exponent of 1 but do not put the
 | hidden bit back into the fraction; instead we shift left until bit 21
 | (the hidden bit) is set, adjusting the exponent accordingly. We do this
 | to ensure that the product of the fractions is close to 1.
@@ -1808,30 +1737,23 @@ Lmuldf$b$den:
 | double __divdf3(double, double);
 	FUNC(__divdf3)
 SYM (__divdf3):
-#ifndef __mcoldfire__
-	link	a6,IMM (0)
-	moveml	d2-d7,sp@-
-#else
-	link	a6,IMM (-24)
-	moveml	d2-d7,sp@
-#endif
-	movel	a6@(8),d0	| get a into d0-d1
-	movel	a6@(12),d1	| 
-	movel	a6@(16),d2	| and b into d2-d3
-	movel	a6@(20),d3	|
+ELF_ALIAS(__divdf3)
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
+	moveml	a6@(8),d0-d3	| get a into d0-d1, and b into d2-d3
 	movel	d0,d7		| d7 will hold the sign of the result
 	eorl	d2,d7		|
 	andl	IMM (0x80000000),d7
 	movel	d7,a0		| save sign into a0
-	movel	IMM (0x7ff00000),d7 | useful constant (+INFINITY)
+	movel	IMM (INFINITY),d7 | useful constant (+INFINITY)
 	movel	d7,d6		| another (mask for fraction)
 	notl	d6		|
-	bclr	IMM (31),d0	| get rid of a's sign bit '
+	bclr	IMM (31),d0	| get rid of a's sign bit
 	movel	d0,d4		|
 	orl	d1,d4		|
 	beq	Ldivdf$a$0	| branch if a is zero
 	movel	d0,d4		|
-	bclr	IMM (31),d2	| get rid of b's sign bit '
+	bclr	IMM (31),d2	| get rid of b's sign bit
 	movel	d2,d5		|
 	orl	d3,d5		|
 	beq	Ldivdf$b$0	| branch if b is zero
@@ -1839,7 +1761,7 @@ SYM (__divdf3):
 	cmpl	d7,d0		| is a big?
 	bhi	Ldivdf$inop	| if a is NaN return NaN
 	beq	Ldivdf$a$nf	| if d0 == 0x7ff00000 we check d1
-	cmpl	d7,d2		| now compare b with INFINITY 
+	cmpl	d7,d2		| now compare b with INFINITY
 	bhi	Ldivdf$inop	| if b is NaN return NaN
 	beq	Ldivdf$b$nf	| if d2 == 0x7ff00000 we check d3
 | Here we have both numbers finite and nonzero (and with no sign bit).
@@ -1854,11 +1776,11 @@ SYM (__divdf3):
 	orl	IMM (0x00100000),d0 | and put hidden bit back
 	swap	d4		| I like exponents in the first byte
 #ifndef __mcoldfire__
-	lsrw	IMM (4),d4	| 
+	lsrw	IMM (4),d4	|
 #else
-	lsrl	IMM (4),d4	| 
+	lsrl	IMM (4),d4	|
 #endif
-Ldivdf$1:			| 
+Ldivdf$1:			|
 	andl	d7,d5		|
 	beq	Ldivdf$b$den	|
 	andl	d6,d2		|
@@ -1881,7 +1803,7 @@ Ldivdf$2:			|
 | We are now ready to do the division. We have prepared things in such a way
 | that the ratio of the fractions will be less than 2 but greater than 1/2.
 | At this point the registers in use are:
-| d0-d1	hold a (first operand, bit DBL_MANT_DIG-32=0, bit 
+| d0-d1	hold a (first operand, bit DBL_MANT_DIG-32=0, bit
 | DBL_MANT_DIG-1-32=1)
 | d2-d3	hold b (second operand, bit DBL_MANT_DIG-32=1)
 | d4	holds the difference of the exponents, corrected by the bias
@@ -1890,19 +1812,19 @@ Ldivdf$2:			|
 | To do the rounding correctly we need to keep information about the
 | nonsignificant bits. One way to do this would be to do the division
 | using four registers; another is to use two registers (as originally
-| I did), but use a sticky bit to preserve information about the 
+| I did), but use a sticky bit to preserve information about the
 | fractional part. Note that we can keep that info in a1, which is not
 | used.
 	movel	IMM (0),d6	| d6-d7 will hold the result
-	movel	d6,d7		| 
+	movel	d6,d7		|
 	movel	IMM (0),a1	| and a1 will hold the sticky bit
 
-	movel	IMM (DBL_MANT_DIG-32+1),d5	
-	
+	movel	IMM (DBL_MANT_DIG-32+1),d5
+
 1:	cmpl	d0,d2		| is a < b?
 	bhi	3f		| if b > a skip the following
 	beq	4f		| if d0==d2 check d1 and d3
-2:	subl	d3,d1		| 
+2:	subl	d3,d1		|
 	subxl	d2,d0		| a <-- a - b
 	bset	d5,d6		| set the corresponding bit in d6
 3:	addl	d1,d1		| shift a by 1
@@ -1913,7 +1835,7 @@ Ldivdf$2:			|
 	subql	IMM (1), d5
 	bpl	1b
 #endif
-	bra	5f			
+	bra	5f
 4:	cmpl	d1,d3		| here d0==d2, so check d1 and d3
 	bhi	3b		| if d1 > d2 skip the subtraction
 	bra	2b		| else go do it
@@ -1924,7 +1846,7 @@ Ldivdf$2:			|
 1:	cmpl	d0,d2		| is a < b?
 	bhi	3f		| if b > a skip the following
 	beq	4f		| if d0==d2 check d1 and d3
-2:	subl	d3,d1		| 
+2:	subl	d3,d1		|
 	subxl	d2,d0		| a <-- a - b
 	bset	d5,d7		| set the corresponding bit in d7
 3:	addl	d1,d1		| shift a by 1
@@ -1935,7 +1857,7 @@ Ldivdf$2:			|
 	subql	IMM (1), d5
 	bpl	1b
 #endif
-	bra	5f			
+	bra	5f
 4:	cmpl	d1,d3		| here d0==d2, so check d1 and d3
 	bhi	3b		| if d1 > d2 skip the subtraction
 	bra	2b		| else go do it
@@ -1955,12 +1877,12 @@ Ldivdf$2:			|
 #endif
 	movel	IMM (0),d2	| here no sticky bit was found
 	movel	d2,d3
-	bra	5f			
+	bra	5f
 3:	cmpl	d1,d3		| here d0==d2, so check d1 and d3
 	bhi	2b		| if d1 > d2 go back
 4:
 | Here put the sticky bit in d2-d3 (in the position which actually corresponds
-| to it; if you don't do this the algorithm loses in some cases). '
+| to it; if you don't do this the algorithm loses in some cases).
 	movel	IMM (0),d2
 	movel	d2,d3
 #ifndef __mcoldfire__
@@ -2032,38 +1954,34 @@ Ldivdf$a$0:
 | return a properly signed zero.
 	moveq	IMM (DIVIDE),d5
 	bclr	IMM (31),d2	|
-	movel	d2,d4		| 
-	orl	d3,d4		| 
+	movel	d2,d4		|
+	orl	d3,d4		|
 	beq	Ld$inop		| if b is also zero return NaN
-	cmpl	IMM (0x7ff00000),d2 | check for NaN
-	bhi	Ld$inop		| 
+	cmpl	IMM (INFINITY),d2 | check for NaN
+	bhi	Ld$inop		|
 	blt	1f		|
 	tstl	d3		|
 	bne	Ld$inop		|
 1:	movel	a0,d0		| else return signed zero
-	moveq	IMM(0),d1	| 
+	moveq	IMM(0),d1	|
 	PICLEA	SYM (_fpCCR),a0	| clear exception flags
-	movew	IMM (0),a0@	|
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7	| 
-#else
-	moveml	sp@,d2-d7	| 
+	clrw	a0@	|
+	moveml	sp@,d2-d7/a2-a5	|
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
-	unlk	a6		| 
-	rts			| 	
+	unlk	a6		|
+	rts			|
 
 Ldivdf$b$0:
 	moveq	IMM (DIVIDE),d5
 | If we got here a is not zero. Check if a is NaN; in that case return NaN,
-| else return +/-INFINITY. Remember that a is in d0 with the sign bit 
+| else return +/-INFINITY. Remember that a is in d0 with the sign bit
 | cleared already.
-	movel	a0,d7		| put a's sign bit back in d7 '
-	cmpl	IMM (0x7ff00000),d0 | compare d0 with INFINITY
+	movel	a0,d7		| put a's sign bit back in d7
+	cmpl	IMM (INFINITY),d0 | compare d0 with INFINITY
 	bhi	Ld$inop		| if larger it is NaN
-	tstl	d1		| 
-	bne	Ld$inop		| 
+	tstl	d1		|
+	bne	Ld$inop		|
 	bra	Ld$div$0	| else signal DIVIDE_BY_ZERO
 
 Ldivdf$b$nf:
@@ -2079,13 +1997,13 @@ Ldivdf$a$nf:
 	tstl	d1		|
 	bne	Ld$inop		| if d1 <> 0, a is NaN
 | If a is INFINITY we have to check b
-	cmpl	d7,d2		| compare b with INFINITY 
+	cmpl	d7,d2		| compare b with INFINITY
 	bge	Ld$inop		| if b is NaN or INFINITY return NaN
 	tstl	d3		|
-	bne	Ld$inop		| 
+	bne	Ld$inop		|
 	bra	Ld$overflow	| else return overflow
 
-| If a number is denormalized we put an exponent of 1 but do not put the 
+| If a number is denormalized we put an exponent of 1 but do not put the
 | bit back into the fraction.
 Ldivdf$a$den:
 	movel	IMM (1),d4
@@ -2122,32 +2040,32 @@ Lround$exit:
 
 | First check for underlow in the exponent:
 #ifndef __mcoldfire__
-	cmpw	IMM (-DBL_MANT_DIG-1),d4		
+	cmpw	IMM (-DBL_MANT_DIG-1),d4
 #else
-	cmpl	IMM (-DBL_MANT_DIG-1),d4		
+	cmpl	IMM (-DBL_MANT_DIG-1),d4
 #endif
-	blt	Ld$underflow	
-| It could happen that the exponent is less than 1, in which case the 
-| number is denormalized. In this case we shift right and adjust the 
-| exponent until it becomes 1 or the fraction is zero (in the latter case 
+	blt	Ld$underflow
+| It could happen that the exponent is less than 1, in which case the
+| number is denormalized. In this case we shift right and adjust the
+| exponent until it becomes 1 or the fraction is zero (in the latter case
 | we signal underflow and return zero).
 	movel	d7,a0		|
 	movel	IMM (0),d6	| use d6-d7 to collect bits flushed right
 	movel	d6,d7		| use d6-d7 to collect bits flushed right
 #ifndef __mcoldfire__
-	cmpw	IMM (1),d4	| if the exponent is less than 1 we 
+	cmpw	IMM (1),d4	| if the exponent is less than 1 we
 #else
-	cmpl	IMM (1),d4	| if the exponent is less than 1 we 
+	cmpl	IMM (1),d4	| if the exponent is less than 1 we
 #endif
 	bge	2f		| have to shift right (denormalize)
 1:
 #ifndef __mcoldfire__
 	addw	IMM (1),d4	| adjust the exponent
-	lsrl	IMM (1),d0	| shift right once 
+	lsrl	IMM (1),d0	| shift right once
 	roxrl	IMM (1),d1	|
 	roxrl	IMM (1),d2	|
 	roxrl	IMM (1),d3	|
-	roxrl	IMM (1),d6	| 
+	roxrl	IMM (1),d6	|
 	roxrl	IMM (1),d7	|
 	cmpw	IMM (1),d4	| is the exponent 1 already?
 #else
@@ -2177,17 +2095,17 @@ Lround$exit:
 #endif
 	beq	2f		| if not loop back
 	bra	1b              |
-	bra	Ld$underflow	| safety check, shouldn't execute '
-2:	orl	d6,d2		| this is a trick so we don't lose  '
+	bra	Ld$underflow	| safety check, shouldn't execute
+2:	orl	d6,d2		| this is a trick so we don't lose
 	orl	d7,d3		| the bits which were flushed right
 	movel	a0,d7		| get back sign bit into d7
 | Now call the rounding routine (which takes care of denormalized numbers):
-	lea	pc@(Lround$0),a0 | to return from rounding routine
-	PICLEA	SYM (_fpCCR),a1	| check the rounding mode
+	PICLEA	SYM (_fpCCR),a0	| check the rounding mode
 #ifdef __mcoldfire__
 	clrl	d6
 #endif
-	movew	a1@(6),d6	| rounding mode in d6
+	movew	a0@(6),d6	| rounding mode in d6
+	lea	pc@(Lround$0),a0 | to return from rounding routine
 	beq	Lround$to$nearest
 #ifndef __mcoldfire__
 	cmpw	IMM (ROUND_TO_PLUS),d6
@@ -2201,14 +2119,14 @@ Lround$0:
 | Here we have a correctly rounded result (either normalized or denormalized).
 
 | Here we should have either a normalized number or a denormalized one, and
-| the exponent is necessarily larger or equal to 1 (so we don't have to  '
-| check again for underflow!). We have to check for overflow or for a 
+| the exponent is necessarily larger or equal to 1 (so we don't have to
+| check again for underflow!). We have to check for overflow or for a
 | denormalized number (which also signals underflow).
 | Check for overflow (i.e., exponent >= 0x7ff).
 #ifndef __mcoldfire__
-	cmpw	IMM (0x07ff),d4
+	cmpw	IMM (D_MAX_EXP),d4
 #else
-	cmpl	IMM (0x07ff),d4
+	cmpl	IMM (D_MAX_EXP),d4
 #endif
 	bge	Ld$overflow
 | Now check for a denormalized number (exponent==0):
@@ -2224,22 +2142,18 @@ Lround$0:
 	bclr	IMM (DBL_MANT_DIG-32-1),d0
 	swap	d0		| and put back exponent
 #ifndef __mcoldfire__
-	orw	d4,d0		| 
+	orw	d4,d0		|
 #else
-	orl	d4,d0		| 
+	orl	d4,d0		|
 #endif
 	swap	d0		|
 	orl	d7,d0		| and sign also
 
 	PICLEA	SYM (_fpCCR),a0
-	movew	IMM (0),a0@
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7
-#else
-	moveml	sp@,d2-d7
+	clrw	a0@
+	moveml	sp@,d2-d7/a2-a5
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6
 	rts
 
@@ -2250,13 +2164,9 @@ Lround$0:
 | double __negdf2(double, double);
 	FUNC(__negdf2)
 SYM (__negdf2):
-#ifndef __mcoldfire__
-	link	a6,IMM (0)
-	moveml	d2-d7,sp@-
-#else
-	link	a6,IMM (-24)
-	moveml	d2-d7,sp@
-#endif
+ELF_ALIAS(__negdf2)
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
 	moveq	IMM (NEGATE),d5
 	movel	a6@(8),d0	| get number to negate in d0-d1
 	movel	a6@(12),d1	|
@@ -2273,16 +2183,12 @@ SYM (__negdf2):
 	bne	Ld$inop		|
 	movel	d0,d7		| else get sign and return INFINITY
 	andl	IMM (0x80000000),d7
-	bra	Ld$infty		
+	bra	Ld$infty
 1:	PICLEA	SYM (_fpCCR),a0
-	movew	IMM (0),a0@
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7
-#else
-	moveml	sp@,d2-d7
+	clrw	a0@
+	moveml	sp@,d2-d7/a2-a5
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6
 	rts
 2:	bclr	IMM (31),d0
@@ -2292,24 +2198,54 @@ SYM (__negdf2):
 |                              __cmpdf2
 |=============================================================================
 
-GREATER =  1
-LESS    = -1
-EQUAL   =  0
-
-| int __cmpdf2_internal(double, double, int);
-SYM (__cmpdf2_internal):
-#ifndef __mcoldfire__
-	link	a6,IMM (0)
-	moveml	d2-d7,sp@- 	| save registers
-#else
-	link	a6,IMM (-24)
-	moveml	d2-d7,sp@
-#endif
-	moveq	IMM (COMPARE),d5
-	movel	a6@(8),d0	| get first operand
-	movel	a6@(12),d1	|
-	movel	a6@(16),d2	| get second operand
-	movel	a6@(20),d3	|
+| gcc expects the routines __eqdf2, __nedf2, __gtdf2, __gedf2,
+| __ledf2, __ltdf2 to all return the same value as a direct call to
+| __cmpdf2 would.  In this implementation, each of these routines
+| simply calls __cmpdf2.  It would be more efficient to give the
+| __cmpdf2 routine several names, but separating them out will make it
+| easier to write efficient versions of these routines someday.
+| If the operands recompare unordered unordered __gtdf2 and __gedf2 return -1.
+| The other routines return 1.
+
+	FUNC(__gtdf2)
+	.globl	SYM (__gtdf2)
+SYM (__gtdf2):
+ELF_ALIAS(__gtdf2)
+	FUNC(__gedf2)
+	.globl	SYM (__gedf2)
+SYM (__gedf2):
+ELF_ALIAS(__gedf2)
+	lea	LESS,a0
+	jbra SYM(__cmpdf2_internal)
+
+	FUNC(__eqdf2)
+	.globl	SYM (__eqdf2)
+SYM (__eqdf2):
+ELF_ALIAS(__eqdf2)
+	FUNC(__nedf2)
+	.globl	SYM (__nedf2)
+SYM (__nedf2):
+ELF_ALIAS(__nedf2)
+	FUNC(__ltdf2)
+	.globl	SYM (__ltdf2)
+SYM (__ltdf2):
+ELF_ALIAS(__ltdf2)
+	FUNC(__ledf2)
+	.globl	SYM (__ledf2)
+SYM (__ledf2):
+ELF_ALIAS(__ledf2)
+
+| int __cmpdf2(double, double);
+	FUNC(__cmpdf2)
+SYM (__cmpdf2):
+ELF_ALIAS(__cmpdf2)
+	lea	GREATER,a0
+
+| int __cmpdf2_internal(double, double, int);
+SYM (__cmpdf2_internal):
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
+	moveml	a6@(8),d0-d3	| get first operand into d0-d1, and second operand into d2-d3
 | First check if a and/or b are (+/-) zero and in that case clear
 | the sign bit.
 	movel	d0,d6		| copy signs into d6 (a) and d7(b)
@@ -2317,14 +2253,14 @@ SYM (__cmpdf2_internal):
 	movel	d2,d7		|
 	bclr	IMM (31),d2	|
 	cmpl	IMM (0x7ff00000),d0 | check for a == NaN
-	bhi	Lcmpd$inop		| if d0 > 0x7ff00000, a is NaN
+	bhi	Lcmpdf$inop		| if d0 > 0x7ff00000, a is NaN
 	beq	Lcmpdf$a$nf	| if equal can be INFINITY, so check d1
 	movel	d0,d4		| copy into d4 to test for zero
 	orl	d1,d4		|
 	beq	Lcmpdf$a$0	|
 Lcmpdf$0:
 	cmpl	IMM (0x7ff00000),d2 | check for b == NaN
-	bhi	Lcmpd$inop		| if d2 > 0x7ff00000, b is NaN
+	bhi	Lcmpdf$inop		| if d2 > 0x7ff00000, b is NaN
 	beq	Lcmpdf$b$nf	| if equal can be INFINITY, so check d3
 	movel	d2,d4		|
 	orl	d3,d4		|
@@ -2365,39 +2301,27 @@ Lcmpdf$1:
 	bne	Lcmpdf$a$gt$b	| |b| < |a|
 | If we got here a == b.
 	movel	IMM (EQUAL),d0
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7 	| put back the registers
-#else
-	moveml	sp@,d2-d7
+	moveml	sp@,d2-d7/a2-a5 	| put back the registers
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6
 	rts
 Lcmpdf$a$gt$b:
 	movel	IMM (GREATER),d0
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7 	| put back the registers
-#else
-	moveml	sp@,d2-d7
+	moveml	sp@,d2-d7/a2-a5 	| put back the registers
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6
 	rts
 Lcmpdf$b$gt$a:
 	movel	IMM (LESS),d0
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7 	| put back the registers
-#else
-	moveml	sp@,d2-d7
+	moveml	sp@,d2-d7/a2-a5 	| put back the registers
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6
 	rts
 
-Lcmpdf$a$0:	
+Lcmpdf$a$0:
 	bclr	IMM (31),d6
 	bra	Lcmpdf$0
 Lcmpdf$b$0:
@@ -2406,39 +2330,27 @@ Lcmpdf$b$0:
 
 Lcmpdf$a$nf:
 	tstl	d1
-	bne	Ld$inop
+	bne	Lcmpdf$inop
 	bra	Lcmpdf$0
 
 Lcmpdf$b$nf:
 	tstl	d3
-	bne	Ld$inop
+	bne	Lcmpdf$inop
 	bra	Lcmpdf$1
 
-Lcmpd$inop:
-	movl	a6@(24),d0
+Lcmpdf$inop:
+	movel	a0,d0
+	moveq	IMM (COMPARE),d5
 	moveq	IMM (INEXACT_RESULT+INVALID_OPERATION),d7
 	moveq	IMM (DOUBLE_FLOAT),d6
 	PICJUMP	$_exception_handler
 
-| int __cmpdf2(double, double);
-	FUNC(__cmpdf2)
-SYM (__cmpdf2):
-	link	a6,IMM (0)
-	pea	1
-	movl	a6@(20),sp@-
-	movl	a6@(16),sp@-
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpdf2_internal)
-	unlk	a6
-	rts
-
 |=============================================================================
 |                           rounding routines
 |=============================================================================
 
 | The rounding routines expect the number to be normalized in registers
-| d0-d1-d2-d3, with the exponent in register d4. They assume that the 
+| d0-d1-d2-d3, with the exponent in register d4. They assume that the
 | exponent is larger or equal to 1. They return a properly normalized number
 | if possible, and a denormalized number otherwise. The exponent is returned
 | in d4.
@@ -2451,15 +2363,15 @@ Lround$to$nearest:
 | Check for denormalized numbers:
 1:	btst	IMM (DBL_MANT_DIG-32),d0
 	bne	2f		| if set the number is normalized
-| Normalize shifting left until bit #DBL_MANT_DIG-32 is set or the exponent 
-| is one (remember that a denormalized number corresponds to an 
+| Normalize shifting left until bit #DBL_MANT_DIG-32 is set or the exponent
+| is one (remember that a denormalized number corresponds to an
 | exponent of -D_BIAS+1).
 #ifndef __mcoldfire__
 	cmpw	IMM (1),d4	| remember that the exponent is at least one
 #else
 	cmpl	IMM (1),d4	| remember that the exponent is at least one
 #endif
- 	beq	2f		| an exponent of one means denormalized
+	beq	2f		| an exponent of one means denormalized
 	addl	d3,d3		| else shift and adjust the exponent
 	addxl	d2,d2		|
 	addxl	d1,d1		|
@@ -2473,20 +2385,20 @@ Lround$to$nearest:
 2:
 | Now round: we do it as follows: after the shifting we can write the
 | fraction part as f + delta, where 1 < f < 2^25, and 0 <= delta <= 2.
-| If delta < 1, do nothing. If delta > 1, add 1 to f. 
-| If delta == 1, we make sure the rounded number will be even (odd?) 
+| If delta < 1, do nothing. If delta > 1, add 1 to f.
+| If delta == 1, we make sure the rounded number will be even (odd?)
 | (after shifting).
 	btst	IMM (0),d1	| is delta < 1?
 	beq	2f		| if so, do not do anything
 	orl	d2,d3		| is delta == 1?
 	bne	1f		| if so round to even
-	movel	d1,d3		| 
+	movel	d1,d3		|
 	andl	IMM (2),d3	| bit 1 is the last significant bit
 	movel	IMM (0),d2	|
 	addl	d3,d1		|
 	addxl	d2,d0		|
-	bra	2f		| 
-1:	movel	IMM (1),d3	| else add 1 
+	bra	2f		|
+1:	movel	IMM (1),d3	| else add 1
 	movel	IMM (0),d2	|
 	addl	d3,d1		|
 	addxl	d2,d0
@@ -2494,7 +2406,7 @@ Lround$to$nearest:
 2:
 #ifndef __mcoldfire__
 	lsrl	IMM (1),d0
-	roxrl	IMM (1),d1		
+	roxrl	IMM (1),d1
 #else
 	lsrl	IMM (1),d1
 	btst	IMM (0),d0
@@ -2505,7 +2417,7 @@ Lround$to$nearest:
 
 | Now check again bit #DBL_MANT_DIG-32 (rounding could have produced a
 | 'fraction overflow' ...).
-	btst	IMM (DBL_MANT_DIG-32),d0	
+	btst	IMM (DBL_MANT_DIG-32),d0
 	beq	1f
 #ifndef __mcoldfire__
 	lsrl	IMM (1),d0
@@ -2520,7 +2432,7 @@ Lround$to$nearest:
 	addl	IMM (1),d4
 #endif
 1:
-| If bit #DBL_MANT_DIG-32-1 is clear we have a denormalized number, so we 
+| If bit #DBL_MANT_DIG-32-1 is clear we have a denormalized number, so we
 | have to put the exponent to zero and return a denormalized number.
 	btst	IMM (DBL_MANT_DIG-32-1),d0
 	beq	1f
@@ -2536,6 +2448,26 @@ Lround$to$minus:
 
 #ifdef  L_float
 
+|=============================================================================
+|=============================================================================
+|                         single precision routines
+|=============================================================================
+|=============================================================================
+
+| A single precision floating point number (float) has the format:
+|
+| struct _float {
+|  unsigned int sign      : 1;  /* sign bit */
+|  unsigned int exponent  : 8;  /* exponent, shifted by 126 */
+|  unsigned int fraction  : 23; /* fraction */
+| } float;
+|
+| Thus sizeof(float) = 4 (32 bits).
+|
+| All the routines are callable from C programs, and return the result
+| in the single register d0. They also preserve all registers except
+| d0-d1 and a0-a1.
+
 	.globl	SYM (_fpCCR)
 	.globl  $_exception_handler
 
@@ -2549,29 +2481,6 @@ FLT_MAX_EXP    = F_MAX_EXP - F_BIAS
 FLT_MIN_EXP    = 1 - F_BIAS
 FLT_MANT_DIG   = 24
 
-INEXACT_RESULT 		= 0x0001
-UNDERFLOW 		= 0x0002
-OVERFLOW 		= 0x0004
-DIVIDE_BY_ZERO 		= 0x0008
-INVALID_OPERATION 	= 0x0010
-
-SINGLE_FLOAT = 1
-
-NOOP         = 0
-ADD          = 1
-MULTIPLY     = 2
-DIVIDE       = 3
-NEGATE       = 4
-COMPARE      = 5
-EXTENDSFDF   = 6
-TRUNCDFSF    = 7
-
-UNKNOWN           = -1
-ROUND_TO_NEAREST  = 0 | round result to nearest representable value
-ROUND_TO_ZERO     = 1 | round result towards zero
-ROUND_TO_PLUS     = 2 | round result towards plus infinity
-ROUND_TO_MINUS    = 3 | round result towards minus infinity
-
 | Entry points:
 
 	.globl SYM (__addsf3)
@@ -2581,9 +2490,11 @@ ROUND_TO_MINUS    = 3 | round result towards minus infinity
 	.globl SYM (__negsf2)
 	.globl SYM (__cmpsf2)
 	.globl SYM (__cmpsf2_internal)
+#ifdef __ELF__
 	.hidden SYM (__cmpsf2_internal)
+#endif
 
-| These are common routines to return and signal exceptions.	
+| These are common routines to return and signal exceptions.
 
 	.text
 	.even
@@ -2597,7 +2508,7 @@ Lf$den:
 
 Lf$infty:
 Lf$overflow:
-| Return a properly signed INFINITY and set the exception flags 
+| Return a properly signed INFINITY and set the exception flags
 	movel	IMM (INFINITY),d0
 	orl	d7,d0
 	moveq	IMM (INEXACT_RESULT+OVERFLOW),d7
@@ -2605,7 +2516,7 @@ Lf$overflow:
 	PICJUMP	$_exception_handler
 
 Lf$underflow:
-| Return 0 and set the exception flags 
+| Return 0 and set the exception flags
 	moveq	IMM (0),d0
 	moveq	IMM (INEXACT_RESULT+UNDERFLOW),d7
 	moveq	IMM (SINGLE_FLOAT),d6
@@ -2626,26 +2537,6 @@ Lf$div$0:
 	moveq	IMM (SINGLE_FLOAT),d6
 	PICJUMP	$_exception_handler
 
-|=============================================================================
-|=============================================================================
-|                         single precision routines
-|=============================================================================
-|=============================================================================
-
-| A single precision floating point number (float) has the format:
-|
-| struct _float {
-|  unsigned int sign      : 1;  /* sign bit */ 
-|  unsigned int exponent  : 8;  /* exponent, shifted by 126 */
-|  unsigned int fraction  : 23; /* fraction */
-| } float;
-| 
-| Thus sizeof(float) = 4 (32 bits). 
-|
-| All the routines are callable from C programs, and return the result 
-| in the single register d0. They also preserve all registers except 
-| d0-d1 and a0-a1.
-
 |=============================================================================
 |                              __subsf3
 |=============================================================================
@@ -2653,8 +2544,15 @@ Lf$div$0:
 | float __subsf3(float, float);
 	FUNC(__subsf3)
 SYM (__subsf3):
+ELF_ALIAS(__subsf3)
+#ifdef __FASTCALL__
+	bchg	IMM (31),d1   	| change sign of second operand
+				| and fall through
+#else
 	bchg	IMM (31),sp@(8)	| change sign of second operand
 				| and fall through
+#endif
+
 |=============================================================================
 |                              __addsf3
 |=============================================================================
@@ -2662,19 +2560,19 @@ SYM (__subsf3):
 | float __addsf3(float, float);
 	FUNC(__addsf3)
 SYM (__addsf3):
-#ifndef __mcoldfire__
-	link	a6,IMM (0)	| everything will be done in registers
-	moveml	d2-d7,sp@-	| save all data registers but d0-d1
-#else
-	link	a6,IMM (-24)
-	moveml	d2-d7,sp@
-#endif
+ELF_ALIAS(__addsf3)
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
+#ifndef __FASTCALL__
 	movel	a6@(8),d0	| get first operand
 	movel	a6@(12),d1	| get second operand
-	movel	d0,a0		| get d0's sign bit '
+#endif
+	movel	d0,a2		| store first operand
+	movel	d1,a3		| store second operand
+	movel	d0,a0		| get d0's sign bit
 	addl	d0,d0		| check and clear sign bit of a
 	beq	Laddsf$b	| if zero return second operand
-	movel	d1,a1		| save b's sign bit '
+	movel	d1,a1		| save b's sign bit
 	addl	d1,d1		| get rid of sign bit
 	beq	Laddsf$a	| if zero return first operand
 
@@ -2693,9 +2591,9 @@ SYM (__addsf3):
 	swap	d6		| put exponent into first word
 	orl	d5,d0		| and put hidden bit back
 Laddsf$1:
-| Now we have a's exponent in d6 (second byte) and the mantissa in d0. '
+| Now we have a's exponent in d6 (second byte) and the mantissa in d0.
 	movel	d1,d7		| get exponent in d7
-	andl	d4,d7		| 
+	andl	d4,d7		|
 	beq	Laddsf$b$den	| branch if b is denormalized
 	cmpl	d4,d7		| check for INFINITY or NaN
 	beq	Laddsf$nf
@@ -2704,9 +2602,9 @@ Laddsf$1:
 	andl	d4,d1		| get fraction in d1
 	orl	d5,d1		| and put hidden bit back
 Laddsf$2:
-| Now we have b's exponent in d7 (second byte) and the mantissa in d1. '
+| Now we have b's exponent in d7 (second byte) and the mantissa in d1.
 
-| Note that the hidden bit corresponds to bit #FLT_MANT_DIG-1, and we 
+| Note that the hidden bit corresponds to bit #FLT_MANT_DIG-1, and we
 | shifted right once, so bit #FLT_MANT_DIG is set (so we have one extra
 | bit).
 
@@ -2717,14 +2615,14 @@ Laddsf$2:
 
 | Here we shift the numbers in registers d0 and d1 so the exponents are the
 | same, and put the largest exponent in d6. Note that we are using two
-| registers for each number (see the discussion by D. Knuth in "Seminumerical 
+| registers for each number (see the discussion by D. Knuth in "Seminumerical
 | Algorithms").
 #ifndef __mcoldfire__
 	cmpw	d6,d7		| compare exponents
 #else
 	cmpl	d6,d7		| compare exponents
 #endif
-	beq	Laddsf$3	| if equal don't shift '
+	beq	Laddsf$3	| if equal don't shift
 	bhi	5f		| branch if second exponent largest
 1:
 	subl	d6,d7		| keep the largest exponent
@@ -2734,11 +2632,11 @@ Laddsf$2:
 #else
 	lsrl	IMM (8),d7	| put difference in lower byte
 #endif
-| if difference is too large we don't shift (actually, we can just exit) '
+| if difference is too large we don't shift (actually, we can just exit)
 #ifndef __mcoldfire__
-	cmpw	IMM (FLT_MANT_DIG+2),d7		
+	cmpw	IMM (FLT_MANT_DIG+2),d7
 #else
-	cmpl	IMM (FLT_MANT_DIG+2),d7		
+	cmpl	IMM (FLT_MANT_DIG+2),d7
 #endif
 	bge	Laddsf$b$small
 #ifndef __mcoldfire__
@@ -2795,11 +2693,11 @@ Laddsf$2:
 #else
 	lsrl	IMM (8),d7	| put difference in lower byte
 #endif
-| if difference is too large we don't shift (and exit!) '
+| if difference is too large we don't shift (and exit!)
 #ifndef __mcoldfire__
-	cmpw	IMM (FLT_MANT_DIG+2),d7		
+	cmpw	IMM (FLT_MANT_DIG+2),d7
 #else
-	cmpl	IMM (FLT_MANT_DIG+2),d7		
+	cmpl	IMM (FLT_MANT_DIG+2),d7
 #endif
 	bge	Laddsf$a$small
 #ifndef __mcoldfire__
@@ -2859,7 +2757,7 @@ Laddsf$3:
 	movel	d4,a1
 #endif
 	eorl	d6,d7		| combine sign bits
-	bmi	Lsubsf$0	| if negative a and b have opposite 
+	bmi	Lsubsf$0	| if negative a and b have opposite
 				| sign so we actually subtract the
 				| numbers
 
@@ -2876,7 +2774,7 @@ Laddsf$3:
 | Here we do the addition.
 	addl	d3,d1
 	addxl	d2,d0
-| Note: now we have d2, d3, d4 and d5 to play with! 
+| Note: now we have d2, d3, d4 and d5 to play with!
 
 | Put the exponent, in the first byte, in d2, to use the "standard" rounding
 | routines:
@@ -2889,9 +2787,9 @@ Laddsf$3:
 
 | Before rounding normalize so bit #FLT_MANT_DIG is set (we will consider
 | the case of denormalized numbers in the rounding routine itself).
-| As in the addition (not in the subtraction!) we could have set 
+| As in the addition (not in the subtraction!) we could have set
 | one more bit we check this:
-	btst	IMM (FLT_MANT_DIG+1),d0	
+	btst	IMM (FLT_MANT_DIG+1),d0
 	beq	1f
 #ifndef __mcoldfire__
 	lsrl	IMM (1),d0
@@ -2905,12 +2803,12 @@ Laddsf$3:
 #endif
 	addl	IMM (1),d2
 1:
-	lea	pc@(Laddsf$4),a0 | to return from rounding routine
-	PICLEA	SYM (_fpCCR),a1	| check the rounding mode
+	PICLEA	SYM (_fpCCR),a0	| check the rounding mode
 #ifdef __mcoldfire__
 	clrl	d6
 #endif
-	movew	a1@(6),d6	| rounding mode in d6
+	movew	a0@(6),d6	| ROUND rounding mode in d6
+	lea	pc@(Laddsf$4),a0 | to return from rounding routine
 	beq	Lround$to$nearest
 #ifndef __mcoldfire__
 	cmpw	IMM (ROUND_TO_PLUS),d6
@@ -2923,9 +2821,9 @@ Laddsf$3:
 Laddsf$4:
 | Put back the exponent, but check for overflow.
 #ifndef __mcoldfire__
-	cmpw	IMM (0xff),d2
+	cmpw	IMM (F_MAX_EXP),d2
 #else
-	cmpl	IMM (0xff),d2
+	cmpl	IMM (F_MAX_EXP),d2
 #endif
 	bhi	1f
 	bclr	IMM (FLT_MANT_DIG-1),d0
@@ -2970,12 +2868,12 @@ Lsubsf$0:
 | Note that we do not have to normalize, since in the subtraction bit
 | #FLT_MANT_DIG+1 is never set, and denormalized numbers are handled by
 | the rounding routines themselves.
-	lea	pc@(Lsubsf$1),a0 | to return from rounding routine
-	PICLEA	SYM (_fpCCR),a1	| check the rounding mode
+	PICLEA	SYM (_fpCCR),a0	| check the rounding mode
 #ifdef __mcoldfire__
 	clrl	d6
 #endif
-	movew	a1@(6),d6	| rounding mode in d6
+	movew	a0@(6),d6	| rounding mode in d6
+	lea	pc@(Lsubsf$1),a0 | to return from rounding routine
 	beq	Lround$to$nearest
 #ifndef __mcoldfire__
 	cmpw	IMM (ROUND_TO_PLUS),d6
@@ -2986,7 +2884,7 @@ Lsubsf$0:
 	blt	Lround$to$zero
 	bra	Lround$to$plus
 Lsubsf$1:
-| Put back the exponent (we can't have overflow!). '
+| Put back the exponent (we can't have overflow!).
 	bclr	IMM (FLT_MANT_DIG-1),d0
 #ifndef __mcoldfire__
 	lslw	IMM (7),d2
@@ -2997,36 +2895,28 @@ Lsubsf$1:
 	orl	d2,d0
 	bra	Laddsf$ret
 
-| If one of the numbers was too small (difference of exponents >= 
-| FLT_MANT_DIG+2) we return the other (and now we don't have to '
+| If one of the numbers was too small (difference of exponents >=
+| FLT_MANT_DIG+2) we return the other (and now we don't have to
 | check for finiteness or zero).
 Laddsf$a$small:
-	movel	a6@(12),d0
+	movel	a3,d0
 	PICLEA	SYM (_fpCCR),a0
-	movew	IMM (0),a0@
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7	| restore data registers
-#else
-	moveml	sp@,d2-d7
+	clrw	a0@
+	moveml	sp@,d2-d7/a2-a5
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
-	unlk	a6		| and return
-	rts
+	unlk	a6
+	rts		| and return
 
 Laddsf$b$small:
-	movel	a6@(8),d0
+	movel	a2,d0
 	PICLEA	SYM (_fpCCR),a0
-	movew	IMM (0),a0@
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7	| restore data registers
-#else
-	moveml	sp@,d2-d7
+	clrw	a0@
+	moveml	sp@,d2-d7/a2-a5
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
-	unlk	a6		| and return
-	rts
+	unlk	a6
+	rts		| and return
 
 | If the numbers are denormalized remember to put exponent equal to 1.
 
@@ -3042,12 +2932,12 @@ Laddsf$b$den:
 				| (this was not executed after the jump)
 	bra	Laddsf$2
 
-| The rest is mainly code for the different results which can be 
+| The rest is mainly code for the different results which can be
 | returned (checking always for +/-INFINITY and NaN).
 
 Laddsf$b:
 | Return b (if a is zero).
-	movel	a6@(12),d0
+	movel	a3,d0
 	cmpl	IMM (0x80000000),d0	| Check if b is -0
 	bne	1f
 	movel	a0,d7
@@ -3056,7 +2946,7 @@ Laddsf$b:
 	bra	Laddsf$ret
 Laddsf$a:
 | Return a (if b is zero).
-	movel	a6@(8),d0
+	movel	a2,d0
 1:
 	moveq	IMM (ADD),d5
 | We have to check for NaN and +/-infty.
@@ -3065,7 +2955,7 @@ Laddsf$a:
 	bclr	IMM (31),d0		| clear sign
 	cmpl	IMM (INFINITY),d0	| check for infty or NaN
 	bge	2f
-	movel	d0,d0		| check for zero (we do this because we don't '
+	movel	d0,d0		| check for zero (we do this because we don't
 	bne	Laddsf$ret	| want to return -0 by mistake
 	bclr	IMM (31),d7	| if zero be sure to clear sign
 	bra	Laddsf$ret	| if everything OK just return
@@ -3079,27 +2969,23 @@ Laddsf$ret:
 | Normal exit (a and b nonzero, result is not NaN nor +/-infty).
 | We have to clear the exception flags (just the exception type).
 	PICLEA	SYM (_fpCCR),a0
-	movew	IMM (0),a0@
+	clrw	a0@
 	orl	d7,d0		| put sign bit
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7	| restore data registers
-#else
-	moveml	sp@,d2-d7
+	moveml	sp@,d2-d7/a2-a5	| restore data registers
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
-	unlk	a6		| and return
-	rts
+	unlk	a6
+	rts		| and return
 
 Laddsf$ret$den:
-| Return a denormalized number (for addition we don't signal underflow) '
+| Return a denormalized number (for addition we don't signal underflow)
 	lsrl	IMM (1),d0	| remember to shift right back once
 	bra	Laddsf$ret	| and return
 
-| Note: when adding two floats of the same sign if either one is 
-| NaN we return NaN without regard to whether the other is finite or 
-| not. When subtracting them (i.e., when adding two numbers of 
-| opposite signs) things are more complicated: if both are INFINITY 
+| Note: when adding two floats of the same sign if either one is
+| NaN we return NaN without regard to whether the other is finite or
+| not. When subtracting them (i.e., when adding two numbers of
+| opposite signs) things are more complicated: if both are INFINITY
 | we return NaN, if only one is INFINITY and the other is NaN we return
 | NaN, but if it is finite we return INFINITY with the corresponding sign.
 
@@ -3107,25 +2993,26 @@ Laddsf$nf:
 	moveq	IMM (ADD),d5
 | This could be faster but it is not worth the effort, since it is not
 | executed very often. We sacrifice speed for clarity here.
-	movel	a6@(8),d0	| get the numbers back (remember that we
-	movel	a6@(12),d1	| did some processing already)
+	movel	a2,d0	| get the numbers back (remember that we
+	movel	a3,d1	| did some processing already)
 	movel	IMM (INFINITY),d4 | useful constant (INFINITY)
 	movel	d0,d2		| save sign bits
+	movel	d0,d7		| into d7 as well as we may need the sign
+				| bit before jumping to Lf$infty
 	movel	d1,d3
 	bclr	IMM (31),d0	| clear sign bits
 	bclr	IMM (31),d1
 | We know that one of them is either NaN of +/-INFINITY
 | Check for NaN (if either one is NaN return NaN)
 	cmpl	d4,d0		| check first a (d0)
-	bhi	Lf$inop		
+	bhi	Lf$inop
 	cmpl	d4,d1		| check now b (d1)
-	bhi	Lf$inop		
+	bhi	Lf$inop
 | Now comes the check for +/-INFINITY. We know that both are (maybe not
 | finite) numbers, but we have to check if both are infinite whether we
 | are adding or subtracting them.
 	eorl	d3,d2		| to check sign bits
 	bmi	1f
-	movel	d0,d7
 	andl	IMM (0x80000000),d7	| get (common) sign bit
 	bra	Lf$infty
 1:
@@ -3135,8 +3022,7 @@ Laddsf$nf:
 	cmpl	d1,d0		| are both infinite?
 	beq	Lf$inop		| if so return NaN
 
-	movel	d0,d7
-	andl	IMM (0x80000000),d7 | get a's sign bit '
+	andl	IMM (0x80000000),d7 | get a's sign bit
 	cmpl	d4,d0		| test now for infinity
 	beq	Lf$infty	| if a is INFINITY return with this sign
 	bchg	IMM (31),d7	| else we know b is INFINITY and has
@@ -3149,15 +3035,15 @@ Laddsf$nf:
 | float __mulsf3(float, float);
 	FUNC(__mulsf3)
 SYM (__mulsf3):
-#ifndef __mcoldfire__
-	link	a6,IMM (0)
-	moveml	d2-d7,sp@-
-#else
-	link	a6,IMM (-24)
-	moveml	d2-d7,sp@
-#endif
+ELF_ALIAS(__mulsf3)
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
+#ifndef __FASTCALL__
 	movel	a6@(8),d0	| get a into d0
 	movel	a6@(12),d1	| and b into d1
+#endif
+	movel	d0,a2		| store a into a0
+	movel	d1,a3		| store b into a1
 	movel	d0,d7		| d7 will hold the sign of the product
 	eorl	d1,d7		|
 	andl	IMM (0x80000000),d7
@@ -3165,10 +3051,10 @@ SYM (__mulsf3):
 	movel	d6,d5			| another (mask for fraction)
 	notl	d5			|
 	movel	IMM (0x00800000),d4	| this is to put hidden bit back
-	bclr	IMM (31),d0		| get rid of a's sign bit '
+	bclr	IMM (31),d0		| get rid of a's sign bit
 	movel	d0,d2			|
 	beq	Lmulsf$a$0		| branch if a is zero
-	bclr	IMM (31),d1		| get rid of b's sign bit '
+	bclr	IMM (31),d1		| get rid of b's sign bit
 	movel	d1,d3		|
 	beq	Lmulsf$b$0	| branch if b is zero
 	cmpl	d6,d0		| is a big?
@@ -3185,9 +3071,9 @@ SYM (__mulsf3):
 	orl	d4,d0		| and put hidden bit back
 	swap	d2		| I like exponents in the first byte
 #ifndef __mcoldfire__
-	lsrw	IMM (7),d2	| 
+	lsrw	IMM (7),d2	|
 #else
-	lsrl	IMM (7),d2	| 
+	lsrl	IMM (7),d2	|
 #endif
 Lmulsf$1:			| number
 	andl	d6,d3		|
@@ -3210,10 +3096,10 @@ Lmulsf$2:			|
 #endif
 
 | We are now ready to do the multiplication. The situation is as follows:
-| both a and b have bit FLT_MANT_DIG-1 set (even if they were 
-| denormalized to start with!), which means that in the product 
-| bit 2*(FLT_MANT_DIG-1) (that is, bit 2*FLT_MANT_DIG-2-32 of the 
-| high long) is set. 
+| both a and b have bit FLT_MANT_DIG-1 set (even if they were
+| denormalized to start with!), which means that in the product
+| bit 2*(FLT_MANT_DIG-1) (that is, bit 2*FLT_MANT_DIG-2-32 of the
+| high long) is set.
 
 | To do the multiplication let us move the number a little bit around ...
 	movel	d1,d6		| second operand in d6
@@ -3223,11 +3109,11 @@ Lmulsf$2:			|
 	movel	d4,d0
 
 | now bit FLT_MANT_DIG-1 becomes bit 31:
-	lsll	IMM (31-FLT_MANT_DIG+1),d6		
+	lsll	IMM (31-FLT_MANT_DIG+1),d6
 
 | Start the loop (we loop #FLT_MANT_DIG times):
-	moveq	IMM (FLT_MANT_DIG-1),d3	
-1:	addl	d1,d1		| shift sum 
+	moveq	IMM (FLT_MANT_DIG-1),d3
+1:	addl	d1,d1		| shift sum
 	addxl	d0,d0
 	lsll	IMM (1),d6	| get bit bn
 	bcc	2f		| if not set skip sum
@@ -3242,7 +3128,7 @@ Lmulsf$2:			|
 #endif
 
 | Now we have the product in d0-d1, with bit (FLT_MANT_DIG - 1) + FLT_MANT_DIG
-| (mod 32) of d0 set. The first thing to do now is to normalize it so bit 
+| (mod 32) of d0 set. The first thing to do now is to normalize it so bit
 | FLT_MANT_DIG is set (to do the rounding).
 #ifndef __mcoldfire__
 	rorl	IMM (6),d1
@@ -3270,7 +3156,7 @@ Lmulsf$2:			|
 #endif
 
 	moveq	IMM (MULTIPLY),d5
-	
+
 	btst	IMM (FLT_MANT_DIG+1),d0
 	beq	Lround$exit
 #ifndef __mcoldfire__
@@ -3303,31 +3189,27 @@ Lmulsf$inf:
 	bhi	Lf$inop		| if so return NaN
 	bra	Lf$overflow	| else return +/-INFINITY
 
-| If either number is zero return zero, unless the other is +/-INFINITY, 
+| If either number is zero return zero, unless the other is +/-INFINITY,
 | or NaN, in which case we return NaN.
 Lmulsf$b$0:
 | Here d1 (==b) is zero.
-	movel	a6@(8),d1	| get a again to check for non-finiteness
+	movel	a2,d1		| get a again to check for non-finiteness
 	bra	1f
 Lmulsf$a$0:
-	movel	a6@(12),d1	| get b again to check for non-finiteness
-1:	bclr	IMM (31),d1	| clear sign bit 
+	movel	a3,d1	| get b again to check for non-finiteness
+1:	bclr	IMM (31),d1	| clear sign bit
 	cmpl	IMM (INFINITY),d1 | and check for a large exponent
 	bge	Lf$inop		| if b is +/-INFINITY or NaN return NaN
 	movel	d7,d0		| else return signed zero
 	PICLEA	SYM (_fpCCR),a0	|
-	movew	IMM (0),a0@	| 
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7	| 
-#else
-	moveml	sp@,d2-d7
+	clrw	a0@	|
+	moveml	sp@,d2-d7/a2-a5
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
-	unlk	a6		| 
-	rts			| 
+	unlk	a6		|
+	rts			|
 
-| If a number is denormalized we put an exponent of 1 but do not put the 
+| If a number is denormalized we put an exponent of 1 but do not put the
 | hidden bit back into the fraction; instead we shift left until bit 23
 | (the hidden bit) is set, adjusting the exponent accordingly. We do this
 | to ensure that the product of the fractions is close to 1.
@@ -3364,32 +3246,30 @@ Lmulsf$b$den:
 | float __divsf3(float, float);
 	FUNC(__divsf3)
 SYM (__divsf3):
-#ifndef __mcoldfire__
-	link	a6,IMM (0)
-	moveml	d2-d7,sp@-
-#else
-	link	a6,IMM (-24)
-	moveml	d2-d7,sp@
-#endif
+ELF_ALIAS(__divsf3)
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
+#ifndef __FASTCALL
 	movel	a6@(8),d0		| get a into d0
 	movel	a6@(12),d1		| and b into d1
+#endif
 	movel	d0,d7			| d7 will hold the sign of the result
 	eorl	d1,d7			|
-	andl	IMM (0x80000000),d7	| 
+	andl	IMM (0x80000000),d7	|
 	movel	IMM (INFINITY),d6	| useful constant (+INFINITY)
 	movel	d6,d5			| another (mask for fraction)
 	notl	d5			|
 	movel	IMM (0x00800000),d4	| this is to put hidden bit back
-	bclr	IMM (31),d0		| get rid of a's sign bit '
+	bclr	IMM (31),d0		| get rid of a's sign bit
 	movel	d0,d2			|
 	beq	Ldivsf$a$0		| branch if a is zero
-	bclr	IMM (31),d1		| get rid of b's sign bit '
+	bclr	IMM (31),d1		| get rid of b's sign bit
 	movel	d1,d3			|
 	beq	Ldivsf$b$0		| branch if b is zero
 	cmpl	d6,d0			| is a big?
 	bhi	Ldivsf$inop		| if a is NaN return NaN
 	beq	Ldivsf$inf		| if a is INFINITY we have to check b
-	cmpl	d6,d1			| now compare b with INFINITY 
+	cmpl	d6,d1			| now compare b with INFINITY
 	bhi	Ldivsf$inop		| if b is NaN return NaN
 	beq	Ldivsf$underflow
 | Here we have both numbers finite and nonzero (and with no sign bit).
@@ -3402,11 +3282,11 @@ SYM (__divsf3):
 	orl	d4,d0		| and put hidden bit back
 	swap	d2		| I like exponents in the first byte
 #ifndef __mcoldfire__
-	lsrw	IMM (7),d2	| 
+	lsrw	IMM (7),d2	|
 #else
-	lsrl	IMM (7),d2	| 
+	lsrl	IMM (7),d2	|
 #endif
-Ldivsf$1:			| 
+Ldivsf$1:			|
 	andl	d6,d3		|
 	beq	Ldivsf$b$den	|
 	andl	d5,d1		|
@@ -3425,7 +3305,7 @@ Ldivsf$2:			|
 	subl	d3,d2		| subtract exponents
  	addl	IMM (F_BIAS),d2	| and add bias
 #endif
- 
+
 | We are now ready to do the division. We have prepared things in such a way
 | that the ratio of the fractions will be less than 2 but greater than 1/2.
 | At this point the registers in use are:
@@ -3435,7 +3315,7 @@ Ldivsf$2:			|
 | d7	holds the sign of the ratio
 | d4, d5, d6 hold some constants
 	movel	d7,a0		| d6-d7 will hold the ratio of the fractions
-	movel	IMM (0),d6	| 
+	movel	IMM (0),d6	|
 	movel	d6,d7
 
 	moveq	IMM (FLT_MANT_DIG+1),d3
@@ -3478,10 +3358,10 @@ Ldivsf$2:			|
 	movel	d6,d0		| put the ratio in d0-d1
 	movel	a0,d7		| get sign back
 
-| Because of the normalization we did before we are guaranteed that 
+| Because of the normalization we did before we are guaranteed that
 | d0 is smaller than 2^26 but larger than 2^24. Thus bit 26 is not set,
 | bit 25 could be set, and if it is not set then bit 24 is necessarily set.
-	btst	IMM (FLT_MANT_DIG+1),d0		
+	btst	IMM (FLT_MANT_DIG+1),d0
 	beq	1f              | if it is not set, then bit 24 is set
 	lsrl	IMM (1),d0	|
 #ifndef __mcoldfire__
@@ -3514,24 +3394,20 @@ Ldivsf$a$0:
 	andl	IMM (0x7fffffff),d1	| clear sign bit and test b
 	beq	Lf$inop			| if b is also zero return NaN
 	cmpl	IMM (INFINITY),d1	| check for NaN
-	bhi	Lf$inop			| 
+	bhi	Lf$inop			|
 	movel	d7,d0			| else return signed zero
 	PICLEA	SYM (_fpCCR),a0		|
-	movew	IMM (0),a0@		|
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7		| 
-#else
-	moveml	sp@,d2-d7		| 
+	clrw	a0@		|
+	moveml	sp@,d2-d7/a2-a5		|
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
-	unlk	a6			| 
-	rts				| 
-	
+	unlk	a6			|
+	rts				|
+
 Ldivsf$b$0:
 	moveq	IMM (DIVIDE),d5
 | If we got here a is not zero. Check if a is NaN; in that case return NaN,
-| else return +/-INFINITY. Remember that a is in d0 with the sign bit 
+| else return +/-INFINITY. Remember that a is in d0 with the sign bit
 | cleared already.
 	cmpl	IMM (INFINITY),d0	| compare d0 with INFINITY
 	bhi	Lf$inop			| if larger it is NaN
@@ -3540,11 +3416,11 @@ Ldivsf$b$0:
 Ldivsf$inf:
 	moveq	IMM (DIVIDE),d5
 | If a is INFINITY we have to check b
-	cmpl	IMM (INFINITY),d1	| compare b with INFINITY 
+	cmpl	IMM (INFINITY),d1	| compare b with INFINITY
 	bge	Lf$inop			| if b is NaN or INFINITY return NaN
 	bra	Lf$overflow		| else return overflow
 
-| If a number is denormalized we put an exponent of 1 but do not put the 
+| If a number is denormalized we put an exponent of 1 but do not put the
 | bit back into the fraction.
 Ldivsf$a$den:
 	movel	IMM (1),d2
@@ -3573,30 +3449,30 @@ Ldivsf$b$den:
 	bra	1b
 
 Lround$exit:
-| This is a common exit point for __mulsf3 and __divsf3. 
+| This is a common exit point for __mulsf3 and __divsf3.
 
 | First check for underlow in the exponent:
 #ifndef __mcoldfire__
-	cmpw	IMM (-FLT_MANT_DIG-1),d2		
+	cmpw	IMM (-FLT_MANT_DIG-1),d2
 #else
-	cmpl	IMM (-FLT_MANT_DIG-1),d2		
+	cmpl	IMM (-FLT_MANT_DIG-1),d2
 #endif
-	blt	Lf$underflow	
-| It could happen that the exponent is less than 1, in which case the 
-| number is denormalized. In this case we shift right and adjust the 
-| exponent until it becomes 1 or the fraction is zero (in the latter case 
+	blt	Lf$underflow
+| It could happen that the exponent is less than 1, in which case the
+| number is denormalized. In this case we shift right and adjust the
+| exponent until it becomes 1 or the fraction is zero (in the latter case
 | we signal underflow and return zero).
 	movel	IMM (0),d6	| d6 is used temporarily
 #ifndef __mcoldfire__
-	cmpw	IMM (1),d2	| if the exponent is less than 1 we 
+	cmpw	IMM (1),d2	| if the exponent is less than 1 we
 #else
-	cmpl	IMM (1),d2	| if the exponent is less than 1 we 
+	cmpl	IMM (1),d2	| if the exponent is less than 1 we
 #endif
 	bge	2f		| have to shift right (denormalize)
 1:
 #ifndef __mcoldfire__
 	addw	IMM (1),d2	| adjust the exponent
-	lsrl	IMM (1),d0	| shift right once 
+	lsrl	IMM (1),d0	| shift right once
 	roxrl	IMM (1),d1	|
 	roxrl	IMM (1),d6	| d6 collect bits we would lose otherwise
 	cmpw	IMM (1),d2	| is the exponent 1 already?
@@ -3615,16 +3491,16 @@ Lround$exit:
 #endif
 	beq	2f		| if not loop back
 	bra	1b              |
-	bra	Lf$underflow	| safety check, shouldn't execute '
-2:	orl	d6,d1		| this is a trick so we don't lose  '
+	bra	Lf$underflow	| safety check, shouldn't execute
+2:	orl	d6,d1		| this is a trick so we don't lose
 				| the extra bits which were flushed right
 | Now call the rounding routine (which takes care of denormalized numbers):
-	lea	pc@(Lround$0),a0 | to return from rounding routine
-	PICLEA	SYM (_fpCCR),a1	| check the rounding mode
+	PICLEA	SYM (_fpCCR),a0	| check the rounding mode
 #ifdef __mcoldfire__
 	clrl	d6
 #endif
-	movew	a1@(6),d6	| rounding mode in d6
+	movew	a0@(6),d6	| rounding mode in d6
+	lea	pc@(Lround$0),a0 | to return from rounding routine
 	beq	Lround$to$nearest
 #ifndef __mcoldfire__
 	cmpw	IMM (ROUND_TO_PLUS),d6
@@ -3638,14 +3514,14 @@ Lround$0:
 | Here we have a correctly rounded result (either normalized or denormalized).
 
 | Here we should have either a normalized number or a denormalized one, and
-| the exponent is necessarily larger or equal to 1 (so we don't have to  '
-| check again for underflow!). We have to check for overflow or for a 
+| the exponent is necessarily larger or equal to 1 (so we don't have to
+| check again for underflow!). We have to check for overflow or for a
 | denormalized number (which also signals underflow).
 | Check for overflow (i.e., exponent >= 255).
 #ifndef __mcoldfire__
-	cmpw	IMM (0x00ff),d2
+	cmpw	IMM (F_MAX_EXP),d2
 #else
-	cmpl	IMM (0x00ff),d2
+	cmpl	IMM (F_MAX_EXP),d2
 #endif
 	bge	Lf$overflow
 | Now check for a denormalized number (exponent==0).
@@ -3661,7 +3537,7 @@ Lround$0:
 	bclr	IMM (FLT_MANT_DIG-1),d0
 	swap	d0		| and put back exponent
 #ifndef __mcoldfire__
-	orw	d2,d0		| 
+	orw	d2,d0		|
 #else
 	orl	d2,d0
 #endif
@@ -3669,14 +3545,10 @@ Lround$0:
 	orl	d7,d0		| and sign also
 
 	PICLEA	SYM (_fpCCR),a0
-	movew	IMM (0),a0@
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7
-#else
-	moveml	sp@,d2-d7
+	clrw	a0@
+	moveml	sp@,d2-d7/a2-a5
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6
 	rts
 
@@ -3684,21 +3556,19 @@ Lround$0:
 |                             __negsf2
 |=============================================================================
 
-| This is trivial and could be shorter if we didn't bother checking for NaN '
+| This is trivial and could be shorter if we didn't bother checking for NaN
 | and +/-INFINITY.
 
 | float __negsf2(float);
 	FUNC(__negsf2)
 SYM (__negsf2):
-#ifndef __mcoldfire__
-	link	a6,IMM (0)
-	moveml	d2-d7,sp@-
-#else
-	link	a6,IMM (-24)
-	moveml	d2-d7,sp@
-#endif
+ELF_ALIAS(__negsf2)
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
 	moveq	IMM (NEGATE),d5
+#ifndef __FASTCALL__
 	movel	a6@(8),d0	| get number to negate in d0
+#endif
 	bchg	IMM (31),d0	| negate
 	movel	d0,d1		| make a positive copy
 	bclr	IMM (31),d1	|
@@ -3709,16 +3579,12 @@ SYM (__negsf2):
 	bhi	Lf$inop		| if larger (fraction not zero) is NaN
 	movel	d0,d7		| else get sign and return INFINITY
 	andl	IMM (0x80000000),d7
-	bra	Lf$infty		
+	bra	Lf$infty
 1:	PICLEA	SYM (_fpCCR),a0
-	movew	IMM (0),a0@
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7
-#else
-	moveml	sp@,d2-d7
+	clrw	a0@
+	moveml	sp@,d2-d7/a2-a5
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6
 	rts
 2:	bclr	IMM (31),d0
@@ -3728,22 +3594,52 @@ SYM (__negsf2):
 |                             __cmpsf2
 |=============================================================================
 
-GREATER =  1
-LESS    = -1
-EQUAL   =  0
+| The comments above about __eqdf2, et. al., also apply to __eqsf2,
+| et. al., except that the latter call __cmpsf2 rather than __cmpdf2.
+
+	FUNC(__gtsf2)
+	.globl	SYM (__gtsf2)
+SYM (__gtsf2):
+ELF_ALIAS(__gtsf2)
+	FUNC(__gesf2)
+	.globl	SYM (__gesf2)
+SYM (__gesf2):
+ELF_ALIAS(__gesf2)
+	lea	LESS,a0
+	jbra	SYM (__cmpsf2_internal)
+
+SYM (__cmpsf2):
+ELF_ALIAS(__cmpsf2)
+	FUNC(__eqsf2)
+	.globl	SYM (__eqsf2)
+SYM (__eqsf2):
+ELF_ALIAS(__eqsf2)
+	FUNC(__nesf2)
+	.globl	SYM (__nesf2)
+SYM (__nesf2):
+ELF_ALIAS(__nesf2)
+	FUNC(__ltsf2)
+	.globl	SYM (__ltsf2)
+SYM (__ltsf2):
+ELF_ALIAS(__ltsf2)
+	FUNC(__lesf2)
+	.globl	SYM (__lesf2)
+SYM (__lesf2):
+ELF_ALIAS(__lesf2)
+
+| int __cmpsf2(float, float);
+	FUNC(__cmpsf2)
+	lea	GREATER,a0
 
 | int __cmpsf2_internal(float, float, int);
 SYM (__cmpsf2_internal):
-#ifndef __mcoldfire__
-	link	a6,IMM (0)
-	moveml	d2-d7,sp@- 	| save registers
-#else
-	link	a6,IMM (-24)
-	moveml	d2-d7,sp@
-#endif
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
 	moveq	IMM (COMPARE),d5
+#ifndef __FASTCALL__
 	movel	a6@(8),d0	| get first operand
 	movel	a6@(12),d1	| get second operand
+#endif
 | Check if either is NaN, and in that case return garbage and signal
 | INVALID_OPERATION. Check also if either is zero, and clear the signs
 | if necessary.
@@ -3751,13 +3647,13 @@ SYM (__cmpsf2_internal):
 	andl	IMM (0x7fffffff),d0
 	beq	Lcmpsf$a$0
 	cmpl	IMM (0x7f800000),d0
-	bhi	Lcmpf$inop
+	bhi	Lcmpsf$inop
 Lcmpsf$1:
 	movel	d1,d7
 	andl	IMM (0x7fffffff),d1
 	beq	Lcmpsf$b$0
 	cmpl	IMM (0x7f800000),d1
-	bhi	Lcmpf$inop
+	bhi	Lcmpsf$inop
 Lcmpsf$2:
 | Check the signs
 	eorl	d6,d7
@@ -3786,66 +3682,43 @@ Lcmpsf$2:
 	bne	Lcmpsf$a$gt$b	| |b| < |a|
 | If we got here a == b.
 	movel	IMM (EQUAL),d0
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7 	| put back the registers
-#else
-	moveml	sp@,d2-d7
-#endif
+	moveml	sp@,d2-d7/a2-a5 	| put back the registers
 	unlk	a6
 	rts
 Lcmpsf$a$gt$b:
 	movel	IMM (GREATER),d0
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7 	| put back the registers
-#else
-	moveml	sp@,d2-d7
+	moveml	sp@,d2-d7/a2-a5 	| put back the registers
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6
 	rts
 Lcmpsf$b$gt$a:
 	movel	IMM (LESS),d0
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7 	| put back the registers
-#else
-	moveml	sp@,d2-d7
+	moveml	sp@,d2-d7/a2-a5 	| put back the registers
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6
 	rts
 
-Lcmpsf$a$0:	
+Lcmpsf$a$0:
 	bclr	IMM (31),d6
 	bra	Lcmpsf$1
 Lcmpsf$b$0:
 	bclr	IMM (31),d7
 	bra	Lcmpsf$2
 
-Lcmpf$inop:
-	movl	a6@(16),d0
+Lcmpsf$inop:
+	movel	a0,d0
 	moveq	IMM (INEXACT_RESULT+INVALID_OPERATION),d7
 	moveq	IMM (SINGLE_FLOAT),d6
 	PICJUMP	$_exception_handler
 
-| int __cmpsf2(float, float);
-	FUNC(__cmpsf2)
-SYM (__cmpsf2):
-	link	a6,IMM (0)
-	pea	1
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL SYM (__cmpsf2_internal)
-	unlk	a6
-	rts
-
 |=============================================================================
 |                           rounding routines
 |=============================================================================
 
 | The rounding routines expect the number to be normalized in registers
-| d0-d1, with the exponent in register d2. They assume that the 
+| d0-d1, with the exponent in register d2. They assume that the
 | exponent is larger or equal to 1. They return a properly normalized number
 | if possible, and a denormalized number otherwise. The exponent is returned
 | in d2.
@@ -3858,8 +3731,8 @@ Lround$to$nearest:
 | Check for denormalized numbers:
 1:	btst	IMM (FLT_MANT_DIG),d0
 	bne	2f		| if set the number is normalized
-| Normalize shifting left until bit #FLT_MANT_DIG is set or the exponent 
-| is one (remember that a denormalized number corresponds to an 
+| Normalize shifting left until bit #FLT_MANT_DIG is set or the exponent
+| is one (remember that a denormalized number corresponds to an
 | exponent of -F_BIAS+1).
 #ifndef __mcoldfire__
 	cmpw	IMM (1),d2	| remember that the exponent is at least one
@@ -3878,24 +3751,24 @@ Lround$to$nearest:
 2:
 | Now round: we do it as follows: after the shifting we can write the
 | fraction part as f + delta, where 1 < f < 2^25, and 0 <= delta <= 2.
-| If delta < 1, do nothing. If delta > 1, add 1 to f. 
-| If delta == 1, we make sure the rounded number will be even (odd?) 
+| If delta < 1, do nothing. If delta > 1, add 1 to f.
+| If delta == 1, we make sure the rounded number will be even (odd?)
 | (after shifting).
 	btst	IMM (0),d0	| is delta < 1?
 	beq	2f		| if so, do not do anything
 	tstl	d1		| is delta == 1?
 	bne	1f		| if so round to even
-	movel	d0,d1		| 
+	movel	d0,d1		|
 	andl	IMM (2),d1	| bit 1 is the last significant bit
-	addl	d1,d0		| 
-	bra	2f		| 
-1:	movel	IMM (1),d1	| else add 1 
+	addl	d1,d0		|
+	bra	2f		|
+1:	movel	IMM (1),d1	| else add 1
 	addl	d1,d0		|
 | Shift right once (because we used bit #FLT_MANT_DIG!).
-2:	lsrl	IMM (1),d0		
+2:	lsrl	IMM (1),d0
 | Now check again bit #FLT_MANT_DIG (rounding could have produced a
 | 'fraction overflow' ...).
-	btst	IMM (FLT_MANT_DIG),d0	
+	btst	IMM (FLT_MANT_DIG),d0
 	beq	1f
 	lsrl	IMM (1),d0
 #ifndef __mcoldfire__
@@ -3904,7 +3777,7 @@ Lround$to$nearest:
 	addql	IMM (1),d2
 #endif
 1:
-| If bit #FLT_MANT_DIG-1 is clear we have a denormalized number, so we 
+| If bit #FLT_MANT_DIG-1 is clear we have a denormalized number, so we
 | have to put the exponent to zero and return a denormalized number.
 	btst	IMM (FLT_MANT_DIG-1),d0
 	beq	1f
@@ -3918,199 +3791,278 @@ Lround$to$minus:
 	jmp	a0@
 #endif /* L_float */
 
-| gcc expects the routines __eqdf2, __nedf2, __gtdf2, __gedf2,
-| __ledf2, __ltdf2 to all return the same value as a direct call to
-| __cmpdf2 would.  In this implementation, each of these routines
-| simply calls __cmpdf2.  It would be more efficient to give the
-| __cmpdf2 routine several names, but separating them out will make it
-| easier to write efficient versions of these routines someday.
-| If the operands recompare unordered unordered __gtdf2 and __gedf2 return -1.
-| The other routines return 1.
+/* We do not need these routines for coldfire, as it has no extended
+   float format. */
+#if !defined (__mcoldfire__)
 
-#ifdef  L_eqdf2
-	.text
-	FUNC(__eqdf2)
-	.globl	SYM (__eqdf2)
-SYM (__eqdf2):
-	link	a6,IMM (0)
-	pea	1
-	movl	a6@(20),sp@-
-	movl	a6@(16),sp@-
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpdf2_internal)
-	unlk	a6
-	rts
-#endif /* L_eqdf2 */
+#ifdef  L_long_double
 
-#ifdef  L_nedf2
-	.text
-	FUNC(__nedf2)
-	.globl	SYM (__nedf2)
-SYM (__nedf2):
-	link	a6,IMM (0)
-	pea	1
-	movl	a6@(20),sp@-
-	movl	a6@(16),sp@-
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpdf2_internal)
-	unlk	a6
-	rts
-#endif /* L_nedf2 */
+| A long double precision floating point number (long double) has the format:
+|
+| struct _long_double {
+|  unsigned int sign      : 1;  /* sign bit */
+|  unsigned int exponent  : 15; /* exponent, shifted by 16383 */
+|  unsigned int empty     : 16;
+|  unsigned int fraction  : 64; /* fraction */
+| } double;
+|
+| Thus sizeof(long double) = 12 (96 bits).
+|
+| All the routines are callable from C programs, and return the result
+| in the register pair d0-d1. They also preserve all registers except
+| d0-d1 and a0-a1.
 
-#ifdef  L_gtdf2
-	.text
-	FUNC(__gtdf2)
-	.globl	SYM (__gtdf2)
-SYM (__gtdf2):
-	link	a6,IMM (0)
-	pea	-1
-	movl	a6@(20),sp@-
-	movl	a6@(16),sp@-
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpdf2_internal)
-	unlk	a6
-	rts
-#endif /* L_gtdf2 */
+	.globl	SYM (_fpCCR)
+	.globl  $_exception_handler
 
-#ifdef  L_gedf2
-	.text
-	FUNC(__gedf2)
-	.globl	SYM (__gedf2)
-SYM (__gedf2):
-	link	a6,IMM (0)
-	pea	-1
-	movl	a6@(20),sp@-
-	movl	a6@(16),sp@-
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpdf2_internal)
-	unlk	a6
-	rts
-#endif /* L_gedf2 */
+QUIET_NaN      = 0xffffffff
+INFINITY       = 0x7fff0000
 
-#ifdef  L_ltdf2
-	.text
-	FUNC(__ltdf2)
-	.globl	SYM (__ltdf2)
-SYM (__ltdf2):
-	link	a6,IMM (0)
-	pea	1
-	movl	a6@(20),sp@-
-	movl	a6@(16),sp@-
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpdf2_internal)
-	unlk	a6
-	rts
-#endif /* L_ltdf2 */
+X_MAX_EXP      = 0x7fff
+X_BIAS         = 16383
+LDBL_MAX_EXP   = X_MAX_EXP - X_BIAS
+LDBL_MIN_EXP   = 1 - X_BIAS
+LDBL_MANT_DIG  = 64
 
-#ifdef  L_ledf2
-	.text
-	FUNC(__ledf2)
-	.globl	SYM (__ledf2)
-SYM (__ledf2):
-	link	a6,IMM (0)
-	pea	1
-	movl	a6@(20),sp@-
-	movl	a6@(16),sp@-
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpdf2_internal)
-	unlk	a6
-	rts
-#endif /* L_ledf2 */
+| Entry points:
 
-| The comments above about __eqdf2, et. al., also apply to __eqsf2,
-| et. al., except that the latter call __cmpsf2 rather than __cmpdf2.
+	.globl SYM (__negxf2)
+	.globl SYM (__cmpxf2)
+| __addxf3, __subxf3, __mulxf3, and __divxf3 are implemented elsewhere
 
-#ifdef  L_eqsf2
 	.text
-	FUNC(__eqsf2)
-	.globl	SYM (__eqsf2)
-SYM (__eqsf2):
-	link	a6,IMM (0)
-	pea	1
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpsf2_internal)
-	unlk	a6
-	rts
-#endif /* L_eqsf2 */
+	.even
 
-#ifdef  L_nesf2
-	.text
-	FUNC(__nesf2)
-	.globl	SYM (__nesf2)
-SYM (__nesf2):
-	link	a6,IMM (0)
-	pea	1
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpsf2_internal)
-	unlk	a6
-	rts
-#endif /* L_nesf2 */
+| These are common routines to return and signal exceptions.
 
-#ifdef  L_gtsf2
-	.text
-	FUNC(__gtsf2)
-	.globl	SYM (__gtsf2)
-SYM (__gtsf2):
-	link	a6,IMM (0)
-	pea	-1
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpsf2_internal)
-	unlk	a6
-	rts
-#endif /* L_gtsf2 */
+Lx$infty:
+Lx$overflow:
+| Return a properly signed INFINITY and set the exception flags
+	movel	IMM (INFINITY),d0
+	movel	IMM (0),d1
+	movel	IMM (0),d2
+	orl	d7,d0
+	movew	IMM (INEXACT_RESULT+OVERFLOW),d7
+	moveq	IMM (LONG_FLOAT),d6
+	PICJUMP	$_exception_handler
 
-#ifdef  L_gesf2
-	.text
-	FUNC(__gesf2)
-	.globl	SYM (__gesf2)
-SYM (__gesf2):
-	link	a6,IMM (0)
-	pea	-1
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpsf2_internal)
-	unlk	a6
-	rts
-#endif /* L_gesf2 */
+Lx$inop:
+| Return a quiet NaN and set the exception flags
+	movel	IMM (QUIET_NaN),d0
+	movel	d0,d1
+	movel	d0,d2
+	movew	IMM (INEXACT_RESULT+INVALID_OPERATION),d7
+	moveq	IMM (LONG_FLOAT),d6
+	PICJUMP	$_exception_handler
 
-#ifdef  L_ltsf2
-	.text
-	FUNC(__ltsf2)
-	.globl	SYM (__ltsf2)
-SYM (__ltsf2):
-	link	a6,IMM (0)
-	pea	1
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpsf2_internal)
+|=============================================================================
+|                              __negxf2
+|=============================================================================
+
+| long double __negxf2(long double, long double);
+	FUNC(__negxf2)
+SYM (__negxf2):
+ELF_ALIAS(__negxf2)
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
+	moveq	IMM (NEGATE),d5
+	moveml	a6@(8),d0-d2	| get number to negate in d0-d2
+	bchg	IMM (31),d0	| negate
+	movel	d0,d6		| make a positive copy (for the tests)
+	andl	IMM(0x7fff0000),d6	|
+	movel	d6,d4		| check for zero
+	orl	d1,d4		|
+	orl	d2,d4		|
+	beq	2f		| if zero (either sign) return +zero
+	cmpl	IMM (0x7fff0000),d6 | compare to +INFINITY
+	blt	1f		| if finite, return
+	tstl	d1		| if fraction not zero is NaN
+	bne	Lx$inop		|
+	tstl	d2		| if fraction not zero is NaN
+	bne	Lx$inop		|
+	movel	d0,d7		| else get sign and return INFINITY
+	andl	IMM (0x80000000),d7
+	bra	Lx$infty
+1:	PICLEA	SYM (_fpCCR),a0
+	clrw	a0@
+	moveml	d0-d2,M68K_STRUCT_VALUE_REGNUM@
+	movel	M68K_STRUCT_VALUE_REGNUM,d0
+	moveml	sp@,d2-d7/a2-a5
+	| XXX if frame pointer is ever removed, stack pointer must
+	| be adjusted here.
 	unlk	a6
 	rts
-#endif /* L_ltsf2 */
+2:	bclr	IMM (31),d0
+	bra	1b
 
-#ifdef  L_lesf2
-	.text
-	FUNC(__lesf2)
-	.globl	SYM (__lesf2)
-SYM (__lesf2):
-	link	a6,IMM (0)
-	pea	1
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpsf2_internal)
+|=============================================================================
+|                              __cmpxf2
+|=============================================================================
+
+GREATER =  1
+LESS    = -1
+EQUAL   =  0
+
+| The comments above about __eqdf2, et. al., also apply to __eqxf2,
+| et. al., except that the latter call __cmpxf2 rather than __cmpdf2.
+
+	FUNC(__gtxf2)
+	.globl	SYM (__gtxf2)
+SYM (__gtxf2):
+ELF_ALIAS(__gtxf2)
+	FUNC(__gexf2)
+	.globl	SYM (__gexf2)
+SYM (__gexf2):
+ELF_ALIAS(__gexf2)
+	lea LESS,a0
+	jbra SYM(__cmpxf2_internal)
+
+	FUNC(__eqxf2)
+	.globl	SYM (__eqxf2)
+SYM (__eqxf2):
+ELF_ALIAS(__eqxf2)
+	FUNC(__nexf2)
+	.globl	SYM (__nexf2)
+SYM (__nexf2):
+ELF_ALIAS(__nexf2)
+	FUNC(__ltxf2)
+	.globl	SYM (__ltxf2)
+SYM (__ltxf2):
+ELF_ALIAS(__ltxf2)
+	FUNC(__lexf2)
+	.globl	SYM (__lexf2)
+SYM (__lexf2):
+ELF_ALIAS(__lexf2)
+
+| int __cmpxf2(long double, long double);
+	FUNC(__cmpxf2)
+SYM (__cmpxf2):
+ELF_ALIAS(__cmpxf2)
+	lea	GREATER,a0
+
+| int __cmpxf2_internal(long double, long double, int);
+SYM (__cmpxf2_internal):
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
+	movel	a6@(8),d0	| get first operand
+	movel	a6@(12),d1	|
+	movel	a6@(16),a2
+	movel	a6@(20),d2	| get second operand
+	movel	a6@(24),d3	|
+	movel	a6@(28),a3
+| First check if a and/or b are (+/-) zero and in that case clear
+| the sign bit.
+	movel	d0,d6		| copy signs into d6 (a) and d7(b)
+	andl	IMM (0x7fff0000),d0	| and clear signs in d0 and d2
+	movel	d2,d7		|
+	andl	IMM (0x7fff0000),d2
+	cmpl	IMM (0x7fff0000),d0 | check for a == NaN
+	beq	Lcmpxf$a$nf	| if equal can be INFINITY, so check d1
+	movel	a2,d4		| copy into d4 to test for zero
+	orl	d0,d4		|
+	orl	d1,d4		|
+	beq	Lcmpxf$a$0	|
+Lcmpxf$0:
+	cmpl	IMM (0x7fff0000),d2 | check for b == NaN
+	bhi	Lcmpxf$inop		| if d2 > 0x7ff00000, b is NaN
+	beq	Lcmpxf$b$nf	| if equal can be INFINITY, so check d3
+	movel	a3,d4		|
+	orl	d2,d4		|
+	orl	d3,d4		|
+	beq	Lcmpxf$b$0	|
+Lcmpxf$1:
+| Check the signs
+	eorl	d6,d7
+	bpl	1f
+| If the signs are not equal check if a >= 0
+	tstl	d6
+	bpl	Lcmpxf$a$gt$b	| if (a >= 0 && b < 0) => a > b
+	bmi	Lcmpxf$b$gt$a	| if (a < 0 && b >= 0) => a < b
+1:
+| If the signs are equal check for < 0
+	tstl	d6
+	bpl	1f
+| If both are negative exchange them
+#ifndef __mcoldfire__
+	exg	d0,d2
+	exg	d1,d3
+	exg	a2,a3
+#else
+	movel	d0,d7
+	movel	d2,d0
+	movel	d7,d2
+	movel	d1,d7
+	movel	d3,d1
+	movel	d7,d3
+	movel	a2,d7
+	movel	a3,a2
+	movel	d7,a3
+#endif
+1:
+| Now that they are positive we just compare them as longs (does this also
+| work for denormalized numbers?).
+	cmpl	d0,d2
+	bhi	Lcmpxf$b$gt$a	| |b| > |a|
+	bne	Lcmpxf$a$gt$b	| |b| < |a|
+| If we got here d0 == d2, so we compare d1 and d3.
+	cmpl	d1,d3
+	bhi	Lcmpxf$b$gt$a	| |b| > |a|
+	bne	Lcmpxf$a$gt$b	| |b| < |a|
+| If we got here d1 == d3, so we compare a2 and a3.
+	movel	a3,d3
+	cmpl	a2,d3
+	bhi	Lcmpxf$b$gt$a	| |b| > |a|
+	bne	Lcmpxf$a$gt$b	| |b| < |a|
+| If we got here a == b.
+	movel	IMM (EQUAL),d0
+	bra 1f
+Lcmpxf$a$gt$b:
+	movel	IMM (GREATER),d0
+	bra 1f
+Lcmpxf$b$gt$a:
+	movel	IMM (LESS),d0
+1:
+	moveml	sp@,d2-d7/a2-a5 	| put back the registers
+	| XXX if frame pointer is ever removed, stack pointer must
+	| be adjusted here.
 	unlk	a6
 	rts
-#endif /* L_lesf2 */
 
-#if defined (__ELF__) && defined (__linux__)
+Lcmpxf$a$0:
+	bclr	IMM (31),d6
+	bra	Lcmpxf$0
+Lcmpxf$b$0:
+	bclr	IMM (31),d7
+	bra	Lcmpxf$1
+
+Lcmpxf$a$nf:
+	tstl	d1
+	bne	Lcmpxf$inop
+	movel a2,d4
+	bne	Lcmpxf$inop
+	bra	Lcmpxf$0
+
+Lcmpxf$b$nf:
+	tstl	d3
+	bne	Lcmpxf$inop
+	movel a3,d4
+	bne	Lcmpxf$inop
+	bra	Lcmpxf$1
+
+Lcmpxf$inop:
+	movel	a0,d0
+	moveq	IMM (COMPARE),d5
+	moveq	IMM (INEXACT_RESULT+INVALID_OPERATION),d7
+	| this functions returns an int, not a long double
+	moveq	IMM (LONG_FLOAT+1),d6
+	PICJUMP	$_exception_handler
+
+#endif /* _long_double */
+
+#endif /* __mcoldfire__ */
+
+
+#if defined (__ELF__)
 	/* Make stack non-executable for ELF linux targets.  */
 	.section	.note.GNU-stack,"",@progbits
 #endif
diff --git a/libgcc/config/m68k/mint-atomic.c b/libgcc/config/m68k/mint-atomic.c
new file mode 100644
index 00000000000..1f50e91da21
--- /dev/null
+++ b/libgcc/config/m68k/mint-atomic.c
@@ -0,0 +1,222 @@
+/* Linux-specific atomic operations for m68k Linux.
+   Copyright (C) 2011-2017 Free Software Foundation, Inc.
+   Based on code contributed by CodeSourcery for ARM EABI Linux.
+
+This file is part of GCC.
+
+GCC is free software; you can redistribute it and/or modify it under
+the terms of the GNU General Public License as published by the Free
+Software Foundation; either version 3, or (at your option) any later
+version.
+
+GCC is distributed in the hope that it will be useful, but WITHOUT ANY
+WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+Under Section 7 of GPL version 3, you are granted additional
+permissions described in the GCC Runtime Library Exception, version
+3.1, as published by the Free Software Foundation.
+
+You should have received a copy of the GNU General Public License and
+a copy of the GCC Runtime Library Exception along with this program;
+see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+<http://www.gnu.org/licenses/>.  */
+
+/* Coldfire dropped the CAS instruction from the base M68K ISA.
+
+   GCC automatically issues a asm memory barrier when it encounters
+   a __sync_synchronize builtin.  Thus, we do not need to define this
+   builtin.
+
+   We implement byte, short and int versions of each atomic operation
+   using the kernel helper defined below.  There is no support for
+   64-bit operations yet.  */
+
+#include <stdbool.h>
+
+#ifndef __NR_atomic_cmpxchg_32
+#define __NR_atomic_cmpxchg_32  335
+#endif
+
+typedef unsigned int uint32_t __attribute__ ((mode (SI)));
+
+/* Kernel helper for compare-and-exchange a 32-bit value.  */
+static inline uint32_t
+__kernel_cmpxchg (uint32_t *mem, uint32_t oldval, uint32_t newval)
+{
+#ifdef __linux__
+  register uint32_t *a0 asm("a0") = mem;
+  register uint32_t d2 asm("d2") = oldval;
+  register uint32_t d1 asm("d1") = newval;
+  register uint32_t d0 asm("d0") = __NR_atomic_cmpxchg_32;
+
+  asm volatile ("trap #0"
+		: "=r"(d0), "=r"(d1), "=r"(a0)
+		: "r"(d0), "r"(d1), "r"(d2), "r"(a0)
+		: "memory", "a1");
+
+  return d0;
+#else
+  volatile uint32_t *memp = (volatile uint32_t *)mem;
+  uint32_t memval = *memp;
+  if (memval == oldval)
+    *memp = newval;
+  return memval;
+#endif
+}
+
+#define HIDDEN __attribute__ ((visibility ("hidden")))
+
+/* Big endian masks  */
+#define INVERT_MASK_1 24
+#define INVERT_MASK_2 16
+
+#define MASK_1 0xffu
+#define MASK_2 0xffffu
+
+#define NAME_oldval(OP, WIDTH) __sync_fetch_and_##OP##_##WIDTH
+#define NAME_newval(OP, WIDTH) __sync_##OP##_and_fetch_##WIDTH
+
+#define WORD_SYNC_OP(OP, PFX_OP, INF_OP, RETURN)			\
+  uint32_t HIDDEN							\
+  NAME##_##RETURN (OP, 4) (uint32_t *ptr, uint32_t val)			\
+  {									\
+    uint32_t oldval, newval, cmpval = *ptr;				\
+									\
+    do {								\
+      oldval = cmpval;							\
+      newval = PFX_OP (oldval INF_OP val);				\
+      cmpval = __kernel_cmpxchg (ptr, oldval, newval);			\
+    } while (__builtin_expect (oldval != cmpval, 0));			\
+									\
+    return RETURN;							\
+  }
+
+#define SUBWORD_SYNC_OP(OP, PFX_OP, INF_OP, TYPE, WIDTH, RETURN)	\
+  TYPE HIDDEN								\
+  NAME##_##RETURN (OP, WIDTH) (TYPE *ptr, TYPE sval)			\
+  {									\
+    uint32_t *wordptr = (uint32_t *) ((unsigned long) ptr & ~3);	\
+    uint32_t mask, shift, oldval, newval, cmpval, wval;		\
+									\
+    shift = (((unsigned long) ptr & 3) << 3) ^ INVERT_MASK_##WIDTH;	\
+    mask = MASK_##WIDTH << shift;					\
+    wval = (sval & MASK_##WIDTH) << shift;				\
+									\
+    cmpval = *wordptr;							\
+    do {								\
+      oldval = cmpval;							\
+      newval = PFX_OP (oldval INF_OP wval);				\
+      newval = (newval & mask) | (oldval & ~mask);			\
+      cmpval = __kernel_cmpxchg (wordptr, oldval, newval);		\
+    } while (__builtin_expect (oldval != cmpval, 0));			\
+									\
+    return (RETURN >> shift) & MASK_##WIDTH;				\
+  }
+
+WORD_SYNC_OP (add,   , +, oldval)
+WORD_SYNC_OP (sub,   , -, oldval)
+WORD_SYNC_OP (or,    , |, oldval)
+WORD_SYNC_OP (and,   , &, oldval)
+WORD_SYNC_OP (xor,   , ^, oldval)
+WORD_SYNC_OP (nand, ~, &, oldval)
+
+SUBWORD_SYNC_OP (add,   , +, unsigned short, 2, oldval)
+SUBWORD_SYNC_OP (sub,   , -, unsigned short, 2, oldval)
+SUBWORD_SYNC_OP (or,    , |, unsigned short, 2, oldval)
+SUBWORD_SYNC_OP (and,   , &, unsigned short, 2, oldval)
+SUBWORD_SYNC_OP (xor,   , ^, unsigned short, 2, oldval)
+SUBWORD_SYNC_OP (nand, ~, &, unsigned short, 2, oldval)
+
+SUBWORD_SYNC_OP (add,   , +, unsigned char, 1, oldval)
+SUBWORD_SYNC_OP (sub,   , -, unsigned char, 1, oldval)
+SUBWORD_SYNC_OP (or,    , |, unsigned char, 1, oldval)
+SUBWORD_SYNC_OP (and,   , &, unsigned char, 1, oldval)
+SUBWORD_SYNC_OP (xor,   , ^, unsigned char, 1, oldval)
+SUBWORD_SYNC_OP (nand, ~, &, unsigned char, 1, oldval)
+
+WORD_SYNC_OP (add,   , +, newval)
+WORD_SYNC_OP (sub,   , -, newval)
+WORD_SYNC_OP (or,    , |, newval)
+WORD_SYNC_OP (and,   , &, newval)
+WORD_SYNC_OP (xor,   , ^, newval)
+WORD_SYNC_OP (nand, ~, &, newval)
+
+SUBWORD_SYNC_OP (add,   , +, unsigned short, 2, newval)
+SUBWORD_SYNC_OP (sub,   , -, unsigned short, 2, newval)
+SUBWORD_SYNC_OP (or,    , |, unsigned short, 2, newval)
+SUBWORD_SYNC_OP (and,   , &, unsigned short, 2, newval)
+SUBWORD_SYNC_OP (xor,   , ^, unsigned short, 2, newval)
+SUBWORD_SYNC_OP (nand, ~, &, unsigned short, 2, newval)
+
+SUBWORD_SYNC_OP (add,   , +, unsigned char, 1, newval)
+SUBWORD_SYNC_OP (sub,   , -, unsigned char, 1, newval)
+SUBWORD_SYNC_OP (or,    , |, unsigned char, 1, newval)
+SUBWORD_SYNC_OP (and,   , &, unsigned char, 1, newval)
+SUBWORD_SYNC_OP (xor,   , ^, unsigned char, 1, newval)
+SUBWORD_SYNC_OP (nand, ~, &, unsigned char, 1, newval)
+
+uint32_t HIDDEN
+__sync_val_compare_and_swap_4 (uint32_t *ptr, uint32_t oldval, uint32_t newval)
+{
+  return __kernel_cmpxchg (ptr, oldval, newval);
+}
+
+bool HIDDEN
+__sync_bool_compare_and_swap_4 (uint32_t *ptr, uint32_t oldval,
+				uint32_t newval)
+{
+  return __kernel_cmpxchg (ptr, oldval, newval) == oldval;
+}
+
+#define SUBWORD_VAL_CAS(TYPE, WIDTH)					\
+  TYPE HIDDEN								\
+  __sync_val_compare_and_swap_##WIDTH (TYPE *ptr, TYPE soldval,		\
+				       TYPE snewval)			\
+  {									\
+    uint32_t *wordptr = (uint32_t *)((unsigned long) ptr & ~3);		\
+    uint32_t mask, shift, woldval, wnewval;				\
+    uint32_t oldval, newval, cmpval;					\
+									\
+    shift = (((unsigned long) ptr & 3) << 3) ^ INVERT_MASK_##WIDTH;	\
+    mask = MASK_##WIDTH << shift;					\
+    woldval = (soldval & MASK_##WIDTH) << shift;			\
+    wnewval = (snewval & MASK_##WIDTH) << shift;			\
+    cmpval = *wordptr;							\
+									\
+    do {								\
+      oldval = cmpval;							\
+      if ((oldval & mask) != woldval)					\
+	break;								\
+      newval = (oldval & ~mask) | wnewval;				\
+      cmpval = __kernel_cmpxchg (wordptr, oldval, newval);		\
+    } while (__builtin_expect (oldval != cmpval, 0));			\
+									\
+    return (oldval >> shift) & MASK_##WIDTH;				\
+  }
+
+SUBWORD_VAL_CAS (unsigned short, 2)
+SUBWORD_VAL_CAS (unsigned char,  1)
+
+#define SUBWORD_BOOL_CAS(TYPE, WIDTH)					\
+  bool HIDDEN								\
+  __sync_bool_compare_and_swap_##WIDTH (TYPE *ptr, TYPE oldval,		\
+					TYPE newval)			\
+  {									\
+    return (__sync_val_compare_and_swap_##WIDTH (ptr, oldval, newval)	\
+	    == oldval);							\
+  }
+
+SUBWORD_BOOL_CAS (unsigned short, 2)
+SUBWORD_BOOL_CAS (unsigned char,  1)
+
+#undef NAME_oldval
+#define NAME_oldval(OP, WIDTH) __sync_lock_##OP##_##WIDTH
+#define COMMA ,
+
+#pragma GCC diagnostic ignored "-Wunused-value"
+
+WORD_SYNC_OP (test_and_set, , COMMA, oldval)
+SUBWORD_SYNC_OP (test_and_set, , COMMA, unsigned char, 1, oldval)
+SUBWORD_SYNC_OP (test_and_set, , COMMA, unsigned short, 2, oldval)
diff --git a/libgcc/config/m68k/mulxf3.c b/libgcc/config/m68k/mulxf3.c
new file mode 100644
index 00000000000..51e5fb9d5a8
--- /dev/null
+++ b/libgcc/config/m68k/mulxf3.c
@@ -0,0 +1 @@
+#include "soft-fp/mulxf3.c"
diff --git a/libgcc/config/m68k/sfp-exceptions.c b/libgcc/config/m68k/sfp-exceptions.c
new file mode 100644
index 00000000000..3bd77a70b7c
--- /dev/null
+++ b/libgcc/config/m68k/sfp-exceptions.c
@@ -0,0 +1,32 @@
+/*
+ * Copyright (C) 2012-2023 Free Software Foundation, Inc.
+ *
+ * This file is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License as published by the
+ * Free Software Foundation; either version 3, or (at your option) any
+ * later version.
+ * 
+ * This file is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * General Public License for more details.
+ * 
+ * Under Section 7 of GPL version 3, you are granted additional
+ * permissions described in the GCC Runtime Library Exception, version
+ * 3.1, as published by the Free Software Foundation.
+ *
+ * You should have received a copy of the GNU General Public License and
+ * a copy of the GCC Runtime Library Exception along with this program;
+ * see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+ * <http://www.gnu.org/licenses/>.
+ */
+
+#ifndef _SOFT_FLOAT
+#include "sfp-machine.h"
+
+void
+__sfp_handle_exceptions (int _fex __attribute__ ((unused)))
+{
+  /* does nothing currently. The DFmode functions eventually do a trap #15 */
+}
+#endif
diff --git a/libgcc/config/m68k/sfp-machine.h b/libgcc/config/m68k/sfp-machine.h
new file mode 100644
index 00000000000..9376f62c74f
--- /dev/null
+++ b/libgcc/config/m68k/sfp-machine.h
@@ -0,0 +1,193 @@
+#define _FP_W_TYPE_SIZE		32
+#define _FP_W_TYPE		unsigned long
+#define _FP_WS_TYPE		signed long
+#define _FP_I_TYPE		long
+
+/* The type of the result of a floating point comparison.  This must
+   match `__libgcc_cmp_return__' in GCC for the target.  */
+typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));
+#define CMPtype __gcc_CMPtype
+
+#if 0 /* does not work, because all inputs/outputs must be in data registers */
+
+#define __FP_FRAC_ADD_4(r3,r2,r1,r0,x3,x2,x1,x0,y3,y2,y1,y0)	\
+  __asm__ ("addl %11,%3\n\t"				\
+	   "addxl %9,%2\n\t"				\
+	   "addxl %7,%1\n\t"				\
+	   "addxl %5,%0"				\
+	   : "=d" ((USItype) (r3)),				\
+	     "=&d" ((USItype) (r2)),				\
+	     "=&d" ((USItype) (r1)),				\
+	     "=&d" ((USItype) (r0))				\
+	   : "%0" ((USItype) (x3)),				\
+	     "g" ((USItype) (y3)),				\
+	     "%1" ((USItype) (x2)),				\
+	     "g" ((USItype) (y2)),				\
+	     "%2" ((USItype) (x1)),				\
+	     "g" ((USItype) (y1)),				\
+	     "%3" ((USItype) (x0)),				\
+	     "g" ((USItype) (y0)))
+#define __FP_FRAC_ADD_3(r2,r1,r0,x2,x1,x0,y2,y1,y0)		\
+  __asm__ ("addl %8,%2\n\t"				\
+	   "addxl %6,%1\n\t"				\
+	   "addxl %4,%0"				\
+	   : "=d" ((USItype) (r2)),				\
+	     "=&d" ((USItype) (r1)),				\
+	     "=&d" ((USItype) (r0))				\
+	   : "%0" ((USItype) (x2)),				\
+	     "g" ((USItype) (y2)),				\
+	     "%1" ((USItype) (x1)),				\
+	     "g" ((USItype) (y1)),				\
+	     "%2" ((USItype) (x0)),				\
+	     "g" ((USItype) (y0)))
+#define __FP_FRAC_SUB_4(r3,r2,r1,r0,x3,x2,x1,x0,y3,y2,y1,y0)	\
+  __asm__ ("subl %11,%3\n\t"				\
+	   "subxl %9,%2\n\t"				\
+	   "subxl %7,%1\n\t"				\
+	   "subxl %5,%0"				\
+	   : "=d" ((USItype) (r3)),				\
+	     "=&d" ((USItype) (r2)),				\
+	     "=&d" ((USItype) (r1)),				\
+	     "=&d" ((USItype) (r0))				\
+	   : "0" ((USItype) (x3)),				\
+	     "g" ((USItype) (y3)),				\
+	     "1" ((USItype) (x2)),				\
+	     "g" ((USItype) (y2)),				\
+	     "2" ((USItype) (x1)),				\
+	     "g" ((USItype) (y1)),				\
+	     "3" ((USItype) (x0)),				\
+	     "g" ((USItype) (y0)))
+#define __FP_FRAC_SUB_3(r2,r1,r0,x2,x1,x0,y2,y1,y0)		\
+  __asm__ ("subl %8,%2\n\t"				\
+	   "subxl %6,%1\n\t"				\
+	   "subxl %4,%0"				\
+	   : "=d" ((USItype) (r2)),				\
+	     "=&d" ((USItype) (r1)),				\
+	     "=&d" ((USItype) (r0))				\
+	   : "0" ((USItype) (x2)),				\
+	     "g" ((USItype) (y2)),				\
+	     "1" ((USItype) (x1)),				\
+	     "g" ((USItype) (y1)),				\
+	     "2" ((USItype) (x0)),				\
+	     "g" ((USItype) (y0)))
+#endif
+#define __FP_FRAC_ADDI_4(x3,x2,x1,x0,i)				\
+  do { \
+    long zero; \
+  	__asm__ ("moveq #0,%4\n\t" \
+       "addl %5,%3\n\t"				\
+	   "addxl %4,%2\n\t"				\
+	   "addxl %4,%1\n\t"				\
+	   "addxl %4,%0"				\
+	   : "+d" ((USItype) (x3)),				\
+	     "+&d" ((USItype) (x2)),				\
+	     "+&d" ((USItype) (x1)),				\
+	     "+&d" ((USItype) (x0)),				\
+	     "=d"(zero) \
+	   : "g" ((USItype) (i))); \
+	} while(0)
+
+#define _FP_MUL_MEAT_S(R,X,Y)	_FP_MUL_MEAT_1_wide(_FP_WFRACBITS_S,R,X,Y,umul_ppmm)
+#define _FP_MUL_MEAT_D(R,X,Y)	_FP_MUL_MEAT_2_wide(_FP_WFRACBITS_D,R,X,Y,umul_ppmm)
+#define _FP_MUL_MEAT_E(R,X,Y)	_FP_MUL_MEAT_4_wide(_FP_WFRACBITS_E,R,X,Y,umul_ppmm)
+#define _FP_MUL_MEAT_Q(R,X,Y)	_FP_MUL_MEAT_4_wide(_FP_WFRACBITS_Q,R,X,Y,umul_ppmm)
+
+#define _FP_DIV_MEAT_S(R,X,Y)   _FP_DIV_MEAT_1_loop(S,R,X,Y)
+#define _FP_DIV_MEAT_D(R,X,Y)   _FP_DIV_MEAT_2_udiv(D,R,X,Y)
+#define _FP_DIV_MEAT_E(R,X,Y)   _FP_DIV_MEAT_4_udiv(E,R,X,Y)
+#define _FP_DIV_MEAT_Q(R,X,Y)   _FP_DIV_MEAT_4_udiv(Q,R,X,Y)
+
+#define _FP_NANFRAC_H		_FP_QNANBIT_H
+#define _FP_NANFRAC_B		_FP_QNANBIT_B
+#define _FP_NANFRAC_S		_FP_QNANBIT_S
+#define _FP_NANFRAC_D		_FP_QNANBIT_D, 0
+/* Even if XFmode is 12byte,  we have to pad it to
+   16byte since soft-fp emulation is done in 16byte.  */
+#define _FP_NANFRAC_E		_FP_QNANBIT_E, 0, 0, 0
+#define _FP_NANFRAC_Q		_FP_QNANBIT_Q, 0, 0, 0
+
+#ifndef _SOFT_FLOAT
+#define FP_EX_SHIFT 0
+
+#define _FP_DECL_EX \
+  unsigned short _fcw __attribute__ ((unused)) = FP_RND_NEAREST;
+
+#define FP_RND_NEAREST		0
+#define FP_RND_ZERO		0x010
+#define FP_RND_PINF		0x020
+#define FP_RND_MINF		0x030
+
+#define FP_RND_MASK		0x030
+
+#define FP_INIT_ROUNDMODE
+
+#endif
+
+#define _FP_KEEPNANFRACP	1
+#define _FP_QNANNEGATEDP 0
+
+#define _FP_NANSIGN_H		0
+#define _FP_NANSIGN_B		0
+#define _FP_NANSIGN_S		0
+#define _FP_NANSIGN_D		0
+#define _FP_NANSIGN_E		0
+#define _FP_NANSIGN_Q		0
+
+/* Here is something Intel misdesigned: the specs don't define
+   the case where we have two NaNs with same mantissas, but
+   different sign. Different operations pick up different NaNs.  */
+#define _FP_CHOOSENAN(fs, wc, R, X, Y, OP)			\
+  do {								\
+    if (_FP_FRAC_GT_##wc(X, Y)					\
+	|| (_FP_FRAC_EQ_##wc(X,Y) && (OP == '+' || OP == '*')))	\
+      {								\
+	R##_s = X##_s;						\
+	_FP_FRAC_COPY_##wc(R,X);				\
+      }								\
+    else							\
+      {								\
+	R##_s = Y##_s;						\
+	_FP_FRAC_COPY_##wc(R,Y);				\
+      }								\
+    R##_c = FP_CLS_NAN;						\
+  } while (0)
+
+#ifndef _SOFT_FLOAT
+/*
+ * these are arbitrary, but we choose
+ * the same values as co-processor would use
+ */
+#define FP_EX_INVALID		0x4000
+#define FP_EX_OVERFLOW		0x1000
+#define FP_EX_DIVZERO		0x0400
+#define FP_EX_UNDERFLOW		0x0800
+#define FP_EX_INEXACT		0x0200
+#define FP_EX_ALL \
+	(FP_EX_INVALID | FP_EX_DENORM | FP_EX_DIVZERO | FP_EX_OVERFLOW \
+	 | FP_EX_UNDERFLOW | FP_EX_INEXACT)
+
+void __sfp_handle_exceptions (int);
+
+#define FP_HANDLE_EXCEPTIONS			\
+  do {						\
+    if (__builtin_expect (_fex, 0))		\
+      __sfp_handle_exceptions (_fex);		\
+  } while (0)
+
+#define FP_TRAPPING_EXCEPTIONS ((_fcw >> FP_EX_SHIFT) & FP_EX_ALL)
+
+#define FP_ROUNDMODE		(_fcw & FP_RND_MASK)
+#endif
+
+#define _FP_TININESS_AFTER_ROUNDING 1
+
+#define	__LITTLE_ENDIAN	1234
+#define	__BIG_ENDIAN	4321
+
+#define __BYTE_ORDER __BIG_ENDIAN
+
+/* Define ALIASNAME as a strong alias for NAME.  */
+# define strong_alias(name, aliasname) _strong_alias(name, aliasname)
+# define _strong_alias(name, aliasname) \
+  extern __typeof (name) aliasname __attribute__ ((alias (#name)));
+
diff --git a/libgcc/config/m68k/subxf3.c b/libgcc/config/m68k/subxf3.c
new file mode 100644
index 00000000000..c827c1f9908
--- /dev/null
+++ b/libgcc/config/m68k/subxf3.c
@@ -0,0 +1,47 @@
+/* Software floating-point emulation.
+   Return a - b
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp/soft-fp.h"
+#ifdef LIBGCC_HAS_XF_MODE
+#include "soft-fp/extended.h"
+
+long double
+__subxf3 (long double a, long double b)
+{
+	(void)a;
+	__asm__ __volatile__(
+		"bchg #7,%0\n\t"
+		"jmp %1"
+	:
+	: "m"(b), "m"(__addxf3)
+	: "cc", "memory");
+	__builtin_unreachable();
+}
+ELF_ALIAS(__subxf3)
+
+#endif
diff --git a/libgcc/config/m68k/t-floatlib b/libgcc/config/m68k/t-floatlib
index 1ee8782d9fd..50a9ad20070 100644
--- a/libgcc/config/m68k/t-floatlib
+++ b/libgcc/config/m68k/t-floatlib
@@ -1,11 +1,31 @@
 LIB1ASMSRC = m68k/lb1sf68.S
 LIB1ASMFUNCS = _mulsi3 _udivsi3 _divsi3 _umodsi3 _modsi3 \
-   _double _float _floatex \
-   _eqdf2 _nedf2 _gtdf2 _gedf2 _ltdf2 _ledf2 \
-   _eqsf2 _nesf2 _gtsf2 _gesf2 _ltsf2 _lesf2
+	_double _long_double _float _floatex
 
-LIB2ADD = $(srcdir)/config/m68k/fpgnulib.c xfgnulib.c
-
-xfgnulib.c: $(srcdir)/config/m68k/fpgnulib.c
-	echo '#define EXTFLOAT' > xfgnulib.c
-	cat $< >> xfgnulib.c
+LIB2ADD = \
+	$(srcdir)/config/m68k/unordsf2.c \
+	$(srcdir)/config/m68k/unorddf2.c \
+	$(srcdir)/config/m68k/floatunsidf.c \
+	$(srcdir)/config/m68k/floatsidf.c \
+	$(srcdir)/config/m68k/floatunsisf.c \
+	$(srcdir)/config/m68k/floatsisf.c \
+	$(srcdir)/config/m68k/extendsfdf2.c \
+	$(srcdir)/config/m68k/truncdfsf2.c \
+	$(srcdir)/config/m68k/fixdfsi.c \
+	$(srcdir)/config/m68k/fixsfsi.c \
+	\
+	$(srcdir)/config/m68k/unordxf2.c \
+	$(srcdir)/config/m68k/extenddfxf2.c \
+	$(srcdir)/config/m68k/extendsfxf2.c \
+	$(srcdir)/config/m68k/truncxfdf2.c \
+	$(srcdir)/config/m68k/truncxfsf2.c \
+	$(srcdir)/config/m68k/floatsixf.c \
+	$(srcdir)/config/m68k/floatunsixf.c \
+	$(srcdir)/config/m68k/fixxfsi.c \
+	\
+	$(srcdir)/config/m68k/addxf3.c \
+	$(srcdir)/config/m68k/subxf3.c \
+	$(srcdir)/config/m68k/mulxf3.c \
+	$(srcdir)/config/m68k/divxf3.c \
+	$(srcdir)/config/m68k/sfp-exceptions.c \
+	$(empty)
diff --git a/libgcc/config/m68k/t-mint b/libgcc/config/m68k/t-mint
new file mode 100644
index 00000000000..c768fc121b0
--- /dev/null
+++ b/libgcc/config/m68k/t-mint
@@ -0,0 +1 @@
+LIB2ADD_ST = $(srcdir)/config/m68k/mint-atomic.c
diff --git a/libgcc/config/m68k/truncdfsf2.c b/libgcc/config/m68k/truncdfsf2.c
new file mode 100644
index 00000000000..75017b4f0a8
--- /dev/null
+++ b/libgcc/config/m68k/truncdfsf2.c
@@ -0,0 +1,2 @@
+#define L_truncdfsf2
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/truncxfdf2.c b/libgcc/config/m68k/truncxfdf2.c
new file mode 100644
index 00000000000..67db750e2d0
--- /dev/null
+++ b/libgcc/config/m68k/truncxfdf2.c
@@ -0,0 +1,2 @@
+#define L_truncxfdf2
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/truncxfsf2.c b/libgcc/config/m68k/truncxfsf2.c
new file mode 100644
index 00000000000..1320019a454
--- /dev/null
+++ b/libgcc/config/m68k/truncxfsf2.c
@@ -0,0 +1,2 @@
+#define L_truncxfsf2
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/unorddf2.c b/libgcc/config/m68k/unorddf2.c
new file mode 100644
index 00000000000..32f668b2aa7
--- /dev/null
+++ b/libgcc/config/m68k/unorddf2.c
@@ -0,0 +1,2 @@
+#define L_unorddf2
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/unordsf2.c b/libgcc/config/m68k/unordsf2.c
new file mode 100644
index 00000000000..0471d9a121e
--- /dev/null
+++ b/libgcc/config/m68k/unordsf2.c
@@ -0,0 +1,2 @@
+#define L_unordsf2
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/unordxf2.c b/libgcc/config/m68k/unordxf2.c
new file mode 100644
index 00000000000..a1c11bee483
--- /dev/null
+++ b/libgcc/config/m68k/unordxf2.c
@@ -0,0 +1,2 @@
+#define L_unordxf2
+#include "fpgnulib.c"
diff --git a/libgcc/crtstuff.c b/libgcc/crtstuff.c
index 52ed6d39cc8..7e4283fb7cc 100644
--- a/libgcc/crtstuff.c
+++ b/libgcc/crtstuff.c
@@ -64,6 +64,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 #include "libgcc_tm.h"
 #include "unwind-dw2-fde.h"
 
+#include "elf-alias.h"
+
 #ifndef FORCE_CODE_SECTION_ALIGN
 # define FORCE_CODE_SECTION_ALIGN
 #endif
@@ -199,7 +201,12 @@ extern void _ITM_deregisterTMCloneTable (void *) TARGET_ATTRIBUTE_WEAK;
 
 /*  Declare a pointer to void function type.  */
 typedef void (*func_ptr) (void);
+#ifdef HAS_INIT_SECTION
 #define STATIC static
+#else
+/* Define global arrays because they are referred by __main.o.  */
+#define STATIC
+#endif
 
 #else  /* OBJECT_FORMAT_ELF */
 
@@ -253,6 +260,7 @@ STATIC func_ptr __DTOR_LIST__[1]
   = { (func_ptr) (-1) };
 #else
 STATIC func_ptr __DTOR_LIST__[1]
+  __attribute__((__used__))
   __attribute__((section(".dtors"), aligned(sizeof(func_ptr))))
   = { (func_ptr) (-1) };
 #endif /* __DTOR_LIST__ alternatives */
@@ -262,6 +270,7 @@ STATIC func_ptr __DTOR_LIST__[1]
 /* Stick a label at the beginning of the frame unwind info so we can register
    and deregister it with the exception handling library code.  */
 STATIC EH_FRAME_SECTION_CONST char __EH_FRAME_BEGIN__[]
+     __attribute__((__used__))
      __attribute__((section(__LIBGCC_EH_FRAME_SECTION_NAME__), aligned(4)))
      = { };
 #endif /* USE_EH_FRAME_REGISTRY */
@@ -568,6 +577,8 @@ __do_global_ctors_1(void)
 }
 #endif /* USE_EH_FRAME_REGISTRY || USE_TM_CLONE_REGISTRY */
 
+#elif defined(__MINT__) && defined(__ELF__)
+/* already done in libgcc2.c */
 #else /* ! __LIBGCC_INIT_SECTION_ASM_OP__ && ! HAS_INIT_SECTION */
 #error "What are you doing with crtstuff.c, then?"
 #endif
@@ -595,6 +606,7 @@ STATIC func_ptr __CTOR_END__[1]
   = { (func_ptr) 0 };
 #else
 STATIC func_ptr __CTOR_END__[1]
+  __attribute__((__used__))
   __attribute__((section(".ctors"), aligned(sizeof(func_ptr))))
   = { (func_ptr) 0 };
 #endif
@@ -727,6 +739,8 @@ __do_global_ctors (void)
     (*p) ();
 }
 
+#elif defined(__MINT__) && defined(__ELF__)
+/* already done in libgcc2.c */
 #else /* ! __LIBGCC_INIT_SECTION_ASM_OP__ && ! HAS_INIT_SECTION */
 #error "What are you doing with crtstuff.c, then?"
 #endif
diff --git a/libgcc/elf-alias.h b/libgcc/elf-alias.h
new file mode 100644
index 00000000000..cb3b359fabf
--- /dev/null
+++ b/libgcc/elf-alias.h
@@ -0,0 +1,17 @@
+/*
+ * When compiling for elf without a USER_LABEL_PREFIX,
+ * still provide alias for internal functions when user code is compiled
+ * with -fleading-underscore
+ */
+#define _ 2 /* __USER_LABEL_PREFIX__ may be defined to this */
+#if defined(__ELF__) && (__USER_LABEL_PREFIX__ + 0) != 2
+#ifdef __ASSEMBLER__
+#define ELF_ALIAS(x) .globl _ ## x; _ ## x:
+#else
+#define ELF_ALIAS(f) typeof(f) _ ## f __attribute__((alias(#f)));
+#pragma GCC diagnostic ignored "-Wmissing-attributes"
+#endif
+#else
+#define ELF_ALIAS(f)
+#endif
+#undef _
diff --git a/libgcc/emutls.c b/libgcc/emutls.c
index ea01f0ef19a..f061d3327a3 100644
--- a/libgcc/emutls.c
+++ b/libgcc/emutls.c
@@ -29,6 +29,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 #include "tm.h"
 #include "libgcc_tm.h"
 #include "gthr.h"
+#include "elf-alias.h"
 
 typedef unsigned int word __attribute__((mode(word)));
 typedef unsigned int pointer __attribute__((mode(pointer)));
@@ -50,8 +51,8 @@ struct __emutls_array
   void **data[];
 };
 
-void *__emutls_get_address (struct __emutls_object *);
-void __emutls_register_common (struct __emutls_object *, word, word, void *);
+void *__emutls_get_address (void *);
+void __emutls_register_common (void *, word, word, void *);
 
 #ifdef __GTHREADS
 #ifdef __GTHREAD_MUTEX_INIT
@@ -124,8 +125,9 @@ emutls_alloc (struct __emutls_object *obj)
 }
 
 void *
-__emutls_get_address (struct __emutls_object *obj)
+__emutls_get_address (void *_obj)
 {
+  struct __emutls_object *obj = (struct __emutls_object *)_obj;
   if (! __gthread_active_p ())
     {
       if (__builtin_expect (obj->loc.ptr == NULL, 0))
@@ -186,11 +188,13 @@ __emutls_get_address (struct __emutls_object *obj)
   return ret;
 #endif
 }
+ELF_ALIAS(__emutls_get_address)
 
 void
-__emutls_register_common (struct __emutls_object *obj,
+__emutls_register_common (void *_obj,
 			  word size, word align, void *templ)
 {
+  struct __emutls_object *obj = (struct __emutls_object *)_obj;
   if (obj->size < size)
     {
       obj->size = size;
@@ -201,3 +205,4 @@ __emutls_register_common (struct __emutls_object *obj,
   if (templ && size == obj->size)
     obj->templ = templ;
 }
+ELF_ALIAS(__emutls_register_common)
diff --git a/libgcc/enable-execute-stack-empty.c b/libgcc/enable-execute-stack-empty.c
index e2cc02ba116..eb88998d3c1 100644
--- a/libgcc/enable-execute-stack-empty.c
+++ b/libgcc/enable-execute-stack-empty.c
@@ -1,3 +1,5 @@
+#include "elf-alias.h"
+
 /* Dummy implementation of __enable_execute_stack.  */
 
 extern void __enable_execute_stack (void *);
@@ -8,3 +10,4 @@ void
 __enable_execute_stack (void *addr __attribute__((__unused__)))
 {
 }
+ELF_ALIAS(__enable_execute_stack)
diff --git a/libgcc/floatunsidf.c b/libgcc/floatunsidf.c
index ff28112502b..d6a8897f3be 100644
--- a/libgcc/floatunsidf.c
+++ b/libgcc/floatunsidf.c
@@ -1,3 +1,5 @@
+#include "elf-alias.h"
+
 /* Public domain.  */
 typedef int SItype __attribute__ ((mode (SI)));
 typedef unsigned int USItype __attribute__ ((mode (SI)));
@@ -13,3 +15,4 @@ __floatunsidf (USItype u)
 				 << (sizeof (USItype) * __CHAR_BIT__ - 1));
   return r;
 }
+ELF_ALIAS(__floatunsidf)
diff --git a/libgcc/floatunsisf.c b/libgcc/floatunsisf.c
index 11d4aa78cbe..3c65b89ae06 100644
--- a/libgcc/floatunsisf.c
+++ b/libgcc/floatunsisf.c
@@ -1,3 +1,5 @@
+#include "elf-alias.h"
+
 /* Public domain.  */
 typedef int SItype __attribute__ ((mode (SI)));
 typedef unsigned int USItype __attribute__ ((mode (SI)));
@@ -16,3 +18,4 @@ __floatunsisf (USItype u)
   else
     return (SFtype) s;
 }
+ELF_ALIAS(__floatunsisf)
diff --git a/libgcc/floatunsitf.c b/libgcc/floatunsitf.c
index 955d67666c5..035139fd07a 100644
--- a/libgcc/floatunsitf.c
+++ b/libgcc/floatunsitf.c
@@ -1,3 +1,5 @@
+#include "elf-alias.h"
+
 /* Public domain.  */
 typedef int SItype __attribute__ ((mode (SI)));
 typedef unsigned int USItype __attribute__ ((mode (SI)));
@@ -13,3 +15,4 @@ __floatunsitf (USItype u)
 				 << (sizeof (USItype) * __CHAR_BIT__ - 1));
   return r;
 }
+ELF_ALIAS(__floatunsitf)
diff --git a/libgcc/floatunsixf.c b/libgcc/floatunsixf.c
index 52511688dad..5fc04162c4f 100644
--- a/libgcc/floatunsixf.c
+++ b/libgcc/floatunsixf.c
@@ -1,3 +1,5 @@
+#include "elf-alias.h"
+
 /* Public domain.  */
 typedef int SItype __attribute__ ((mode (SI)));
 typedef unsigned int USItype __attribute__ ((mode (SI)));
@@ -13,3 +15,4 @@ __floatunsixf (USItype u)
 				 << (sizeof (USItype) * __CHAR_BIT__ - 1));
   return r;
 }
+ELF_ALIAS(__floatunsixf)
diff --git a/libgcc/gthr-posix.h b/libgcc/gthr-posix.h
index a54a32e5f9d..b1465a3911e 100644
--- a/libgcc/gthr-posix.h
+++ b/libgcc/gthr-posix.h
@@ -82,7 +82,7 @@ typedef struct timespec __gthread_time_t;
 # define __GTHREAD_COND_INIT_FUNCTION __gthread_cond_init_function
 #endif
 
-#if SUPPORTS_WEAK && GTHREAD_USE_WEAK
+#if SUPPORTS_WEAK && GTHREAD_USE_WEAK && !defined(__MINGW32__)
 # ifndef __gthrw_pragma
 #  define __gthrw_pragma(pragma)
 # endif
diff --git a/libgcc/libgcc2.c b/libgcc/libgcc2.c
index 83f865a04db..a9fa3a909d6 100644
--- a/libgcc/libgcc2.c
+++ b/libgcc/libgcc2.c
@@ -51,6 +51,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 #define LIBGCC2_UNITS_PER_WORD LIBGCC2_MAX_UNITS_PER_WORD
 #endif
 
+#include "elf-alias.h"
+
 #if LIBGCC2_UNITS_PER_WORD <= LIBGCC2_MAX_UNITS_PER_WORD
 
 #include "libgcc2.h"
@@ -69,6 +71,7 @@ __negdi2 (DWtype u)
 
   return w.ll;
 }
+ELF_ALIAS(__negdi2)
 #endif
 
 #ifdef L_addvsi3
@@ -82,6 +85,7 @@ __addvSI3 (Wtype a, Wtype b)
 
   return w;
 }
+ELF_ALIAS(__addvsi3)
 #ifdef COMPAT_SIMODE_TRAPPING_ARITHMETIC
 SItype
 __addvsi3 (SItype a, SItype b)
@@ -107,6 +111,7 @@ __addvDI3 (DWtype a, DWtype b)
 
   return w;
 }
+ELF_ALIAS(__addvdi3)
 #endif
 
 #ifdef L_subvsi3
@@ -120,6 +125,7 @@ __subvSI3 (Wtype a, Wtype b)
 
   return w;
 }
+ELF_ALIAS(__subvsi3)
 #ifdef COMPAT_SIMODE_TRAPPING_ARITHMETIC
 SItype
 __subvsi3 (SItype a, SItype b)
@@ -145,6 +151,7 @@ __subvDI3 (DWtype a, DWtype b)
 
   return w;
 }
+ELF_ALIAS(__subvdi3)
 #endif
 
 #ifdef L_mulvsi3
@@ -158,6 +165,7 @@ __mulvSI3 (Wtype a, Wtype b)
 
   return w;
 }
+ELF_ALIAS(__mulvsi3)
 #ifdef COMPAT_SIMODE_TRAPPING_ARITHMETIC
 #undef WORD_SIZE
 #define WORD_SIZE (sizeof (SItype) * __CHAR_BIT__)
@@ -185,6 +193,7 @@ __negvSI2 (Wtype a)
 
    return w;
 }
+ELF_ALIAS(__negvsi2)
 #ifdef COMPAT_SIMODE_TRAPPING_ARITHMETIC
 SItype
 __negvsi2 (SItype a)
@@ -210,6 +219,7 @@ __negvDI2 (DWtype a)
 
   return w;
 }
+ELF_ALIAS(__negvdi2)
 #endif
 
 #ifdef L_absvsi2
@@ -230,6 +240,7 @@ __absvSI2 (Wtype a)
 
    return w;
 }
+ELF_ALIAS(__absvsi2)
 #ifdef COMPAT_SIMODE_TRAPPING_ARITHMETIC
 SItype
 __absvsi2 (SItype a)
@@ -269,6 +280,7 @@ __absvDI2 (DWtype a)
 
   return w;
 }
+ELF_ALIAS(__absvdi2)
 #endif
 
 #ifdef L_mulvdi3
@@ -394,6 +406,7 @@ __mulvDI3 (DWtype u, DWtype v)
   /* Overflow.  */
   abort ();
 }
+ELF_ALIAS(__mulvdi3)
 #endif
 
 
@@ -425,6 +438,7 @@ __lshrdi3 (DWtype u, shift_count_type b)
 
   return w.ll;
 }
+ELF_ALIAS(__lshrdi3)
 #endif
 
 #ifdef L_ashldi3
@@ -453,6 +467,7 @@ __ashldi3 (DWtype u, shift_count_type b)
 
   return w.ll;
 }
+ELF_ALIAS(__ashldi3)
 #endif
 
 #ifdef L_ashrdi3
@@ -482,6 +497,7 @@ __ashrdi3 (DWtype u, shift_count_type b)
 
   return w.ll;
 }
+ELF_ALIAS(__ashrdi3)
 #endif
 
 #ifdef L_bswapsi2
@@ -493,6 +509,7 @@ __bswapsi2 (SItype u)
 	  | (((u) & 0x0000ff00) <<  8)
 	  | (((u) & 0x000000ff) << 24));
 }
+ELF_ALIAS(__bswapsi2)
 #endif
 #ifdef L_bswapdi2
 DItype
@@ -507,6 +524,7 @@ __bswapdi2 (DItype u)
 	  | (((u) & 0x000000000000ff00ull) << 40)
 	  | (((u) & 0x00000000000000ffull) << 56));
 }
+ELF_ALIAS(__bswapdi2)
 #endif
 #ifdef L_ffssi2
 #undef int
@@ -521,6 +539,7 @@ __ffsSI2 (UWtype u)
   count_trailing_zeros (count, u);
   return count + 1;
 }
+ELF_ALIAS(__ffssi2)
 #endif
 
 #ifdef L_ffsdi2
@@ -541,6 +560,7 @@ __ffsDI2 (DWtype u)
   count_trailing_zeros (count, word);
   return count + add + 1;
 }
+ELF_ALIAS(__ffsdi2)
 #endif
 
 #ifdef L_muldi3
@@ -556,6 +576,7 @@ __muldi3 (DWtype u, DWtype v)
 
   return w.ll;
 }
+ELF_ALIAS(__muldi3)
 #endif
 
 #if (defined (L_udivdi3) || defined (L_divdi3) || \
@@ -711,6 +732,7 @@ __clzSI2 (UWtype x)
 
   return ret;
 }
+ELF_ALIAS(__clzsi2)
 #endif
 
 #ifdef L_clzdi2
@@ -730,6 +752,7 @@ __clzDI2 (UDWtype x)
   count_leading_zeros (ret, word);
   return ret + add;
 }
+ELF_ALIAS(__clzdi2)
 #endif
 
 #ifdef L_ctzsi2
@@ -743,6 +766,7 @@ __ctzSI2 (UWtype x)
 
   return ret;
 }
+ELF_ALIAS(__ctzsi2)
 #endif
 
 #ifdef L_ctzdi2
@@ -762,6 +786,7 @@ __ctzDI2 (UDWtype x)
   count_trailing_zeros (ret, word);
   return ret + add;
 }
+ELF_ALIAS(__ctzdi2)
 #endif
 
 #ifdef L_clrsbsi2
@@ -778,6 +803,7 @@ __clrsbSI2 (Wtype x)
   count_leading_zeros (ret, x);
   return ret - 1;
 }
+ELF_ALIAS(__clrsbsi2)
 #endif
 
 #ifdef L_clrsbdi2
@@ -805,6 +831,7 @@ __clrsbDI2 (DWtype x)
 
   return ret + add - 1;
 }
+ELF_ALIAS(__clrsbdi2)
 #endif
 
 #ifdef L_popcount_tab
@@ -858,6 +885,7 @@ __popcountSI2 (UWtype x)
   return ret;
 #endif
 }
+ELF_ALIAS(__popcountsi2)
 #endif
 
 #ifdef L_popcountdi2
@@ -888,6 +916,7 @@ __popcountDI2 (UDWtype x)
   return ret;
 #endif
 }
+ELF_ALIAS(__popcountdi2)
 #endif
 
 #ifdef L_paritysi2
@@ -909,6 +938,7 @@ __paritySI2 (UWtype x)
   x &= 0xf;
   return (0x6996 >> x) & 1;
 }
+ELF_ALIAS(__paritysi2)
 #endif
 
 #ifdef L_paritydi2
@@ -933,6 +963,7 @@ __parityDI2 (UDWtype x)
   nx &= 0xf;
   return (0x6996 >> nx) & 1;
 }
+ELF_ALIAS(__paritydi2)
 #endif
 
 #ifdef L_udivmoddi4
@@ -1224,6 +1255,11 @@ __udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)
   return ww.ll;
 }
 #endif
+#if !((defined (L_udivdi3) || defined (L_divdi3) || \
+     defined (L_umoddi3) || defined (L_moddi3) || \
+     defined (L_divmoddi4)))
+ELF_ALIAS(__udivmoddi4)
+#endif
 #endif
 
 #ifdef L_divdi3
@@ -1248,6 +1284,7 @@ __divdi3 (DWtype u, DWtype v)
 
   return w;
 }
+ELF_ALIAS(__divdi3)
 #endif
 
 #ifdef L_moddi3
@@ -1271,6 +1308,7 @@ __moddi3 (DWtype u, DWtype v)
 
   return w;
 }
+ELF_ALIAS(__moddi3)
 #endif
 
 #ifdef L_divmoddi4
@@ -1299,6 +1337,7 @@ __divmoddi4 (DWtype u, DWtype v, DWtype *rp)
   *rp = r;
   return w;
 }
+ELF_ALIAS(__divmoddi4)
 #endif
 
 #ifdef L_umoddi3
@@ -1311,6 +1350,7 @@ __umoddi3 (UDWtype u, UDWtype v)
 
   return w;
 }
+ELF_ALIAS(__umoddi3)
 #endif
 
 #ifdef L_udivdi3
@@ -1319,6 +1359,7 @@ __udivdi3 (UDWtype n, UDWtype d)
 {
   return __udivmoddi4 (n, d, (UDWtype *) 0);
 }
+ELF_ALIAS(__udivdi3)
 #endif
 
 #ifdef L_cmpdi2
@@ -1338,6 +1379,7 @@ __cmpdi2 (DWtype a, DWtype b)
     return 2;
   return 1;
 }
+ELF_ALIAS(__cmpdi2)
 #endif
 
 #ifdef L_ucmpdi2
@@ -1357,6 +1399,7 @@ __ucmpdi2 (DWtype a, DWtype b)
     return 2;
   return 1;
 }
+ELF_ALIAS(__ucmpdi2)
 #endif
 
 #if defined(L_fixunstfdi) && LIBGCC2_HAS_TF_MODE
@@ -1383,6 +1426,7 @@ __fixunstfDI (TFtype a)
     v += (UWtype) a;
   return v;
 }
+ELF_ALIAS(__fixunstfdi)
 #endif
 
 #if defined(L_fixtfdi) && LIBGCC2_HAS_TF_MODE
@@ -1393,6 +1437,7 @@ __fixtfdi (TFtype a)
     return - __fixunstfDI (-a);
   return __fixunstfDI (a);
 }
+ELF_ALIAS(__fixtfdi)
 #endif
 
 #if defined(L_fixunsxfdi) && LIBGCC2_HAS_XF_MODE
@@ -1419,6 +1464,7 @@ __fixunsxfDI (XFtype a)
     v += (UWtype) a;
   return v;
 }
+ELF_ALIAS(__fixunsxfdi)
 #endif
 
 #if defined(L_fixxfdi) && LIBGCC2_HAS_XF_MODE
@@ -1429,6 +1475,7 @@ __fixxfdi (XFtype a)
     return - __fixunsxfDI (-a);
   return __fixunsxfDI (a);
 }
+ELF_ALIAS(__fixxfdi)
 #endif
 
 #if defined(L_fixunsdfdi) && LIBGCC2_HAS_DF_MODE
@@ -1448,6 +1495,7 @@ __fixunsdfDI (DFtype a)
   /* Assemble result from the two parts.  */
   return ((UDWtype) hi << W_TYPE_SIZE) | lo;
 }
+ELF_ALIAS(__fixunsdfdi)
 #endif
 
 #if defined(L_fixdfdi) && LIBGCC2_HAS_DF_MODE
@@ -1458,6 +1506,7 @@ __fixdfdi (DFtype a)
     return - __fixunsdfDI (-a);
   return __fixunsdfDI (a);
 }
+ELF_ALIAS(__fixdfdi)
 #endif
 
 #if defined(L_fixunssfdi) && LIBGCC2_HAS_SF_MODE
@@ -1522,6 +1571,7 @@ __fixunssfDI (SFtype a)
 # error
 #endif
 }
+ELF_ALIAS(__fixunssfdi)
 #endif
 
 #if defined(L_fixsfdi) && LIBGCC2_HAS_SF_MODE
@@ -1532,6 +1582,7 @@ __fixsfdi (SFtype a)
     return - __fixunssfDI (-a);
   return __fixunssfDI (a);
 }
+ELF_ALIAS(__fixsfdi)
 #endif
 
 #if defined(L_floatdixf) && LIBGCC2_HAS_XF_MODE
@@ -1546,6 +1597,7 @@ __floatdixf (DWtype u)
   d += (UWtype)u;
   return d;
 }
+ELF_ALIAS(__floatdixf)
 #endif
 
 #if defined(L_floatundixf) && LIBGCC2_HAS_XF_MODE
@@ -1560,6 +1612,7 @@ __floatundixf (UDWtype u)
   d += (UWtype)u;
   return d;
 }
+ELF_ALIAS(__floatundixf)
 #endif
 
 #if defined(L_floatditf) && LIBGCC2_HAS_TF_MODE
@@ -1574,6 +1627,7 @@ __floatditf (DWtype u)
   d += (UWtype)u;
   return d;
 }
+ELF_ALIAS(__floatditf)
 #endif
 
 #if defined(L_floatunditf) && LIBGCC2_HAS_TF_MODE
@@ -1588,6 +1642,7 @@ __floatunditf (UDWtype u)
   d += (UWtype)u;
   return d;
 }
+ELF_ALIAS(__floatunditf)
 #endif
 
 #if (defined(L_floatdisf) && LIBGCC2_HAS_SF_MODE)	\
@@ -1709,6 +1764,11 @@ FUNC (DWtype u)
   return f * e;
 #endif
 }
+#if defined(L_floatdisf)
+ELF_ALIAS(__floatdisf)
+#elif defined(L_floatdidf)
+ELF_ALIAS(__floatdidf)
+#endif
 #endif
 
 #if (defined(L_floatundisf) && LIBGCC2_HAS_SF_MODE)	\
@@ -1818,6 +1878,11 @@ FUNC (UDWtype u)
   return f * e;
 #endif
 }
+#if defined(L_floatundisf)
+ELF_ALIAS(__floatundisf)
+#elif defined(L_floatundidf)
+ELF_ALIAS(__floatundidf)
+#endif
 #endif
 
 #if defined(L_fixunsxfsi) && LIBGCC2_HAS_XF_MODE
@@ -1828,6 +1893,7 @@ __fixunsxfSI (XFtype a)
     return (Wtype) (a + Wtype_MIN) - Wtype_MIN;
   return (Wtype) a;
 }
+ELF_ALIAS(__fixunsxfsi)
 #endif
 
 #if defined(L_fixunsdfsi) && LIBGCC2_HAS_DF_MODE
@@ -1838,6 +1904,7 @@ __fixunsdfSI (DFtype a)
     return (Wtype) (a + Wtype_MIN) - Wtype_MIN;
   return (Wtype) a;
 }
+ELF_ALIAS(__fixunsdfsi)
 #endif
 
 #if defined(L_fixunssfsi) && LIBGCC2_HAS_SF_MODE
@@ -1848,6 +1915,7 @@ __fixunssfSI (SFtype a)
     return (Wtype) (a + Wtype_MIN) - Wtype_MIN;
   return (Wtype) a;
 }
+ELF_ALIAS(__fixunssfsi)
 #endif
 
 /* Integer power helper used from __builtin_powi for non-constant
@@ -1886,6 +1954,15 @@ NAME (TYPE x, int m)
     }
   return m < 0 ? 1/y : y;
 }
+#if defined(L_powisf2)
+ELF_ALIAS(__powisf2)
+#elif defined(L_powidf2)
+ELF_ALIAS(__powidf2)
+#elif defined(L_powixf2)
+ELF_ALIAS(__powixf2)
+#elif defined(L_powitf2)
+ELF_ALIAS(__powitf2)
+#endif
 
 #endif
 
@@ -2034,6 +2111,17 @@ CONCAT3(__mul,MODE,3) (MTYPE a, MTYPE b, MTYPE c, MTYPE d)
   __imag__ res = y;
   return res;
 }
+#if defined(L_mulhc3)
+ELF_ALIAS(__mulhc3)
+#elif defined(L_mulsc3)
+ELF_ALIAS(__mulsc3)
+#elif defined(L_muldc3)
+ELF_ALIAS(__muldc3)
+#elif defined(L_mulxc3)
+ELF_ALIAS(__mulxc3)
+#elif defined(L_multc3)
+ELF_ALIAS(__multc3)
+#endif
 #endif /* complex multiply */
 
 #if defined(L_divhc3) || defined(L_divsc3) || defined(L_divdc3) \
@@ -2093,6 +2181,17 @@ CONCAT3(__div,MODE,3) (MTYPE a, MTYPE b, MTYPE c, MTYPE d)
   __imag__ res = y;
   return res;
 }
+#if defined(L_divhc3)
+ELF_ALIAS(__divhc3)
+#elif defined(L_divsc3)
+ELF_ALIAS(__divsc3)
+#elif defined(L_divdc3)
+ELF_ALIAS(__divdc3)
+#elif defined(L_divxc3)
+ELF_ALIAS(__divxc3)
+#elif defined(L_divtc3)
+ELF_ALIAS(__divtc3)
+#endif
 #endif /* complex divide */
 
 #endif /* all complex float routines */
@@ -2138,6 +2237,7 @@ __gcc_bcmp (const unsigned char *s1, const unsigned char *s2, size_t size)
     }
   return 0;
 }
+ELF_ALIAS(__gcc_bcmp)
 
 #endif
 
@@ -2159,6 +2259,7 @@ __eprintf (const char *string, const char *expression,
   fflush (stderr);
   abort ();
 }
+ELF_ALIAS(__eprintf)
 
 #endif
 #endif
@@ -2175,6 +2276,7 @@ __clear_cache (char *beg __attribute__((__unused__)),
   CLEAR_INSN_CACHE (beg, end);
 #endif /* CLEAR_INSN_CACHE */
 }
+ELF_ALIAS(__clear_cache)
 
 #endif /* L_clear_cache */
 
@@ -2331,6 +2433,7 @@ SYMBOL__MAIN (void)
       __do_global_ctors ();
     }
 }
+ELF_ALIAS(__main)
 #endif /* no HAS_INIT_SECTION or INVOKE__main */
 
 #endif /* L__main */
@@ -2354,6 +2457,9 @@ SYMBOL__MAIN (void)
 
    Long term no port should use those extensions.  But many still do.  */
 #if !defined(__LIBGCC_INIT_SECTION_ASM_OP__)
+#if defined(__MINT__) && defined(__ELF__)
+/* nothing; we use the definitions from crtstuff.c now */
+#else
 #if defined (TARGET_ASM_CONSTRUCTOR) || defined (USE_COLLECT2)
 func_ptr __CTOR_LIST__[2] = {0, 0};
 func_ptr __DTOR_LIST__[2] = {0, 0};
@@ -2361,6 +2467,7 @@ func_ptr __DTOR_LIST__[2] = {0, 0};
 func_ptr __CTOR_LIST__[2];
 func_ptr __DTOR_LIST__[2];
 #endif
+#endif
 #endif /* no __LIBGCC_INIT_SECTION_ASM_OP__ */
 #endif /* L_ctors */
 #endif /* LIBGCC2_UNITS_PER_WORD <= MIN_UNITS_PER_WORD */
diff --git a/libgcc/soft-fp/addxf3.c b/libgcc/soft-fp/addxf3.c
new file mode 100644
index 00000000000..3a13e6880d8
--- /dev/null
+++ b/libgcc/soft-fp/addxf3.c
@@ -0,0 +1,52 @@
+/* Software floating-point emulation.
+   Return a + b
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#ifdef LIBGCC_HAS_XF_MODE
+#include "extended.h"
+
+XFtype
+__addxf3 (XFtype a, XFtype b)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  FP_DECL_E (B);
+  FP_DECL_E (R);
+  XFtype r;
+
+  FP_INIT_ROUNDMODE;
+  FP_UNPACK_SEMIRAW_E (A, a);
+  FP_UNPACK_SEMIRAW_E (B, b);
+  FP_ADD_E (R, A, B);
+  FP_PACK_SEMIRAW_E (r, R);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
+ELF_ALIAS(__addxf3)
+#endif
diff --git a/libgcc/soft-fp/divxf3.c b/libgcc/soft-fp/divxf3.c
new file mode 100644
index 00000000000..8d19803c66b
--- /dev/null
+++ b/libgcc/soft-fp/divxf3.c
@@ -0,0 +1,52 @@
+/* Software floating-point emulation.
+   Return a / b
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#ifdef LIBGCC_HAS_XF_MODE
+#include "extended.h"
+
+XFtype
+__divxf3 (XFtype a, XFtype b)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  FP_DECL_E (B);
+  FP_DECL_E (R);
+  XFtype r;
+
+  FP_INIT_ROUNDMODE;
+  FP_UNPACK_E (A, a);
+  FP_UNPACK_E (B, b);
+  FP_DIV_E (R, A, B);
+  FP_PACK_E (r, R);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
+ELF_ALIAS(__divxf3)
+#endif
diff --git a/libgcc/soft-fp/double.h b/libgcc/soft-fp/double.h
index 88d4bd7b7a3..9a9a0b2c1ce 100644
--- a/libgcc/soft-fp/double.h
+++ b/libgcc/soft-fp/double.h
@@ -190,6 +190,7 @@ union _FP_UNION_D
 # define FP_FROM_INT_D(X, r, rs, rt)	_FP_FROM_INT (D, 2, X, (r), (rs), rt)
 
 # define _FP_FRAC_HIGH_D(X)	_FP_FRAC_HIGH_2 (X)
+# define _FP_FRAC_ZEROHIGH_D(X)
 # define _FP_FRAC_HIGH_RAW_D(X)	_FP_FRAC_HIGH_2 (X)
 
 # define _FP_FRAC_HIGH_DW_D(X)	_FP_FRAC_HIGH_4 (X)
@@ -314,6 +315,7 @@ union _FP_UNION_D
 # define FP_FROM_INT_D(X, r, rs, rt)	_FP_FROM_INT (D, 1, X, (r), (rs), rt)
 
 # define _FP_FRAC_HIGH_D(X)	_FP_FRAC_HIGH_1 (X)
+# define _FP_FRAC_ZEROHIGH_D(X)
 # define _FP_FRAC_HIGH_RAW_D(X)	_FP_FRAC_HIGH_1 (X)
 
 # define _FP_FRAC_HIGH_DW_D(X)	_FP_FRAC_HIGH_2 (X)
diff --git a/libgcc/soft-fp/eqxf2.c b/libgcc/soft-fp/eqxf2.c
new file mode 100644
index 00000000000..f5d86407a6d
--- /dev/null
+++ b/libgcc/soft-fp/eqxf2.c
@@ -0,0 +1,49 @@
+/* Software floating-point emulation.
+   Return 0 iff a == b, 1 otherwise
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "extended.h"
+
+CMPtype
+__eqxf2 (XFtype a, XFtype b)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  FP_DECL_E (B);
+  CMPtype r;
+
+  FP_INIT_EXCEPTIONS;
+  FP_UNPACK_RAW_E (A, a);
+  FP_UNPACK_RAW_E (B, b);
+  FP_CMP_EQ_E (r, A, B, 1);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
+
+strong_alias (__eqxf2, __nexf2);
diff --git a/libgcc/soft-fp/extenddfxf2.c b/libgcc/soft-fp/extenddfxf2.c
new file mode 100644
index 00000000000..053ee08a8ca
--- /dev/null
+++ b/libgcc/soft-fp/extenddfxf2.c
@@ -0,0 +1,53 @@
+/* Software floating-point emulation.
+   Return a converted to IEEE quad
+   Copyright (C) 2007-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#define FP_NO_EXACT_UNDERFLOW
+#include "soft-fp.h"
+#include "double.h"
+#include "extended.h"
+
+XFtype
+__extenddfxf2 (DFtype a)
+{
+  FP_DECL_EX;
+  FP_DECL_D (A);
+  FP_DECL_E (R);
+  XFtype r;
+
+  FP_INIT_TRAPPING_EXCEPTIONS;
+  FP_UNPACK_RAW_D (A, a);
+#if _FP_W_TYPE_SIZE < 64
+  FP_EXTEND (E, D, 4, 2, R, A);
+#else
+  FP_EXTEND (E, D, 2, 1, R, A);
+#endif
+  FP_PACK_RAW_E (r, R);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
diff --git a/libgcc/soft-fp/extended.h b/libgcc/soft-fp/extended.h
index 7b19e835f7a..59cfab573dc 100644
--- a/libgcc/soft-fp/extended.h
+++ b/libgcc/soft-fp/extended.h
@@ -76,10 +76,9 @@ union _FP_UNION_E
   struct _FP_STRUCT_LAYOUT
   {
 # if __BYTE_ORDER == __BIG_ENDIAN
-    unsigned long pad1 : _FP_W_TYPE_SIZE;
-    unsigned long pad2 : (_FP_W_TYPE_SIZE - 1 - _FP_EXPBITS_E);
     unsigned long sign : 1;
     unsigned long exp : _FP_EXPBITS_E;
+    unsigned long pad2 : (_FP_W_TYPE_SIZE - 1 - _FP_EXPBITS_E);
     unsigned long frac1 : _FP_W_TYPE_SIZE;
     unsigned long frac0 : _FP_W_TYPE_SIZE;
 # else
@@ -302,9 +301,10 @@ union _FP_UNION_E
 # define FP_FROM_INT_E(X, r, rs, rt)	_FP_FROM_INT (E, 4, X, (r), (rs), rt)
 
 # define _FP_FRAC_HIGH_E(X)	(X##_f[2])
+# define _FP_FRAC_ZEROHIGH_E(X)	(X##_f[3] = 0)
 # define _FP_FRAC_HIGH_RAW_E(X)	(X##_f[1])
 
-# define _FP_FRAC_HIGH_DW_E(X)	(X##_f[4])
+# define _FP_FRAC_HIGH_DW_E(X)	_FP_FRAC_HIGH_4(X)
 
 #else   /* not _FP_W_TYPE_SIZE < 64 */
 union _FP_UNION_E
@@ -313,9 +313,9 @@ union _FP_UNION_E
   struct _FP_STRUCT_LAYOUT
   {
 # if __BYTE_ORDER == __BIG_ENDIAN
-    _FP_W_TYPE pad  : (_FP_W_TYPE_SIZE - 1 - _FP_EXPBITS_E);
     unsigned sign   : 1;
     unsigned exp    : _FP_EXPBITS_E;
+    _FP_W_TYPE pad  : (_FP_W_TYPE_SIZE - 1 - _FP_EXPBITS_E);
     _FP_W_TYPE frac : _FP_W_TYPE_SIZE;
 # else
     _FP_W_TYPE frac : _FP_W_TYPE_SIZE;
@@ -508,6 +508,7 @@ union _FP_UNION_E
 # define FP_FROM_INT_E(X, r, rs, rt)	_FP_FROM_INT (E, 2, X, (r), (rs), rt)
 
 # define _FP_FRAC_HIGH_E(X)	(X##_f1)
+# define _FP_FRAC_ZEROHIGH_E(X)
 # define _FP_FRAC_HIGH_RAW_E(X)	(X##_f0)
 
 # define _FP_FRAC_HIGH_DW_E(X)	(X##_f[2])
diff --git a/libgcc/soft-fp/extendsfxf2.c b/libgcc/soft-fp/extendsfxf2.c
new file mode 100644
index 00000000000..d9ae418f3ef
--- /dev/null
+++ b/libgcc/soft-fp/extendsfxf2.c
@@ -0,0 +1,53 @@
+/* Software floating-point emulation.
+   Return a converted to IEEE quad
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#define FP_NO_EXACT_UNDERFLOW
+#include "soft-fp.h"
+#include "single.h"
+#include "extended.h"
+
+XFtype
+__extendsfxf2 (SFtype a)
+{
+  FP_DECL_EX;
+  FP_DECL_S (A);
+  FP_DECL_E (R);
+  XFtype r;
+
+  FP_INIT_EXCEPTIONS;
+  FP_UNPACK_RAW_S (A, a);
+#if _FP_W_TYPE_SIZE < 64
+  FP_EXTEND (E, S, 4, 1, R, A);
+#else
+  FP_EXTEND (E, S, 2, 1, R, A);
+#endif
+  FP_PACK_RAW_E (r, R);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
diff --git a/libgcc/soft-fp/extendxftf2.c b/libgcc/soft-fp/extendxftf2.c
index 1975d672a89..ef70f028da9 100644
--- a/libgcc/soft-fp/extendxftf2.c
+++ b/libgcc/soft-fp/extendxftf2.c
@@ -27,6 +27,7 @@
    License along with the GNU C Library; if not, see
    <http://www.gnu.org/licenses/>.  */
 
+#define FP_NO_EXACT_UNDERFLOW
 #include "soft-fp.h"
 #include "extended.h"
 #include "quad.h"
diff --git a/libgcc/soft-fp/fixunsxfdi.c b/libgcc/soft-fp/fixunsxfdi.c
new file mode 100644
index 00000000000..7826eb586c1
--- /dev/null
+++ b/libgcc/soft-fp/fixunsxfdi.c
@@ -0,0 +1,45 @@
+/* Software floating-point emulation.
+   Convert a to 64bit unsigned integer
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "extended.h"
+
+UDItype
+__fixunsxfdi (XFtype a)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  UDItype r;
+
+  FP_INIT_EXCEPTIONS;
+  FP_UNPACK_RAW_E (A, a);
+  FP_TO_INT_E (r, A, DI_BITS, 0);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
diff --git a/libgcc/soft-fp/fixunsxfsi.c b/libgcc/soft-fp/fixunsxfsi.c
new file mode 100644
index 00000000000..2197c15af56
--- /dev/null
+++ b/libgcc/soft-fp/fixunsxfsi.c
@@ -0,0 +1,45 @@
+/* Software floating-point emulation.
+   Convert a to 32bit unsigned integer
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "extended.h"
+
+USItype
+__fixunsxfsi (XFtype a)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  USItype r;
+
+  FP_INIT_EXCEPTIONS;
+  FP_UNPACK_RAW_E (A, a);
+  FP_TO_INT_E (r, A, SI_BITS, 0);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
diff --git a/libgcc/soft-fp/fixxfdi.c b/libgcc/soft-fp/fixxfdi.c
new file mode 100644
index 00000000000..191b2cc9640
--- /dev/null
+++ b/libgcc/soft-fp/fixxfdi.c
@@ -0,0 +1,45 @@
+/* Software floating-point emulation.
+   Convert a to 64bit signed integer
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "extended.h"
+
+DItype
+__fixxfdi (XFtype a)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  UDItype r;
+
+  FP_INIT_EXCEPTIONS;
+  FP_UNPACK_RAW_E (A, a);
+  FP_TO_INT_E (r, A, DI_BITS, 1);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
diff --git a/libgcc/soft-fp/fixxfsi.c b/libgcc/soft-fp/fixxfsi.c
new file mode 100644
index 00000000000..d7b194e5094
--- /dev/null
+++ b/libgcc/soft-fp/fixxfsi.c
@@ -0,0 +1,45 @@
+/* Software floating-point emulation.
+   Convert a to 32bit signed integer
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "extended.h"
+
+SItype
+__fixxfsi (XFtype a)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  USItype r;
+
+  FP_INIT_EXCEPTIONS;
+  FP_UNPACK_RAW_E (A, a);
+  FP_TO_INT_E (r, A, SI_BITS, 1);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
diff --git a/libgcc/soft-fp/floatdixf.c b/libgcc/soft-fp/floatdixf.c
new file mode 100644
index 00000000000..1ffc2b36e84
--- /dev/null
+++ b/libgcc/soft-fp/floatdixf.c
@@ -0,0 +1,46 @@
+/* Software floating-point emulation.
+   Convert a 64bit signed integer to IEEE double
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#define FP_NO_EXCEPTIONS
+#include "soft-fp.h"
+#include "extended.h"
+
+XFtype
+__floatdixf (DItype i)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  XFtype a;
+
+  FP_INIT_ROUNDMODE;
+  FP_FROM_INT_E (A, i, DI_BITS, UDItype);
+  FP_PACK_RAW_E (a, A);
+  FP_HANDLE_EXCEPTIONS;
+
+  return a;
+}
diff --git a/libgcc/soft-fp/floatsixf.c b/libgcc/soft-fp/floatsixf.c
new file mode 100644
index 00000000000..dc1589c844a
--- /dev/null
+++ b/libgcc/soft-fp/floatsixf.c
@@ -0,0 +1,43 @@
+/* Software floating-point emulation.
+   Convert a 32bit signed integer to IEEE double
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#define FP_NO_EXCEPTIONS
+#include "soft-fp.h"
+#include "extended.h"
+
+XFtype
+__floatsixf (SItype i)
+{
+  FP_DECL_E (A);
+  XFtype a;
+
+  FP_FROM_INT_E (A, i, SI_BITS, USItype);
+  FP_PACK_RAW_E (a, A);
+
+  return a;
+}
diff --git a/libgcc/soft-fp/floatundixf.c b/libgcc/soft-fp/floatundixf.c
new file mode 100644
index 00000000000..fa397ff2373
--- /dev/null
+++ b/libgcc/soft-fp/floatundixf.c
@@ -0,0 +1,46 @@
+/* Software floating-point emulation.
+   Convert a 64bit unsigned integer to IEEE double
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#define FP_NO_EXCEPTIONS
+#include "soft-fp.h"
+#include "extended.h"
+
+XFtype
+__floatundixf (UDItype i)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  XFtype a;
+
+  FP_INIT_ROUNDMODE;
+  FP_FROM_INT_E (A, i, DI_BITS, UDItype);
+  FP_PACK_RAW_E (a, A);
+  FP_HANDLE_EXCEPTIONS;
+
+  return a;
+}
diff --git a/libgcc/soft-fp/floatunsixf.c b/libgcc/soft-fp/floatunsixf.c
new file mode 100644
index 00000000000..09994a9d01f
--- /dev/null
+++ b/libgcc/soft-fp/floatunsixf.c
@@ -0,0 +1,43 @@
+/* Software floating-point emulation.
+   Convert a 32bit unsigned integer to IEEE double
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#define FP_NO_EXCEPTIONS
+#include "soft-fp.h"
+#include "extended.h"
+
+XFtype
+__floatunsixf (USItype i)
+{
+  FP_DECL_E (A);
+  XFtype a;
+
+  FP_FROM_INT_E (A, i, SI_BITS, USItype);
+  FP_PACK_RAW_E (a, A);
+
+  return a;
+}
diff --git a/libgcc/soft-fp/gexf2.c b/libgcc/soft-fp/gexf2.c
new file mode 100644
index 00000000000..bae1915e825
--- /dev/null
+++ b/libgcc/soft-fp/gexf2.c
@@ -0,0 +1,49 @@
+/* Software floating-point emulation.
+   Return 0 iff a == b, 1 iff a > b, -2 iff a ? b, -1 iff a < b
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "extended.h"
+
+CMPtype
+__gexf2 (XFtype a, XFtype b)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  FP_DECL_E (B);
+  CMPtype r;
+
+  FP_INIT_EXCEPTIONS;
+  FP_UNPACK_RAW_E (A, a);
+  FP_UNPACK_RAW_E (B, b);
+  FP_CMP_E (r, A, B, -2, 2);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
+
+strong_alias (__gexf2, __gtxf2);
diff --git a/libgcc/soft-fp/half.h b/libgcc/soft-fp/half.h
index ba752978380..dc4f013b2cd 100644
--- a/libgcc/soft-fp/half.h
+++ b/libgcc/soft-fp/half.h
@@ -164,6 +164,7 @@ union _FP_UNION_H
 /* HFmode arithmetic is not implemented.  */
 
 #define _FP_FRAC_HIGH_H(X)	_FP_FRAC_HIGH_1 (X)
+#define _FP_FRAC_ZEROHIGH_H(X)
 #define _FP_FRAC_HIGH_RAW_H(X)	_FP_FRAC_HIGH_1 (X)
 #define _FP_FRAC_HIGH_DW_H(X)	_FP_FRAC_HIGH_1 (X)
 
diff --git a/libgcc/soft-fp/lexf2.c b/libgcc/soft-fp/lexf2.c
new file mode 100644
index 00000000000..2bf1b992f3a
--- /dev/null
+++ b/libgcc/soft-fp/lexf2.c
@@ -0,0 +1,49 @@
+/* Software floating-point emulation.
+   Return 0 iff a == b, 1 iff a > b, 2 iff a ? b, -1 iff a < b
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "extended.h"
+
+CMPtype
+__lexf2 (XFtype a, XFtype b)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  FP_DECL_E (B);
+  CMPtype r;
+
+  FP_INIT_EXCEPTIONS;
+  FP_UNPACK_RAW_E (A, a);
+  FP_UNPACK_RAW_E (B, b);
+  FP_CMP_E (r, A, B, 2, 2);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
+
+strong_alias (__lexf2, __ltxf2);
diff --git a/libgcc/soft-fp/mulxf3.c b/libgcc/soft-fp/mulxf3.c
new file mode 100644
index 00000000000..741741a33ee
--- /dev/null
+++ b/libgcc/soft-fp/mulxf3.c
@@ -0,0 +1,52 @@
+/* Software floating-point emulation.
+   Return a * b
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#ifdef LIBGCC_HAS_XF_MODE
+#include "extended.h"
+
+XFtype
+__mulxf3 (XFtype a, XFtype b)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  FP_DECL_E (B);
+  FP_DECL_E (R);
+  XFtype r;
+
+  FP_INIT_ROUNDMODE;
+  FP_UNPACK_E (A, a);
+  FP_UNPACK_E (B, b);
+  FP_MUL_E (R, A, B);
+  FP_PACK_E (r, R);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
+ELF_ALIAS(__mulxf3)
+#endif
diff --git a/libgcc/soft-fp/negxf2.c b/libgcc/soft-fp/negxf2.c
new file mode 100644
index 00000000000..2da7d10ab3d
--- /dev/null
+++ b/libgcc/soft-fp/negxf2.c
@@ -0,0 +1,44 @@
+/* Software floating-point emulation.
+   Return -a
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "extended.h"
+
+XFtype
+__negxf2 (XFtype a)
+{
+  FP_DECL_E (A);
+  FP_DECL_E (R);
+  XFtype r;
+
+  FP_UNPACK_RAW_E (A, a);
+  FP_NEG_E (R, A);
+  FP_PACK_RAW_E (r, R);
+
+  return r;
+}
diff --git a/libgcc/soft-fp/op-2.h b/libgcc/soft-fp/op-2.h
index 5c5f4fc4221..9af1795e9e0 100644
--- a/libgcc/soft-fp/op-2.h
+++ b/libgcc/soft-fp/op-2.h
@@ -34,7 +34,7 @@
 #define SOFT_FP_OP_2_H	1
 
 #define _FP_FRAC_DECL_2(X)				\
-  _FP_W_TYPE X##_f0 _FP_ZERO_INIT, X##_f1 _FP_ZERO_INIT
+  _FP_W_TYPE X##_f0 _FP_ZERO_INIT, X##_f1 _FP_ZERO_INIT __attribute__((unused))
 #define _FP_FRAC_COPY_2(D, S)	(D##_f0 = S##_f0, D##_f1 = S##_f1)
 #define _FP_FRAC_SET_2(X, I)	__FP_FRAC_SET_2 (X, I)
 #define _FP_FRAC_HIGH_2(X)	(X##_f1)
@@ -198,9 +198,9 @@
 # undef __FP_FRAC_ADDI_2
 # define __FP_FRAC_ADDI_2(xh, xl, i)	add_ssaaaa (xh, xl, xh, xl, 0, i)
 # undef __FP_FRAC_ADD_2
-# define __FP_FRAC_ADD_2		add_ssaaaa
+# define __FP_FRAC_ADD_2(rh, rl, xh, xl, yh, yl) add_ssaaaa(rh, rl, xh, xl, yh, yl)
 # undef __FP_FRAC_SUB_2
-# define __FP_FRAC_SUB_2		sub_ddmmss
+# define __FP_FRAC_SUB_2(rh, rl, xh, xl, yh, yl) sub_ddmmss(rh, rl, xh, xl, yh, yl)
 # undef __FP_FRAC_DEC_2
 # define __FP_FRAC_DEC_2(xh, xl, yh, yl)	\
   sub_ddmmss (xh, xl, xh, xl, yh, yl)
diff --git a/libgcc/soft-fp/op-common.h b/libgcc/soft-fp/op-common.h
index f52194ecd1c..e3c08f5735c 100644
--- a/libgcc/soft-fp/op-common.h
+++ b/libgcc/soft-fp/op-common.h
@@ -247,6 +247,7 @@
 	    _FP_OVERFLOW_SEMIRAW (fs, wc, X);			\
 	}							\
       _FP_FRAC_SRL_##wc (X, _FP_WORKBITS);			\
+      _FP_FRAC_ZEROHIGH_##fs(X);				\
       if (X##_e == _FP_EXPMAX_##fs && !_FP_FRAC_ZEROP_##wc (X))	\
 	{							\
 	  if (!_FP_KEEPNANFRACP)				\
@@ -824,6 +825,7 @@
 		 canceling it; renormalize.  */				\
 	      _FP_FRAC_HIGH_##fs (R) &= _FP_IMPLBIT_SH_##fs - 1;	\
 	    norm:							\
+	      _FP_FRAC_ZEROHIGH_##fs(R); \
 	      _FP_FRAC_CLZ_##wc (_FP_ADD_INTERNAL_diff, R);		\
 	      _FP_ADD_INTERNAL_diff -= _FP_WFRACXBITS_##fs;		\
 	      _FP_FRAC_SLL_##wc (R, _FP_ADD_INTERNAL_diff);		\
diff --git a/libgcc/soft-fp/quad.h b/libgcc/soft-fp/quad.h
index a09b95ff37a..49257489e87 100644
--- a/libgcc/soft-fp/quad.h
+++ b/libgcc/soft-fp/quad.h
@@ -195,6 +195,7 @@ union _FP_UNION_Q
 # define FP_FROM_INT_Q(X, r, rs, rt)	_FP_FROM_INT (Q, 4, X, (r), (rs), rt)
 
 # define _FP_FRAC_HIGH_Q(X)	_FP_FRAC_HIGH_4 (X)
+# define _FP_FRAC_ZEROHIGH_Q(X)
 # define _FP_FRAC_HIGH_RAW_Q(X)	_FP_FRAC_HIGH_4 (X)
 
 # define _FP_FRAC_HIGH_DW_Q(X)	_FP_FRAC_HIGH_8 (X)
@@ -321,6 +322,7 @@ union _FP_UNION_Q
 # define FP_FROM_INT_Q(X, r, rs, rt)	_FP_FROM_INT (Q, 2, X, (r), (rs), rt)
 
 # define _FP_FRAC_HIGH_Q(X)	_FP_FRAC_HIGH_2 (X)
+# define _FP_FRAC_ZEROHIGH_Q(X)
 # define _FP_FRAC_HIGH_RAW_Q(X)	_FP_FRAC_HIGH_2 (X)
 
 # define _FP_FRAC_HIGH_DW_Q(X)	_FP_FRAC_HIGH_4 (X)
diff --git a/libgcc/soft-fp/single.h b/libgcc/soft-fp/single.h
index 42691a8e847..818bdebe9ef 100644
--- a/libgcc/soft-fp/single.h
+++ b/libgcc/soft-fp/single.h
@@ -188,6 +188,7 @@ union _FP_UNION_S
 #define FP_FROM_INT_S(X, r, rs, rt)	_FP_FROM_INT (S, 1, X, (r), (rs), rt)
 
 #define _FP_FRAC_HIGH_S(X)	_FP_FRAC_HIGH_1 (X)
+#define _FP_FRAC_ZEROHIGH_S(X)
 #define _FP_FRAC_HIGH_RAW_S(X)	_FP_FRAC_HIGH_1 (X)
 
 #if _FP_W_TYPE_SIZE < 64
diff --git a/libgcc/soft-fp/soft-fp.h b/libgcc/soft-fp/soft-fp.h
index 7fe3ae374dd..7255e0b5b3b 100644
--- a/libgcc/soft-fp/soft-fp.h
+++ b/libgcc/soft-fp/soft-fp.h
@@ -351,4 +351,7 @@ typedef USItype UHWtype;
 # endif
 #endif
 
+#include "softfp-protos.h"
+#include "elf-alias.h"
+
 #endif /* !SOFT_FP_H */
diff --git a/libgcc/soft-fp/softfp-protos.h b/libgcc/soft-fp/softfp-protos.h
new file mode 100644
index 00000000000..6bf7e9bf42e
--- /dev/null
+++ b/libgcc/soft-fp/softfp-protos.h
@@ -0,0 +1,215 @@
+#ifdef __FLT16_MANT_DIG__
+#define LIBGCC_HAS_HF_MODE
+#endif
+#ifdef __FLT_MANT_DIG__
+#define LIBGCC_HAS_SF_MODE
+#endif
+#ifdef __DBL_MANT_DIG__
+#define LIBGCC_HAS_DF_MODE
+#endif
+#if defined(__LDBL_MANT_DIG__) && __DBL_MANT_DIG__ != __LDBL_MANT_DIG__
+#define LIBGCC_HAS_XF_MODE
+#endif
+#if defined(__FLT128_MANT_DIG__) && (!defined(__LDBL_MANT_DIG__) || __FLT128_MANT_DIG__ != __LDBL_MANT_DIG__)
+#define LIBGCC_HAS_TF_MODE
+#endif
+
+/*
+ * half
+ */
+#ifdef LIBGCC_HAS_HF_MODE
+CMPtype __unordhf2(_Float16 a, _Float16 b);
+_Float16 __floatsihf (SItype a1);
+_Float16 __floatdihf (DItype a1);
+_Float16 __floatunsihf (USItype a1);
+_Float16 __floatundihf (UDItype a1);
+SItype __fixhfsi (_Float16 a1);
+DItype __fixhfdi (_Float16 a1);
+USItype __fixunshfsi (_Float16 a1);
+UDItype __fixunshfdi (_Float16 a1);
+_Float16 __addhf3 (_Float16 x1, _Float16 x2);
+_Float16 __subhf3 (_Float16 x1, _Float16 x2);
+_Float16 __mulhf3 (_Float16 x1, _Float16 x2);
+_Float16 __divhf3 (_Float16 x1, _Float16 x2);
+_Float16 __neghf2 (_Float16 x1);
+CMPtype __cmphf2 (_Float16 x1, _Float16 x2);
+CMPtype __eqhf2 (_Float16 x1, _Float16 x2);
+CMPtype __nehf2 (_Float16 x1, _Float16 x2);
+CMPtype __lthf2 (_Float16 x1, _Float16 x2);
+CMPtype __lehf2 (_Float16 x1, _Float16 x2);
+CMPtype __gthf2 (_Float16 x1, _Float16 x2);
+CMPtype __gehf2 (_Float16 x1, _Float16 x2);
+
+#ifdef LIBGCC_HAS_SF_MODE
+float __extendhfsf2 (_Float16 a1);
+#endif
+#ifdef LIBGCC_HAS_DF_MODE
+double __extendhfdf2 (_Float16 a1);
+#endif
+#ifdef LIBGCC_HAS_XF_MODE
+long double __extendhfxf2 (_Float16 a1);
+#endif
+#ifdef LIBGCC_HAS_TF_MODE
+_Float128  __extendhftf2 (_Float16 a1);
+#endif
+#endif
+
+/*
+ * single
+ */
+#ifdef LIBGCC_HAS_SF_MODE
+CMPtype __unordsf2(float a, float b);
+float __floatsisf (SItype a1);
+float __floatdisf (DItype a1);
+float __floatunsisf (USItype a1);
+float __floatundisf (UDItype a1);
+SItype __fixsfsi (float a1);
+DItype __fixsfdi (float a1);
+USItype __fixunssfsi (float a1);
+UDItype __fixunssfdi (float a1);
+float __addsf3 (float x1, float x2);
+float __subsf3 (float x1, float x2);
+float __mulsf3 (float x1, float x2);
+float __divsf3 (float x1, float x2);
+float __negsf2 (float x1);
+CMPtype __cmpsf2 (float x1, float x2);
+CMPtype __eqsf2 (float x1, float x2);
+CMPtype __nesf2 (float x1, float x2);
+CMPtype __ltsf2 (float x1, float x2);
+CMPtype __lesf2 (float x1, float x2);
+CMPtype __gtsf2 (float x1, float x2);
+CMPtype __gesf2 (float x1, float x2);
+
+#ifdef LIBGCC_HAS_HF_MODE
+_Float16 __truncsfhf2 (float a1);
+#endif
+#ifdef LIBGCC_HAS_DF_MODE
+double __extendsfdf2 (float a1);
+#endif
+#ifdef LIBGCC_HAS_XF_MODE
+long double __extendsfxf2 (float a1);
+#endif
+#ifdef LIBGCC_HAS_TF_MODE
+_Float128 __extendsftf2 (float a1);
+#endif
+#endif
+
+/*
+ * double
+ */
+#ifdef LIBGCC_HAS_DF_MODE
+CMPtype __unorddf2(double a, double b);
+double __floatsidf (SItype a1);
+double __floatdidf (DItype a1);
+double __floatunsidf (USItype a1);
+double __floatundidf (UDItype a1);
+SItype __fixdfsi (double a1);
+DItype __fixdfdi (double a1);
+USItype __fixunsdfsi (double a1);
+UDItype __fixunsdfdi (double a1);
+double __adddf3 (double x1, double x2);
+double __subdf3 (double x1, double x2);
+double __muldf3 (double x1, double x2);
+double __divdf3 (double x1, double x2);
+double __negdf2 (double x1);
+CMPtype __cmpdf2 (double x1, double x2);
+CMPtype __eqdf2 (double x1, double x2);
+CMPtype __nedf2 (double x1, double x2);
+CMPtype __ltdf2 (double x1, double x2);
+CMPtype __ledf2 (double x1, double x2);
+CMPtype __gtdf2 (double x1, double x2);
+CMPtype __gedf2 (double x1, double x2);
+
+#ifdef LIBGCC_HAS_HF_MODE
+_Float16 __truncdfhf2 (double a1);
+#endif
+#ifdef LIBGCC_HAS_SF_MODE
+float __truncdfsf2 (double a1);
+#endif
+#ifdef LIBGCC_HAS_XF_MODE
+long double __extenddfxf2(double a1);
+#endif
+#ifdef LIBGCC_HAS_TF_MODE
+_Float128 __extenddftf2(double a1);
+#endif
+#endif
+
+/*
+ * extended
+ */
+#ifdef LIBGCC_HAS_XF_MODE
+CMPtype __unordxf2(long double a, long double b);
+long double __floatsixf (SItype a1);
+long double __floatdixf (DItype a1);
+long double __floatunsixf (USItype a1);
+long double __floatundixf (UDItype a1);
+SItype __fixxfsi (long double a1);
+DItype __fixxfdi (long double a1);
+USItype __fixunsxfsi (long double a1);
+UDItype __fixunsxfdi (long double a1);
+long double __addxf3 (long double x1, long double x2);
+long double __subxf3 (long double x1, long double x2);
+long double __mulxf3 (long double x1, long double x2);
+long double __divxf3 (long double x1, long double x2);
+long double __negxf2 (long double x1);
+CMPtype __cmpxf2 (long double x1, long double x2);
+CMPtype __eqxf2 (long double x1, long double x2);
+CMPtype __nexf2 (long double x1, long double x2);
+CMPtype __ltxf2 (long double x1, long double x2);
+CMPtype __lexf2 (long double x1, long double x2);
+CMPtype __gtxf2 (long double x1, long double x2);
+CMPtype __gexf2 (long double x1, long double x2);
+
+#ifdef LIBGCC_HAS_HF_MODE
+_Float16 __truncxfhf2 (long double a1);
+#endif
+#ifdef LIBGCC_HAS_SF_MODE
+float __truncxfsf2 (long double a1);
+#endif
+#ifdef LIBGCC_HAS_DF_MODE
+double __truncxfdf2 (long double a1);
+#endif
+#ifdef LIBGCC_HAS_TF_MODE
+_Float128 __extendxftf2 (long double a1);
+#endif
+#endif
+
+/*
+ * quad
+ */
+#ifdef LIBGCC_HAS_TF_MODE
+CMPtype __unordtf2(_Float128 a, _Float128 b);
+_Float128 __floatsitf (SItype a1);
+_Float128 __floatditf (DItype a1);
+_Float128 __floatunsitf (USItype a1);
+_Float128 __floatunditf (UDItype a1);
+SItype __fixtfsi (_Float128 a1);
+DItype __fixtfdi (_Float128 a1);
+USItype __fixunstfsi (_Float128 a1);
+UDItype __fixunstfdi (_Float128 a1);
+_Float128 __addtf3 (_Float128 x1, _Float128 x2);
+_Float128 __subtf3 (_Float128 x1, _Float128 x2);
+_Float128 __multf3 (_Float128 x1, _Float128 x2);
+_Float128 __divtf3 (_Float128 x1, _Float128 x2);
+_Float128 __negtf2 (_Float128 x1);
+CMPtype __cmptf2 (_Float128 x1, _Float128 x2);
+CMPtype __eqtf2 (_Float128 x1, _Float128 x2);
+CMPtype __netf2 (_Float128 x1, _Float128 x2);
+CMPtype __lttf2 (_Float128 x1, _Float128 x2);
+CMPtype __letf2 (_Float128 x1, _Float128 x2);
+CMPtype __gttf2 (_Float128 x1, _Float128 x2);
+CMPtype __getf2 (_Float128 x1, _Float128 x2);
+
+#ifdef LIBGCC_HAS_HF_MODE
+_Float16 __trunctfhf2 (_Float128 a1);
+#endif
+#ifdef LIBGCC_HAS_SF_MODE
+float __trunctfsf2 (_Float128 a1);
+#endif
+#ifdef LIBGCC_HAS_DF_MODE
+double __trunctfdf2 (_Float128 a1);
+#endif
+#ifdef LIBGCC_HAS_XF_MODE
+long double __trunctfxf2 (_Float128 a1);
+#endif
+#endif
diff --git a/libgcc/soft-fp/subxf3.c b/libgcc/soft-fp/subxf3.c
new file mode 100644
index 00000000000..ae3610bc380
--- /dev/null
+++ b/libgcc/soft-fp/subxf3.c
@@ -0,0 +1,52 @@
+/* Software floating-point emulation.
+   Return a - b
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#ifdef LIBGCC_HAS_XF_MODE
+#include "extended.h"
+
+XFtype
+__subxf3 (XFtype a, XFtype b)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  FP_DECL_E (B);
+  FP_DECL_E (R);
+  XFtype r;
+
+  FP_INIT_ROUNDMODE;
+  FP_UNPACK_SEMIRAW_E (A, a);
+  FP_UNPACK_SEMIRAW_E (B, b);
+  FP_SUB_E (R, A, B);
+  FP_PACK_SEMIRAW_E (r, R);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
+ELF_ALIAS(__subxf3)
+#endif
diff --git a/libgcc/soft-fp/test-double.c b/libgcc/soft-fp/test-double.c
new file mode 100644
index 00000000000..d4253195b31
--- /dev/null
+++ b/libgcc/soft-fp/test-double.c
@@ -0,0 +1,157 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <ctype.h>
+#include <math.h>
+#include <float.h>
+#include <endian.h>
+#include <stdint.h>
+#include <errno.h>
+#include "soft-fp.h"
+#include "softfp-protos.h"
+
+struct ieee754_double_struct
+{
+#if	__BYTE_ORDER__ == __ORDER_BIG_ENDIAN__
+	unsigned int signexp:12;
+	uint32_t     mantissa0:20;
+	uint32_t     mantissa1:32;
+#else
+	uint32_t mantissa1:32;
+	uint32_t mantissa0:20;
+	unsigned int signexp:12;
+#endif
+};
+
+union ieee754_double
+{
+	struct ieee754_double_struct ieee;
+	double d;
+};
+
+
+struct test_data
+{
+	double arg1;
+	double arg2;
+	char op;
+	double expected;
+};
+
+static struct test_data const double_tests[] = {
+#define OP2(a, op, b) { a, b, #op[0], a op b }
+#define OP1(a, op, opc) { a, 0, #opc[0], op(a) }
+#define TESTOPS(a, b) \
+	OP2(a, +, b), \
+	OP2(a, -, b), \
+	OP2(a, *, b), \
+	OP2(a, /, b), \
+	OP1(a, -, ~)
+#define TEST(a, b) \
+	TESTOPS(a, b), \
+	TESTOPS(b, a), \
+	TESTOPS(-(a), -(b)), \
+	TESTOPS(-(b), -(a))
+	
+	TEST(3.0, 4.0),
+	TEST(3.0, 3.0),
+	TEST(1.123456789, 4.0),
+	TEST(1E38, 4.0),
+	TEST(1E308, 4.0),
+	TEST(1E-37, 4.0),
+	TEST(1E-307, 4.0),
+	TEST(0.0, 0.0),
+};
+
+
+double x, y;
+int a;
+long double lx, ly;
+int b;
+
+int main(void)
+{
+	int i;
+	int errors = 0;
+
+	/* to link in the comparison functions from softfp, not from libgcc */
+	a = x < y;
+	b = lx < ly;
+
+	for (i = 0; i < (int)(sizeof(double_tests) / sizeof(double_tests[0])); i++)
+	{
+		const struct test_data *lt = &double_tests[i];
+		volatile union ieee754_double a, b, z, r1;
+		double r;
+		
+#define COPY(dst, src) dst.d = src
+		
+		COPY(a, lt->arg1);
+		COPY(b, lt->arg2);
+		switch (lt->op)
+		{
+#if 0
+			case '+': r = lt->arg1 + lt->arg2; break;
+			case '-': r = lt->arg1 - lt->arg2; break;
+			case '*': r = lt->arg1 * lt->arg2; break;
+			case '/': r = lt->arg1 / lt->arg2; break;
+			case '~': r = -(lt->arg1); break;
+#else
+			case '+': r = __adddf3(lt->arg1, lt->arg2); break;
+			case '-': r = __subdf3(lt->arg1, lt->arg2); break;
+			case '*': r = __muldf3(lt->arg1, lt->arg2); break;
+			case '/': r = __divdf3(lt->arg1, lt->arg2); break;
+			case '~': r = __negdf2(lt->arg1); break;
+#endif
+			default: abort();
+		}
+		COPY(z, lt->expected);
+		COPY(r1, r);
+		if (r1.ieee.signexp != z.ieee.signexp ||
+			r1.ieee.mantissa0 != z.ieee.mantissa0 ||
+			r1.ieee.mantissa1 != z.ieee.mantissa1)
+		{
+#define is_binop(op) (op) != '~'
+			if (is_binop(lt->op))
+				printf("BAD %e %c %e\n", a.d, lt->op, b.d);
+			else
+				printf("BAD -(%e)\n", a.d);
+			printf("arg1      %.20e 0x%04x, 0x%08x, 0x%08x\n",
+				a.d,
+				a.ieee.signexp,
+				a.ieee.mantissa0,
+				a.ieee.mantissa1);
+			if (is_binop(lt->op))
+			printf("arg2      %.20e 0x%04x, 0x%08x, 0x%08x\n",
+				b.d,
+				b.ieee.signexp,
+				b.ieee.mantissa0,
+				b.ieee.mantissa1);
+			printf("expected  %.20e 0x%04x, 0x%08x, 0x%08x\n",
+				z.d,
+				z.ieee.signexp,
+				z.ieee.mantissa0,
+				z.ieee.mantissa1);
+			printf("got       %.20e 0x%04x, 0x%08x, 0x%08x\n",
+				r1.d,
+				r1.ieee.signexp,
+				r1.ieee.mantissa0,
+				r1.ieee.mantissa1);
+			errors++;
+		} else
+		{
+			if (is_binop(lt->op))
+				printf("OK %e %c %e\n", a.d, lt->op, b.d);
+			else
+				printf("OK -(%e)\n", a.d);
+		}
+	}
+
+	if (errors != 0)
+	{
+		fprintf(stderr, "got %d errors\n", errors);
+		return 1;
+	}
+	printf("no errors\n");
+	return 0;
+}
diff --git a/libgcc/soft-fp/test-float.c b/libgcc/soft-fp/test-float.c
new file mode 100644
index 00000000000..69d8dcd213a
--- /dev/null
+++ b/libgcc/soft-fp/test-float.c
@@ -0,0 +1,158 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <ctype.h>
+#include <math.h>
+#include <float.h>
+#include <endian.h>
+#include <stdint.h>
+#include <errno.h>
+#include "soft-fp.h"
+#include "softfp-protos.h"
+
+struct ieee754_float_struct
+{
+#if	__BYTE_ORDER__ == __ORDER_BIG_ENDIAN__
+	unsigned int signexp:9;
+	uint32_t     mantissa:23;
+#else
+	uint32_t mantissa:23;
+	unsigned int signexp:9;
+#endif
+};
+
+union ieee754_float
+{
+	struct ieee754_float_struct ieee;
+	float d;
+};
+
+
+struct test_data
+{
+	float arg1;
+	float arg2;
+	char op;
+	float expected;
+};
+
+static struct test_data const double_tests[] = {
+#define OP2(a, op, b) { a, b, #op[0], a op b }
+#define OP1(a, op, opc) { a, 0, #opc[0], op(a) }
+#define TESTOPS(a, b) \
+	OP2(a, +, b), \
+	OP2(a, -, b), \
+	OP2(a, *, b), \
+	OP2(a, /, b), \
+	OP1(a, -, ~)
+#define TEST(a, b) \
+	TESTOPS(a, b), \
+	TESTOPS(b, a), \
+	TESTOPS(-(a), -(b)), \
+	TESTOPS(-(b), -(a))
+	
+	TEST(3.0F, 4.0F),
+	TEST(3.0F, 3.0F),
+	TEST(1.123456789F, 4.0F),
+	TEST(1E38F, 4.0F),
+	TEST(1E-37F, 4.0F),
+	TEST(0.0F, 0.0F),
+};
+
+
+double x, y;
+int a;
+long double lx, ly;
+int b;
+
+int main(void)
+{
+	int i;
+	int errors = 0;
+	int warnings = 0;
+
+	/* to link in the comparison functions from softfp, not from libgcc */
+	a = x < y;
+	b = lx < ly;
+
+	for (i = 0; i < (int)(sizeof(double_tests) / sizeof(double_tests[0])); i++)
+	{
+		const struct test_data *lt = &double_tests[i];
+		volatile union ieee754_float a, b, z, r1;
+		double r;
+		
+#define COPY(dst, src) dst.d = src
+		
+		COPY(a, lt->arg1);
+		COPY(b, lt->arg2);
+		switch (lt->op)
+		{
+#if 0
+			case '+': r = lt->arg1 + lt->arg2; break;
+			case '-': r = lt->arg1 - lt->arg2; break;
+			case '*': r = lt->arg1 * lt->arg2; break;
+			case '/': r = lt->arg1 / lt->arg2; break;
+			case '~': r = -(lt->arg1); break;
+#else
+			case '+': r = __addsf3(lt->arg1, lt->arg2); break;
+			case '-': r = __subsf3(lt->arg1, lt->arg2); break;
+			case '*': r = __mulsf3(lt->arg1, lt->arg2); break;
+			case '/': r = __divsf3(lt->arg1, lt->arg2); break;
+			case '~': r = __negsf2(lt->arg1); break;
+#endif
+			default: abort();
+		}
+		COPY(z, lt->expected);
+		COPY(r1, r);
+		if (r1.ieee.signexp != z.ieee.signexp ||
+			(z.ieee.mantissa != r1.ieee.mantissa))
+		{
+#define is_binop(op) (op) != '~'
+			int warning = r1.ieee.signexp == z.ieee.signexp && (z.ieee.mantissa - r1.ieee.mantissa) <= 1;
+			const char *round = warning ? " (rounding)" : "";
+			if (is_binop(lt->op))
+				printf("BAD %e %c %e%s\n", a.d, lt->op, b.d, round);
+			else
+				printf("BAD -(%e)%s\n", a.d, round);
+			printf("arg1      %.20e 0x%04x, 0x%08x\n",
+				a.d,
+				a.ieee.signexp,
+				a.ieee.mantissa);
+			if (is_binop(lt->op))
+			printf("arg2      %.20e 0x%04x, 0x%08x\n",
+				b.d,
+				b.ieee.signexp,
+				b.ieee.mantissa);
+			printf("expected  %.20e 0x%04x, 0x%08x\n",
+				z.d,
+				z.ieee.signexp,
+				z.ieee.mantissa);
+			printf("got       %.20e 0x%04x, 0x%08x\n",
+				r1.d,
+				r1.ieee.signexp,
+				r1.ieee.mantissa);
+			if (warning)
+				warnings++;
+			else
+				errors++;
+		} else
+		{
+			if (is_binop(lt->op))
+				printf("OK %e %c %e\n", a.d, lt->op, b.d);
+			else
+				printf("OK -(%e)\n", a.d);
+		}
+	}
+
+	if (warnings != 0)
+	{
+		fprintf(stderr, "got %d warnings\n", warnings);
+	}
+	if (errors != 0)
+	{
+		fprintf(stderr, "got %d errors\n", errors);
+		return 1;
+	}
+	printf("no errors\n");
+	return 0;
+}
diff --git a/libgcc/soft-fp/test-ldouble.c b/libgcc/soft-fp/test-ldouble.c
new file mode 100644
index 00000000000..bd145431046
--- /dev/null
+++ b/libgcc/soft-fp/test-ldouble.c
@@ -0,0 +1,160 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <ctype.h>
+#include <math.h>
+#include <float.h>
+#include <endian.h>
+#include <stdint.h>
+#include <errno.h>
+#include "soft-fp.h"
+#include "softfp-protos.h"
+
+struct ieee854_long_double_struct
+{
+#if	__BYTE_ORDER__ == __ORDER_BIG_ENDIAN__
+	unsigned int signexp:16;
+	unsigned int empty:16;
+	uint32_t     mantissa0:32;
+	uint32_t     mantissa1:32;
+#else
+	uint32_t mantissa1:32;
+	uint32_t mantissa0:32;
+	unsigned int signexp:16;
+	unsigned int empty:16;
+#endif
+};
+
+union ieee854_long_double
+{
+	struct ieee854_long_double_struct ieee;
+	long double d;
+};
+
+struct test_data
+{
+	long double arg1;
+	long double arg2;
+	char op;
+	long double expected;
+};
+
+static struct test_data const double_tests[] = {
+#define OP2(a, op, b) { a, b, #op[0], a op b }
+#define OP1(a, op, opc) { a, 0, #opc[0], op(a) }
+#define TESTOPS(a, b) \
+	OP2(a, +, b), \
+	OP2(a, -, b), \
+	OP2(a, *, b), \
+	OP2(a, /, b), \
+	OP1(a, -, ~)
+#define TEST(a, b) \
+	TESTOPS(a, b), \
+	TESTOPS(b, a), \
+	TESTOPS(-(a), -(b)), \
+	TESTOPS(-(b), -(a))
+	
+	TEST(3.0L, 4.0L),
+	TEST(3.0L, 3.0L),
+	TEST(1.123456789L, 4.0L),
+	TEST(1E38L, 4.0L),
+	TEST(1E308L, 4.0L),
+	TEST(1E4000L, 4.0L),
+	TEST(1E-37L, 4.0L),
+	TEST(1E-307L, 4.0L),
+	TEST(1E-4000L, 4.0L),
+	TEST(0.0, 0.0),
+};
+
+
+double x, y;
+int a;
+long double lx, ly;
+int b;
+
+int main(void)
+{
+	int i;
+	int errors = 0;
+
+	/* to link in the comparison functions from softfp, not from libgcc */
+	a = x < y;
+	b = lx < ly;
+
+	for (i = 0; i < (int)(sizeof(double_tests) / sizeof(double_tests[0])); i++)
+	{
+		const struct test_data *lt = &double_tests[i];
+		volatile union ieee854_long_double a, b, z, r1;
+		long double r;
+		
+#define COPY(dst, src) dst.d = src
+		
+		COPY(a, lt->arg1);
+		COPY(b, lt->arg2);
+		switch (lt->op)
+		{
+#if 0
+			case '+': r = lt->arg1 + lt->arg2; break;
+			case '-': r = lt->arg1 - lt->arg2; break;
+			case '*': r = lt->arg1 * lt->arg2; break;
+			case '/': r = lt->arg1 / lt->arg2; break;
+			case '~': r = -(lt->arg1); break;
+#else
+			case '+': r = __addxf3(lt->arg1, lt->arg2); break;
+			case '-': r = __subxf3(lt->arg1, lt->arg2); break;
+			case '*': r = __mulxf3(lt->arg1, lt->arg2); break;
+			case '/': r = __divxf3(lt->arg1, lt->arg2); break;
+			case '~': r = __negxf2(lt->arg1); break;
+#endif
+			default: abort();
+		}
+		COPY(z, lt->expected);
+		COPY(r1, r);
+		if (r1.ieee.signexp != z.ieee.signexp ||
+			r1.ieee.mantissa0 != z.ieee.mantissa0 ||
+			r1.ieee.mantissa1 != z.ieee.mantissa1)
+		{
+#define is_binop(op) (op) != '~'
+			if (is_binop(lt->op))
+				printf("BAD %Le %c %Le\n", a.d, lt->op, b.d);
+			else
+				printf("BAD -(%Le)\n", a.d);
+			printf("arg1      %.20Le 0x%04x, 0x%08x, 0x%08x\n",
+				a.d,
+				a.ieee.signexp,
+				a.ieee.mantissa0,
+				a.ieee.mantissa1);
+			if (is_binop(lt->op))
+			printf("arg2      %.20Le 0x%04x, 0x%08x, 0x%08x\n",
+				b.d,
+				b.ieee.signexp,
+				b.ieee.mantissa0,
+				b.ieee.mantissa1);
+			printf("expected  %.20Le 0x%04x, 0x%08x, 0x%08x\n",
+				z.d,
+				z.ieee.signexp,
+				z.ieee.mantissa0,
+				z.ieee.mantissa1);
+			printf("got       %.20Le 0x%04x, 0x%08x, 0x%08x\n",
+				r1.d,
+				r1.ieee.signexp,
+				r1.ieee.mantissa0,
+				r1.ieee.mantissa1);
+			errors++;
+		} else
+		{
+			if (is_binop(lt->op))
+				printf("OK %Le %c %Le\n", a.d, lt->op, b.d);
+			else
+				printf("OK -(%Le)\n", a.d);
+		}
+	}
+
+	if (errors != 0)
+	{
+		fprintf(stderr, "got %d errors\n", errors);
+		return 1;
+	}
+	printf("no errors\n");
+	return 0;
+}
diff --git a/libgcc/soft-fp/truncxfdf2.c b/libgcc/soft-fp/truncxfdf2.c
new file mode 100644
index 00000000000..31690ed80bb
--- /dev/null
+++ b/libgcc/soft-fp/truncxfdf2.c
@@ -0,0 +1,52 @@
+/* Software floating-point emulation.
+   Truncate IEEE double into IEEE single
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "double.h"
+#include "extended.h"
+
+DFtype
+__truncxfdf2 (XFtype a)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  FP_DECL_D (R);
+  DFtype r;
+
+  FP_INIT_ROUNDMODE;
+  FP_UNPACK_SEMIRAW_E (A, a);
+#if _FP_W_TYPE_SIZE < 64
+  FP_TRUNC (D, E, 2, 4, R, A);
+#else
+  FP_TRUNC (D, E, 1, 2, R, A);
+#endif
+  FP_PACK_SEMIRAW_D (r, R);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
diff --git a/libgcc/soft-fp/truncxfsf2.c b/libgcc/soft-fp/truncxfsf2.c
new file mode 100644
index 00000000000..041783904f5
--- /dev/null
+++ b/libgcc/soft-fp/truncxfsf2.c
@@ -0,0 +1,52 @@
+/* Software floating-point emulation.
+   Truncate IEEE double into IEEE single
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "single.h"
+#include "extended.h"
+
+SFtype
+__truncxfsf2 (XFtype a)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  FP_DECL_S (R);
+  SFtype r;
+
+  FP_INIT_ROUNDMODE;
+  FP_UNPACK_SEMIRAW_E (A, a);
+#if _FP_W_TYPE_SIZE < 64
+  FP_TRUNC (S, E, 1, 4, R, A);
+#else
+  FP_TRUNC (S, E, 1, 2, R, A);
+#endif
+  FP_PACK_SEMIRAW_S (r, R);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
diff --git a/libgcc/soft-fp/unordxf2.c b/libgcc/soft-fp/unordxf2.c
new file mode 100644
index 00000000000..b2cf0511f68
--- /dev/null
+++ b/libgcc/soft-fp/unordxf2.c
@@ -0,0 +1,47 @@
+/* Software floating-point emulation.
+   Return 1 iff a or b is a NaN, 0 otherwise.
+   Copyright (C) 2006-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "extended.h"
+
+CMPtype
+__unordxf2 (XFtype a, XFtype b)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  FP_DECL_E (B);
+  CMPtype r;
+
+  FP_INIT_EXCEPTIONS;
+  FP_UNPACK_RAW_E (A, a);
+  FP_UNPACK_RAW_E (B, b);
+  FP_CMP_UNORD_E (r, A, B, 1);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
diff --git a/libgcc/udivmod.c b/libgcc/udivmod.c
index f61e32403e0..25a1ccb9058 100644
--- a/libgcc/udivmod.c
+++ b/libgcc/udivmod.c
@@ -21,6 +21,8 @@ a copy of the GCC Runtime Library Exception along with this program;
 see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 <http://www.gnu.org/licenses/>.  */
 
+#include "elf-alias.h"
+
 long udivmodsi4 ();
 
 long
@@ -28,10 +30,11 @@ __udivsi3 (long a, long b)
 {
   return udivmodsi4 (a, b, 0);
 }
+ELF_ALIAS(__udivsi3)
 
 long
 __umodsi3 (long a, long b)
 {
   return udivmodsi4 (a, b, 1);
 }
-
+ELF_ALIAS(__umodsi3)
diff --git a/libgcc/unwind-c.c b/libgcc/unwind-c.c
index e80b078472f..2fe6d961682 100644
--- a/libgcc/unwind-c.c
+++ b/libgcc/unwind-c.c
@@ -243,3 +243,11 @@ __gcc_personality_seh0 (PEXCEPTION_RECORD ms_exc, void *this_frame,
 				ms_disp, __gcc_personality_imp);
 }
 #endif /* SEH */
+
+#if defined(__MINT__)
+void *__DW_EH_PE_aligned_var
+#ifdef __ELF__
+	__attribute__((__aligned__(sizeof(void *))))
+#endif
+;
+#endif
diff --git a/libgcc/unwind-pe.h b/libgcc/unwind-pe.h
index 194ca0aa6d0..6dedcf8aa9d 100644
--- a/libgcc/unwind-pe.h
+++ b/libgcc/unwind-pe.h
@@ -198,7 +198,18 @@ read_encoded_value_with_base (unsigned char encoding, _Unwind_Ptr base,
   if (encoding == DW_EH_PE_aligned)
     {
       _Unwind_Internal_Ptr a = (_Unwind_Internal_Ptr) p;
+#ifdef __MINT__
+      /*
+       * alignment to pointer size cannot be guaranteed by TOS at runtime
+       */
+      extern void *__DW_EH_PE_aligned_var;
+      _Unwind_Internal_Ptr base_offset = ((_Unwind_Internal_Ptr)&__DW_EH_PE_aligned_var) & 3;
+      a += base_offset; /* Where it should have been located */
+#endif
       a = (a + sizeof (void *) - 1) & - sizeof(void *);
+#ifdef __MINT__
+      a -= base_offset; /* Where it is actually aligned */
+#endif
       result = *(_Unwind_Internal_Ptr *) a;
       p = (const unsigned char *) (_Unwind_Internal_Ptr) (a + sizeof (void *));
     }
diff --git a/libgfortran/Makefile.am b/libgfortran/Makefile.am
index 2857af5943f..9eb6d904d3a 100644
--- a/libgfortran/Makefile.am
+++ b/libgfortran/Makefile.am
@@ -46,7 +46,7 @@ libgfortran_la_DEPENDENCIES = $(version_dep) libgfortran.spec $(LIBQUADLIB_DEP)
 cafexeclib_LTLIBRARIES = libcaf_single.la
 cafexeclibdir = $(libdir)/gcc/$(target_alias)/$(gcc_version)$(MULTISUBDIR)
 libcaf_single_la_SOURCES = caf/single.c
-libcaf_single_la_LDFLAGS = -static
+libcaf_single_la_LDFLAGS = -static -no-undefined
 libcaf_single_la_DEPENDENCIES = caf/libcaf.h
 libcaf_single_la_LINK = $(LINK) $(libcaf_single_la_LDFLAGS)
 
diff --git a/libgfortran/Makefile.in b/libgfortran/Makefile.in
index 4914a6f323f..60f123ff8a5 100644
--- a/libgfortran/Makefile.in
+++ b/libgfortran/Makefile.in
@@ -591,7 +591,7 @@ libgfortran_la_DEPENDENCIES = $(version_dep) libgfortran.spec $(LIBQUADLIB_DEP)
 cafexeclib_LTLIBRARIES = libcaf_single.la
 cafexeclibdir = $(libdir)/gcc/$(target_alias)/$(gcc_version)$(MULTISUBDIR)
 libcaf_single_la_SOURCES = caf/single.c
-libcaf_single_la_LDFLAGS = -static
+libcaf_single_la_LDFLAGS = -static -no-undefined
 libcaf_single_la_DEPENDENCIES = caf/libcaf.h
 libcaf_single_la_LINK = $(LINK) $(libcaf_single_la_LDFLAGS)
 @IEEE_SUPPORT_TRUE@fincludedir = $(libdir)/gcc/$(target_alias)/$(gcc_version)$(MULTISUBDIR)/finclude
diff --git a/libgfortran/configure b/libgfortran/configure
index 1db8f5f5224..b0b488973d4 100755
--- a/libgfortran/configure
+++ b/libgfortran/configure
@@ -6184,7 +6184,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -6944,6 +6944,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
@@ -10128,7 +10134,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -10565,7 +10571,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -11469,14 +11475,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -11500,7 +11506,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -12134,7 +12140,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -12768,7 +12774,7 @@ CC="$lt_save_CC"
 
 
 case $host in
-  *-cygwin* | *-mingw*)
+  *-cygwin* | *-mingw* | *-msys*)
     # 'host' will be top-level target in the case of a target lib,
     # we must compare to with_cross_host to decide if this is a native
     # or cross-compiler and select where to install dlls appropriately.
@@ -13977,7 +13983,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, FC) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec_FC='-L$libdir'
@@ -14402,7 +14408,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec_FC=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -15100,14 +15106,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -15130,7 +15136,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
diff --git a/libgo/config/libtool.m4 b/libgo/config/libtool.m4
index f7005947454..0b93939fd2f 100644
--- a/libgo/config/libtool.m4
+++ b/libgo/config/libtool.m4
@@ -1733,7 +1733,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -2209,14 +2209,14 @@ bsdi[[45]]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -2240,7 +2240,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 m4_if([$1], [],[
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"])
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -2846,7 +2846,7 @@ if test "$GCC" = yes; then
   # Check if gcc -print-prog-name=ld gives a path.
   AC_MSG_CHECKING([for ld used by $CC])
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -4408,7 +4408,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,
       # as there is no search path for DLLs.
       _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
@@ -4781,7 +4781,7 @@ _LT_EOF
       _LT_TAGVAR(export_dynamic_flag_spec, $1)=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -5725,7 +5725,7 @@ if test "$_lt_caught_CXX_error" != yes; then
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,
         # as there is no search path for DLLs.
         _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
diff --git a/libgo/configure b/libgo/configure
index 94c42f67e82..1791c480f0d 100755
--- a/libgo/configure
+++ b/libgo/configure
@@ -4715,7 +4715,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -8838,7 +8838,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -9269,7 +9269,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -10170,14 +10170,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -10201,7 +10201,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -10832,7 +10832,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -12255,7 +12255,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, GO) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec_GO='-L$libdir'
@@ -12686,7 +12686,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec_GO=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
diff --git a/libgomp/configure b/libgomp/configure
index 06166c66120..195406e7703 100755
--- a/libgomp/configure
+++ b/libgomp/configure
@@ -5088,7 +5088,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -5440,6 +5440,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
@@ -8889,7 +8895,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -9320,7 +9326,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -10221,14 +10227,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -10252,7 +10258,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -10883,7 +10889,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -11502,7 +11508,7 @@ CC="$lt_save_CC"
 
 
 case $host in
-  *-cygwin* | *-mingw*)
+  *-cygwin* | *-mingw* | *-msys*)
     # 'host' will be top-level target in the case of a target lib,
     # we must compare to with_cross_host to decide if this is a native
     # or cross-compiler and select where to install dlls appropriately.
@@ -12749,7 +12755,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, FC) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec_FC='-L$libdir'
@@ -13168,7 +13174,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec_FC=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -13863,14 +13869,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -13893,7 +13899,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -16129,7 +16135,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
diff --git a/libhsail-rt/configure b/libhsail-rt/configure
index a4fcc10c1f9..f3334e2a3a8 100755
--- a/libhsail-rt/configure
+++ b/libhsail-rt/configure
@@ -4907,7 +4907,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -8707,7 +8707,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -9138,7 +9138,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -10039,14 +10039,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -10070,7 +10070,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -10701,7 +10701,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -11575,7 +11575,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -11928,7 +11928,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,
         # as there is no search path for DLLs.
         hardcode_libdir_flag_spec_CXX='-L$libdir'
@@ -13701,14 +13701,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -13731,7 +13731,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
diff --git a/libiberty/configure b/libiberty/configure
index 868793558f0..f3839fa7422 100755
--- a/libiberty/configure
+++ b/libiberty/configure
@@ -5110,7 +5110,9 @@ case "${host}" in
 	;;
     i[34567]86-*-cygwin* | x86_64-*-cygwin*)
 	;;
-    i[34567]86-*-mingw* | x86_64-*-mingw*)
+    i[34567]86-*-mingw* | x86_64-*-mingw* | x86_64-*-msys*)
+	;;
+    *-*-mint*)
 	;;
     i[34567]86-*-interix[3-9]*)
 	# Interix 3.x gcc -fpic/-fPIC options generate broken code.
@@ -5959,7 +5961,7 @@ _ACEOF
   # Mingw provides and which ones we will be expected to provide.
 
   case "${host}" in
-  *-*-mingw*)
+  *-*-mingw* | *-*-msys*)
     case " $LIBOBJS " in
   *" asprintf.$ac_objext "* ) ;;
   *) LIBOBJS="$LIBOBJS asprintf.$ac_objext"
@@ -6175,7 +6177,7 @@ fi
 
 
 case "${host}" in
-  *-*-cygwin* | *-*-mingw*)
+  *-*-cygwin* | *-*-mingw* | *-*-mint* | *-*-msys*)
     $as_echo "#define HAVE_SYS_ERRLIST 1" >>confdefs.h
 
     $as_echo "#define HAVE_SYS_NERR 1" >>confdefs.h
@@ -6289,7 +6291,7 @@ if test -z "${setobjs}"; then
     ac_cv_func_getpagesize=yes
     ;;
 
-  *-*-mingw32*)
+  *-*-mingw32* | *-*-msys*)
     # Under mingw32, sys_nerr and sys_errlist exist, but they are
     # macros, so the test below won't find them.
     libiberty_cv_var_sys_nerr=yes
@@ -7056,7 +7058,7 @@ fi
 
 # Figure out which version of pexecute to use.
 case "${host}" in
-     *-*-mingw* | *-*-winnt*)	pexecute=pex-win32  ;;
+     *-*-mingw* | *-*-winnt* | *-*-msys*)	pexecute=pex-win32  ;;
      *-*-msdosdjgpp*)		pexecute=pex-djgpp  ;;
      *-*-msdos*)		pexecute=pex-msdos  ;;
      *)				pexecute=pex-unix   ;;
diff --git a/libiberty/configure.ac b/libiberty/configure.ac
index 1aa0c7c7f42..0330112ad57 100644
--- a/libiberty/configure.ac
+++ b/libiberty/configure.ac
@@ -471,7 +471,7 @@ if test -n "${with_target_subdir}"; then
   # Mingw provides and which ones we will be expected to provide.
 
   case "${host}" in
-  *-*-mingw*)
+  *-*-mingw* | *-*-msys*)
     AC_LIBOBJ([asprintf])
     AC_LIBOBJ([basename])
     AC_LIBOBJ([bcmp])
@@ -550,7 +550,7 @@ AC_SUBST(CHECK)
 AC_SUBST(target_header_dir)
 
 case "${host}" in
-  *-*-cygwin* | *-*-mingw*)
+  *-*-cygwin* | *-*-mingw* | *-*-mint* | *-*-msys*)
     AC_DEFINE(HAVE_SYS_ERRLIST)
     AC_DEFINE(HAVE_SYS_NERR)
     ;;
@@ -608,7 +608,7 @@ if test -z "${setobjs}"; then
     ac_cv_func_getpagesize=yes
     ;;
 
-  *-*-mingw32*)
+  *-*-mingw32* | *-*-msys*)
     # Under mingw32, sys_nerr and sys_errlist exist, but they are
     # macros, so the test below won't find them.
     libiberty_cv_var_sys_nerr=yes
@@ -694,7 +694,7 @@ fi
 
 # Figure out which version of pexecute to use.
 case "${host}" in
-     *-*-mingw* | *-*-winnt*)	pexecute=pex-win32  ;;
+     *-*-mingw* | *-*-winnt* | *-*-msys*)	pexecute=pex-win32  ;;
      *-*-msdosdjgpp*)		pexecute=pex-djgpp  ;;
      *-*-msdos*)		pexecute=pex-msdos  ;;
      *)				pexecute=pex-unix   ;;
diff --git a/libiberty/hex.c b/libiberty/hex.c
index d93508c896a..0abd74db9b4 100644
--- a/libiberty/hex.c
+++ b/libiberty/hex.c
@@ -24,7 +24,7 @@ Boston, MA 02110-1301, USA.  */
 #include "libiberty.h"
 #include "safe-ctype.h" /* for HOST_CHARSET_ASCII */
 
-#if EOF != -1
+#if !(EOF == -1)	/* gcc 2.95.3 has bug in '!=' operator for negative constants */
  #error "hex.c requires EOF == -1"
 #endif
 
diff --git a/libiberty/lrealpath.c b/libiberty/lrealpath.c
index 0a19a5e3185..6068f1d01e9 100644
--- a/libiberty/lrealpath.c
+++ b/libiberty/lrealpath.c
@@ -138,15 +138,26 @@ lrealpath (const char *filename)
   {
     char buf[MAX_PATH];
     char* basename;
+    char* slash;
     DWORD len = GetFullPathName (filename, MAX_PATH, buf, &basename);
     if (len == 0 || len > MAX_PATH - 1)
       return strdup (filename);
     else
       {
-	/* The file system is case-preserving but case-insensitive,
-	   Canonicalize to lowercase, using the codepage associated
-	   with the process locale.  */
-        CharLowerBuff (buf, len);
+	/* Turn all back slashes back into forward slashes
+	   and don't make it lowercase.
+	   Rationale:
+	   Windows is as happy with / as it is with \. This will
+	   have been built using Cygwin, MSYS* or cross-compiled
+	   from a system where dirsep is / so it is cleaner just
+	   to keep the dirseps as / (and the case un-modified).
+	   This way, the value will be consistent with the build
+	   system and string operations (be they internal to this
+	   software or external to it, e.g. processing map files
+	   with sed) work as expected.  */
+	slash = buf;
+	while ((slash = strchr(slash,'\\')) !=  NULL)
+	  *slash = '/';
         return strdup (buf);
       }
   }
diff --git a/libiberty/safe-ctype.c b/libiberty/safe-ctype.c
index 5a13f827f8d..430c3f94598 100644
--- a/libiberty/safe-ctype.c
+++ b/libiberty/safe-ctype.c
@@ -118,7 +118,7 @@ sets of characters:
 #include <safe-ctype.h>
 #include <stdio.h>  /* for EOF */
 
-#if EOF != -1
+#if !(EOF == -1)	/* gcc 2.95.3 has bug in '!=' operator for negative constants */
  #error "<safe-ctype.h> requires EOF == -1"
 #endif
 
diff --git a/libiberty/strsignal.c b/libiberty/strsignal.c
index 666b1b4f15e..2f607023097 100644
--- a/libiberty/strsignal.c
+++ b/libiberty/strsignal.c
@@ -551,7 +551,7 @@ followed by a newline.
 #ifndef HAVE_PSIGNAL
 
 void
-psignal (int signo, char *message)
+psignal (int signo, const char *message)
 {
   if (signal_names == NULL)
     {
diff --git a/libitm/configure b/libitm/configure
index 96c494d4a3f..109fc499cda 100644
--- a/libitm/configure
+++ b/libitm/configure
@@ -5726,7 +5726,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -9528,7 +9528,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -9959,7 +9959,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -10860,14 +10860,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -10891,7 +10891,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -11522,7 +11522,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -12396,7 +12396,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -12749,7 +12749,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,
         # as there is no search path for DLLs.
         hardcode_libdir_flag_spec_CXX='-L$libdir'
@@ -14522,14 +14522,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -14552,7 +14552,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -15843,7 +15843,7 @@ else
    # Systems known to be in this category are Windows (all variants),
    # VMS, and Darwin.
    case "$host_os" in
-     *vms* | cygwin* | pe | mingw* | darwin* | ultrix* | hpux10* | hpux11.00)
+     *vms* | cygwin* | pe | mingw* | msys* | darwin* | ultrix* | hpux10* | hpux11.00)
         gcc_cv_func_mmap_dev_zero=no ;;
      *)
         gcc_cv_func_mmap_dev_zero=yes;;
@@ -15900,7 +15900,7 @@ else
    # above for use of /dev/zero.
    # Systems known to be in this category are Windows, VMS, and SCO Unix.
    case "$host_os" in
-     *vms* | cygwin* | pe | mingw* | sco* | udk* )
+     *vms* | cygwin* | pe | mingw* | msys* | sco* | udk* )
         gcc_cv_func_mmap_anon=no ;;
      *)
         gcc_cv_func_mmap_anon=yes;;
@@ -16648,7 +16648,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
diff --git a/libmpx/configure b/libmpx/configure
index 2fd71ca89f6..8fc0083fdcd 100644
--- a/libmpx/configure
+++ b/libmpx/configure
@@ -5438,7 +5438,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -8968,7 +8968,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -9399,7 +9399,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -10300,14 +10300,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -10331,7 +10331,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -10962,7 +10962,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
diff --git a/libobjc/configure b/libobjc/configure
index 84862a82864..8d436d499ad 100755
--- a/libobjc/configure
+++ b/libobjc/configure
@@ -3320,7 +3320,7 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu
 
 
 case $host in
-  *-cygwin* | *-mingw*)
+  *-cygwin* | *-mingw* | *-msys*)
     # 'host' will be top-level target in the case of a target lib,
     # we must compare to with_cross_host to decide if this is a native
     # or cross-compiler and select where to install dlls appropriately.
@@ -3343,7 +3343,7 @@ case "${host}" in
     # Darwin needs -single_module when linking libobjc
     extra_ldflags_libobjc='$(lt_host_flags) -Wl,-single_module'
     ;;
-  *-cygwin*|*-mingw*)
+  *-cygwin*|*-mingw*|*-*-msys*)
     # Tell libtool to build DLLs on Windows
     extra_ldflags_libobjc='$(lt_host_flags)'
     ;;
@@ -4457,7 +4457,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -4809,6 +4809,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
@@ -8301,7 +8307,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -8738,7 +8744,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -9642,14 +9648,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -9673,7 +9679,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -10307,7 +10313,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
diff --git a/libobjc/configure.ac b/libobjc/configure.ac
index c6d48f787ae..3dab4b3d7c7 100644
--- a/libobjc/configure.ac
+++ b/libobjc/configure.ac
@@ -144,7 +144,7 @@ case "${host}" in
     # Darwin needs -single_module when linking libobjc
     extra_ldflags_libobjc='$(lt_host_flags) -Wl,-single_module'
     ;;
-  *-cygwin*|*-mingw*)
+  *-cygwin*|*-mingw*|*-*-msys*)
     # Tell libtool to build DLLs on Windows
     extra_ldflags_libobjc='$(lt_host_flags)'
     ;;
diff --git a/liboffloadmic/configure b/liboffloadmic/configure
index f873716991b..2963a206994 100644
--- a/liboffloadmic/configure
+++ b/liboffloadmic/configure
@@ -5311,7 +5311,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -8842,7 +8842,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -9273,7 +9273,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -10174,14 +10174,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -10205,7 +10205,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -10836,7 +10836,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -11710,7 +11710,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -12063,7 +12063,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,
         # as there is no search path for DLLs.
         hardcode_libdir_flag_spec_CXX='-L$libdir'
@@ -13836,14 +13836,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -13866,7 +13866,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
diff --git a/liboffloadmic/plugin/configure b/liboffloadmic/plugin/configure
index c031eb3e7fa..b7b807d6d5a 100644
--- a/liboffloadmic/plugin/configure
+++ b/liboffloadmic/plugin/configure
@@ -4749,7 +4749,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -8549,7 +8549,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -8980,7 +8980,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -9881,14 +9881,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -9912,7 +9912,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -10543,7 +10543,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -11417,7 +11417,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -11770,7 +11770,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,
         # as there is no search path for DLLs.
         hardcode_libdir_flag_spec_CXX='-L$libdir'
@@ -13543,14 +13543,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -13573,7 +13573,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
diff --git a/libquadmath/configure b/libquadmath/configure
index 76a2c20b7e1..5838dd0e7bf 100755
--- a/libquadmath/configure
+++ b/libquadmath/configure
@@ -4741,7 +4741,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -8279,7 +8279,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -8716,7 +8716,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -9620,14 +9620,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -9651,7 +9651,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -10285,7 +10285,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -10919,7 +10919,7 @@ CC="$lt_save_CC"
 
 
 case $host in
-  *-cygwin* | *-mingw*)
+  *-cygwin* | *-mingw* | *-msys*)
     # 'host' will be top-level target in the case of a target lib,
     # we must compare to with_cross_host to decide if this is a native
     # or cross-compiler and select where to install dlls appropriately.
diff --git a/libsanitizer/configure b/libsanitizer/configure
index a3a08d635f4..ee2b4d647de 100755
--- a/libsanitizer/configure
+++ b/libsanitizer/configure
@@ -6235,7 +6235,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -9766,7 +9766,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -10197,7 +10197,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -11098,14 +11098,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -11129,7 +11129,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -11760,7 +11760,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -12634,7 +12634,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -12987,7 +12987,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,
         # as there is no search path for DLLs.
         hardcode_libdir_flag_spec_CXX='-L$libdir'
@@ -14760,14 +14760,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -14790,7 +14790,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -16386,7 +16386,7 @@ fi
 # Check for the fcntl function.
 if test -n "${with_target_subdir}"; then
    case "${host}" in
-   *-*-mingw*) have_fcntl=no ;;
+   *-*-mingw* | *-*-msys*) have_fcntl=no ;;
    *) have_fcntl=yes ;;
    esac
 else
diff --git a/libsanitizer/configure.ac b/libsanitizer/configure.ac
index b0c485b0f7b..4fb2b8605e5 100644
--- a/libsanitizer/configure.ac
+++ b/libsanitizer/configure.ac
@@ -295,7 +295,7 @@ fi
 # Check for the fcntl function.
 if test -n "${with_target_subdir}"; then
    case "${host}" in
-   *-*-mingw*) have_fcntl=no ;;
+   *-*-mingw* | *-*-msys*) have_fcntl=no ;;
    *) have_fcntl=yes ;;
    esac
 else
diff --git a/libssp/configure b/libssp/configure
index ee1751d20db..0a884cb1ff5 100755
--- a/libssp/configure
+++ b/libssp/configure
@@ -4840,7 +4840,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -5192,6 +5192,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
@@ -8378,7 +8384,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -8815,7 +8821,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -9719,14 +9725,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -9750,7 +9756,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -10384,7 +10390,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -11018,7 +11024,7 @@ CC="$lt_save_CC"
 
 
 case $host in
-  *-cygwin* | *-mingw*)
+  *-cygwin* | *-mingw* | *-msys*)
     # 'host' will be top-level target in the case of a target lib,
     # we must compare to with_cross_host to decide if this is a native
     # or cross-compiler and select where to install dlls appropriately.
diff --git a/libssp/ssp.c b/libssp/ssp.c
index 536fb917a49..1545f99d181 100644
--- a/libssp/ssp.c
+++ b/libssp/ssp.c
@@ -65,6 +65,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 #ifdef HAVE_SYSLOG_H
 # include <syslog.h>
 #endif
+#ifdef __MINT__
+#include <mint/osbind.h>
+#endif
 
 void *__stack_chk_guard = 0;
 
@@ -114,6 +117,9 @@ fail (const char *msg1, size_t msg1len, const char *msg3)
 {
 #ifdef __GNU_LIBRARY__
   extern char * __progname;
+#elif defined (__MINT__)
+  extern char * program_invocation_short_name;
+  #define __progname program_invocation_short_name
 #else
   static const char __progname[] = "";
 #endif
@@ -155,6 +161,9 @@ fail (const char *msg1, size_t msg1len, const char *msg3)
     syslog (LOG_CRIT, "%s", msg3);
 #endif /* HAVE_SYSLOG_H */
 
+#ifdef __MINT__
+    Pterm(127);
+#else
   /* Try very hard to exit.  Note that signals may be blocked preventing
      the first two options from working.  The use of volatile is here to
      prevent optimizers from "knowing" that __builtin_trap is called first,
@@ -176,6 +185,7 @@ fail (const char *msg1, size_t msg1len, const char *msg3)
           break;
         }
   }
+#endif
 }
 
 void
diff --git a/libstdc++-v3/acinclude.m4 b/libstdc++-v3/acinclude.m4
index 08319dc5549..22850b2f45b 100644
--- a/libstdc++-v3/acinclude.m4
+++ b/libstdc++-v3/acinclude.m4
@@ -2761,7 +2761,7 @@ AC_DEFUN([GLIBCXX_ENABLE_VTABLE_VERIFY], [
   vtv_cygmin=no
   if test $enable_vtable_verify = yes; then
     case ${target_os} in
-      cygwin*|mingw32*)
+      cygwin*|mingw*)
         VTV_CXXFLAGS="-fvtable-verify=std -Wl,-lvtv,-u_vtable_map_vars_start,-u_vtable_map_vars_end"
         VTV_CXXLINKFLAGS="-L${toplevel_builddir}/libvtv/.libs -Wl,--rpath -Wl,${toplevel_builddir}/libvtv/.libs"
         vtv_cygmin=yes
diff --git a/libstdc++-v3/config/abi/pre/gnu.ver b/libstdc++-v3/config/abi/pre/gnu.ver
index f365da116f0..5a0c88dfcae 100644
--- a/libstdc++-v3/config/abi/pre/gnu.ver
+++ b/libstdc++-v3/config/abi/pre/gnu.ver
@@ -2171,7 +2171,7 @@ CXXABI_1.3.6 {
     __cxa_allocate_dependent_exception;
     __cxa_free_dependent_exception;
     __cxa_deleted_virtual;
-
+    _ZTC*;
 } CXXABI_1.3.5;
 
 CXXABI_1.3.7 {
diff --git a/libstdc++-v3/config/locale/dragonfly/c_locale.h b/libstdc++-v3/config/locale/dragonfly/c_locale.h
index 0a5753208db..73fcb1281e1 100644
--- a/libstdc++-v3/config/locale/dragonfly/c_locale.h
+++ b/libstdc++-v3/config/locale/dragonfly/c_locale.h
@@ -55,7 +55,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   // fall back to the unsafe vsprintf which, in general, can be dangerous
   // and should be avoided.
   inline int
-  __convert_from_v(const __c_locale& __cloc, char* __out,
+  __convert_from_v(const __c_locale& __cloc, char* ___out,
 		   const int __size __attribute__ ((__unused__)),
 		   const char* __fmt, ...)
   {
@@ -65,9 +65,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
     __builtin_va_start(__args, __fmt);
 
 #if _GLIBCXX_USE_C99_STDIO
-    const int __ret = __builtin_vsnprintf(__out, __size, __fmt, __args);
+    const int __ret = __builtin_vsnprintf(___out, __size, __fmt, __args);
 #else
-    const int __ret = __builtin_vsprintf(__out, __fmt, __args);
+    const int __ret = __builtin_vsprintf(___out, __fmt, __args);
 #endif
 
     __builtin_va_end(__args);
diff --git a/libstdc++-v3/config/locale/generic/c_locale.h b/libstdc++-v3/config/locale/generic/c_locale.h
index ce9fbb80d76..7c1b19d5be8 100644
--- a/libstdc++-v3/config/locale/generic/c_locale.h
+++ b/libstdc++-v3/config/locale/generic/c_locale.h
@@ -53,7 +53,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   // fall back to the unsafe vsprintf which, in general, can be dangerous
   // and should be avoided.
   inline int
-  __convert_from_v(const __c_locale&, char* __out,
+  __convert_from_v(const __c_locale&, char* ___out,
 		   const int __size __attribute__((__unused__)),
 		   const char* __fmt, ...)
   {
@@ -71,9 +71,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
     __builtin_va_start(__args, __fmt);
 
 #if _GLIBCXX_USE_C99_STDIO
-    const int __ret = __builtin_vsnprintf(__out, __size, __fmt, __args);
+    const int __ret = __builtin_vsnprintf(___out, __size, __fmt, __args);
 #else
-    const int __ret = __builtin_vsprintf(__out, __fmt, __args);
+    const int __ret = __builtin_vsprintf(___out, __fmt, __args);
 #endif
 
     __builtin_va_end(__args);
diff --git a/libstdc++-v3/config/locale/gnu/c_locale.h b/libstdc++-v3/config/locale/gnu/c_locale.h
index 75b955c8312..ce1eca42b86 100644
--- a/libstdc++-v3/config/locale/gnu/c_locale.h
+++ b/libstdc++-v3/config/locale/gnu/c_locale.h
@@ -67,7 +67,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   // and should be avoided.
   inline int
   __convert_from_v(const __c_locale& __cloc __attribute__ ((__unused__)),
-		   char* __out,
+		   char* ___out,
 		   const int __size __attribute__ ((__unused__)),
 		   const char* __fmt, ...)
   {
@@ -89,9 +89,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
     __builtin_va_start(__args, __fmt);
 
 #if _GLIBCXX_USE_C99_STDIO
-    const int __ret = __builtin_vsnprintf(__out, __size, __fmt, __args);
+    const int __ret = __builtin_vsnprintf(___out, __size, __fmt, __args);
 #else
-    const int __ret = __builtin_vsprintf(__out, __fmt, __args);
+    const int __ret = __builtin_vsprintf(___out, __fmt, __args);
 #endif
 
     __builtin_va_end(__args);
diff --git a/libstdc++-v3/config/os/mingw32-w64/os_defines.h b/libstdc++-v3/config/os/mingw32-w64/os_defines.h
index 1f46103249a..b737a954f0a 100644
--- a/libstdc++-v3/config/os/mingw32-w64/os_defines.h
+++ b/libstdc++-v3/config/os/mingw32-w64/os_defines.h
@@ -76,6 +76,7 @@
 
 #ifdef __x86_64__
 #define _GLIBCXX_LLP64 1
+#define _GLIBCXX_USE_WEAK_REF 0
 #endif
 
 // Enable use of GetModuleHandleEx (requires Windows XP/2003) in
diff --git a/libstdc++-v3/config/os/mint/ctype_base.h b/libstdc++-v3/config/os/mint/ctype_base.h
new file mode 100644
index 00000000000..0f2e672c6fe
--- /dev/null
+++ b/libstdc++-v3/config/os/mint/ctype_base.h
@@ -0,0 +1,67 @@
+// Locale support -*- C++ -*-
+
+// Copyright (C) 1997-2023 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+//
+// ISO C++ 14882: 22.1  Locales
+//
+
+//  We don't use the C-locale masks defined in /usr/include/ctype.h
+//  because those masks do not conform to the requirements of 22.2.1.
+//  In particular, a separate 'print' bitmask does not exist (isprint(c)
+//  relies on a combination of flags) and the  '_ALPHA' mask is also a
+//  combination of simple bitmasks.  Thus, we define libstdc++-specific
+//  masks here, based on the generic masks, and the corresponding
+//  classic_table in ctype_noninline.h.
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  /// @brief  Base class for ctype.
+  struct ctype_base
+  {
+    // Non-standard typedefs.
+    typedef const int* 		__to_type;
+
+    // NB: Offsets into ctype<char>::_M_table force a particular size
+    // on the mask type. Because of this, we don't use an enum.
+    typedef unsigned short 	mask;
+    static const mask upper	= 1 << 0;
+    static const mask lower	= 1 << 1;
+    static const mask alpha	= 1 << 2;
+    static const mask digit	= 1 << 3;
+    static const mask xdigit	= 1 << 4;
+    static const mask space	= 1 << 5;
+    static const mask print	= 1 << 6;
+    static const mask graph	= (1 << 2) | (1 << 3) | (1 << 9);  // alnum|punct
+    static const mask cntrl	= 1 << 8;
+    static const mask punct 	= 1 << 9;
+    static const mask alnum	= (1 << 2) | (1 << 3);  // alpha|digit
+#if __cplusplus >= 201103L
+    static const mask blank	= 1 << 10;
+#endif
+  };
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
diff --git a/libstdc++-v3/config/os/mint/ctype_configure_char.cc b/libstdc++-v3/config/os/mint/ctype_configure_char.cc
new file mode 100644
index 00000000000..840c4730312
--- /dev/null
+++ b/libstdc++-v3/config/os/mint/ctype_configure_char.cc
@@ -0,0 +1,243 @@
+// Locale support -*- C++ -*-
+
+// Copyright (C) 2011-2017 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+/** @file ctype_configure_char.cc */
+
+//
+// ISO C++ 14882: 22.1  Locales
+//
+
+#include <locale>
+#include <cstdlib>
+#include <cstring>
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  // The classic table used in libstdc++ is *not* the C _ctype table
+  // used by mscvrt, but is based on the ctype masks defined for libstdc++
+  // in ctype_base.h.
+
+  const ctype_base::mask*
+  ctype<char>::classic_table() throw()
+  {
+    static const ctype_base::mask _S_classic_table[256] =
+    {
+      cntrl /* null */,
+      cntrl /* ^A */,
+      cntrl /* ^B */,
+      cntrl /* ^C */,
+      cntrl /* ^D */,
+      cntrl /* ^E */,
+      cntrl /* ^F */,
+      cntrl /* ^G */,
+      cntrl /* ^H */,
+      ctype_base::mask(space | cntrl | blank) /* tab */,
+      ctype_base::mask(space | cntrl) /* LF */,
+      ctype_base::mask(space | cntrl) /* ^K */,
+      ctype_base::mask(space | cntrl) /* FF */,
+      ctype_base::mask(space | cntrl) /* ^M */,
+      cntrl /* ^N */,
+      cntrl /* ^O */,
+      cntrl /* ^P */,
+      cntrl /* ^Q */,
+      cntrl /* ^R */,
+      cntrl /* ^S */,
+      cntrl /* ^T */,
+      cntrl /* ^U */,
+      cntrl /* ^V */,
+      cntrl /* ^W */,
+      cntrl /* ^X */,
+      cntrl /* ^Y */,
+      cntrl /* ^Z */,
+      cntrl /* esc */,
+      cntrl /* ^\ */,
+      cntrl /* ^] */,
+      cntrl /* ^^ */,
+      cntrl /* ^_ */,
+      ctype_base::mask(space | print | blank) /*   */,
+      ctype_base::mask(punct | print) /* ! */,
+      ctype_base::mask(punct | print) /* " */,
+      ctype_base::mask(punct | print) /* # */,
+      ctype_base::mask(punct | print) /* $ */,
+      ctype_base::mask(punct | print) /* % */,
+      ctype_base::mask(punct | print) /* & */,
+      ctype_base::mask(punct | print) /* ' */,
+      ctype_base::mask(punct | print) /* ( */,
+      ctype_base::mask(punct | print) /* ) */,
+      ctype_base::mask(punct | print) /* * */,
+      ctype_base::mask(punct | print) /* + */,
+      ctype_base::mask(punct | print) /* , */,
+      ctype_base::mask(punct | print) /* - */,
+      ctype_base::mask(punct | print) /* . */,
+      ctype_base::mask(punct | print) /* / */,
+      ctype_base::mask(digit | xdigit | print) /* 0 */,
+      ctype_base::mask(digit | xdigit | print) /* 1 */,
+      ctype_base::mask(digit | xdigit | print) /* 2 */,
+      ctype_base::mask(digit | xdigit | print) /* 3 */,
+      ctype_base::mask(digit | xdigit | print) /* 4 */,
+      ctype_base::mask(digit | xdigit | print) /* 5 */,
+      ctype_base::mask(digit | xdigit | print) /* 6 */,
+      ctype_base::mask(digit | xdigit | print) /* 7 */,
+      ctype_base::mask(digit | xdigit | print) /* 8 */,
+      ctype_base::mask(digit | xdigit | print) /* 9 */,
+      ctype_base::mask(punct | print) /* : */,
+      ctype_base::mask(punct | print) /* ; */,
+      ctype_base::mask(punct | print) /* < */,
+      ctype_base::mask(punct | print) /* = */,
+      ctype_base::mask(punct | print) /* > */,
+      ctype_base::mask(punct | print) /* ? */,
+      ctype_base::mask(punct | print) /* ! */,
+      ctype_base::mask(alpha | upper | xdigit | print) /* A */,
+      ctype_base::mask(alpha | upper | xdigit | print) /* B */,
+      ctype_base::mask(alpha | upper | xdigit | print) /* C */,
+      ctype_base::mask(alpha | upper | xdigit | print) /* D */,
+      ctype_base::mask(alpha | upper | xdigit | print) /* E */,
+      ctype_base::mask(alpha | upper | xdigit | print) /* F */,
+      ctype_base::mask(alpha | upper | print) /* G */,
+      ctype_base::mask(alpha | upper | print) /* H */,
+      ctype_base::mask(alpha | upper | print) /* I */,
+      ctype_base::mask(alpha | upper | print) /* J */,
+      ctype_base::mask(alpha | upper | print) /* K */,
+      ctype_base::mask(alpha | upper | print) /* L */,
+      ctype_base::mask(alpha | upper | print) /* M */,
+      ctype_base::mask(alpha | upper | print) /* N */,
+      ctype_base::mask(alpha | upper | print) /* O */,
+      ctype_base::mask(alpha | upper | print) /* P */,
+      ctype_base::mask(alpha | upper | print) /* Q */,
+      ctype_base::mask(alpha | upper | print) /* R */,
+      ctype_base::mask(alpha | upper | print) /* S */,
+      ctype_base::mask(alpha | upper | print) /* T */,
+      ctype_base::mask(alpha | upper | print) /* U */,
+      ctype_base::mask(alpha | upper | print) /* V */,
+      ctype_base::mask(alpha | upper | print) /* W */,
+      ctype_base::mask(alpha | upper | print) /* X */,
+      ctype_base::mask(alpha | upper | print) /* Y */,
+      ctype_base::mask(alpha | upper | print) /* Z */,
+      ctype_base::mask(punct | print) /* [ */,
+      ctype_base::mask(punct | print) /* \ */,
+      ctype_base::mask(punct | print) /* ] */,
+      ctype_base::mask(punct | print) /* ^ */,
+      ctype_base::mask(punct | print) /* _ */,
+      ctype_base::mask(punct | print) /* ` */,
+      ctype_base::mask(alpha | lower | xdigit | print) /* a */,
+      ctype_base::mask(alpha | lower | xdigit | print) /* b */,
+      ctype_base::mask(alpha | lower | xdigit | print) /* c */,
+      ctype_base::mask(alpha | lower | xdigit | print) /* d */,
+      ctype_base::mask(alpha | lower | xdigit | print) /* e */,
+      ctype_base::mask(alpha | lower | xdigit | print) /* f */,
+      ctype_base::mask(alpha | lower | print) /* g */,
+      ctype_base::mask(alpha | lower | print) /* h */,
+      ctype_base::mask(alpha | lower | print) /* i */,
+      ctype_base::mask(alpha | lower | print) /* j */,
+      ctype_base::mask(alpha | lower | print) /* k */,
+      ctype_base::mask(alpha | lower | print) /* l */,
+      ctype_base::mask(alpha | lower | print) /* m */,
+      ctype_base::mask(alpha | lower | print) /* n */,
+      ctype_base::mask(alpha | lower | print) /* o */,
+      ctype_base::mask(alpha | lower | print) /* p */,
+      ctype_base::mask(alpha | lower | print) /* q */,
+      ctype_base::mask(alpha | lower | print) /* r */,
+      ctype_base::mask(alpha | lower | print) /* s */,
+      ctype_base::mask(alpha | lower | print) /* t */,
+      ctype_base::mask(alpha | lower | print) /* u */,
+      ctype_base::mask(alpha | lower | print) /* v */,
+      ctype_base::mask(alpha | lower | print) /* w */,
+      ctype_base::mask(alpha | lower | print) /* x */,
+      ctype_base::mask(alpha | lower | print) /* y */,
+      ctype_base::mask(alpha | lower | print) /* x */,
+      ctype_base::mask(punct | print) /* { */,
+      ctype_base::mask(punct | print) /* | */,
+      ctype_base::mask(punct | print) /* } */,
+      ctype_base::mask(punct | print) /* ~ */,
+      cntrl /* del (0x7f)*/,
+      /* The next 128 entries are all 0.   */
+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    };
+    return _S_classic_table;
+  }
+
+  ctype<char>::ctype(__c_locale, const mask* __table, bool __del,
+		     size_t __refs)
+  : facet(__refs), _M_del(__table != 0 && __del),
+  _M_toupper(NULL), _M_tolower(NULL),
+  _M_table(__table ? __table : classic_table())
+  {
+    memset(_M_widen, 0, sizeof(_M_widen));
+    _M_widen_ok = 0;
+    memset(_M_narrow, 0, sizeof(_M_narrow));
+    _M_narrow_ok = 0;
+  }
+
+  ctype<char>::ctype(const mask* __table, bool __del, size_t __refs)
+  : facet(__refs), _M_del(__table != 0 && __del),
+  _M_toupper(NULL), _M_tolower(NULL),
+  _M_table(__table ? __table : classic_table())
+  {
+    memset(_M_widen, 0, sizeof(_M_widen));
+    _M_widen_ok = 0;
+    memset(_M_narrow, 0, sizeof(_M_narrow));
+    _M_narrow_ok = 0;
+  }
+
+  char
+  ctype<char>::do_toupper(char __c) const
+  { return (this->is(ctype_base::lower, __c) ? (__c - 'a' + 'A') : __c); }
+
+  const char*
+  ctype<char>::do_toupper(char* __low, const char* __high) const
+  {
+    while (__low < __high)
+      {
+	*__low = this->do_toupper(*__low);
+	++__low;
+      }
+    return __high;
+  }
+
+  char
+  ctype<char>::do_tolower(char __c) const
+  { return (this->is(ctype_base::upper, __c) ? (__c - 'A' + 'a') : __c); }
+
+  const char*
+  ctype<char>::do_tolower(char* __low, const char* __high) const
+  {
+    while (__low < __high)
+      {
+	*__low = this->do_tolower(*__low);
+	++__low;
+      }
+    return __high;
+  }
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
diff --git a/libstdc++-v3/config/os/mint/ctype_inline.h b/libstdc++-v3/config/os/mint/ctype_inline.h
new file mode 100644
index 00000000000..b2d7b9861bf
--- /dev/null
+++ b/libstdc++-v3/config/os/mint/ctype_inline.h
@@ -0,0 +1,75 @@
+// Locale support -*- C++ -*-
+
+// Copyright (C) 2000-2023 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+/** @file bits/ctype_inline.h
+ *  This is an internal header file, included by other library headers.
+ *  Do not attempt to use it directly. @headername{locale}
+ */
+
+//
+// ISO C++ 14882: 22.1  Locales
+//
+
+// ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)
+// functions go in ctype.cc
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  bool
+  ctype<char>::
+  is(mask __m, char __c) const
+  { return (_M_table[static_cast<unsigned char>(__c) ] & __m); }
+
+
+  const char*
+  ctype<char>::
+  is(const char* __low, const char* __high, mask* __vec) const
+  {
+    while (__low < __high)
+      *__vec++ = _M_table[static_cast<unsigned char>(*__low++)];
+    return __high;
+  }
+
+  const char*
+  ctype<char>::
+  scan_is(mask __m, const char* __low, const char* __high) const
+  {
+    while (__low < __high && !this->is(__m, *__low))
+      ++__low;
+    return __low;
+  }
+
+  const char*
+  ctype<char>::
+  scan_not(mask __m, const char* __low, const char* __high) const
+  {
+    while (__low < __high && this->is(__m, *__low) != 0)
+      ++__low;
+    return __low;
+  }
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
diff --git a/libstdc++-v3/config/os/mint/os_defines.h b/libstdc++-v3/config/os/mint/os_defines.h
new file mode 100644
index 00000000000..cf72499370a
--- /dev/null
+++ b/libstdc++-v3/config/os/mint/os_defines.h
@@ -0,0 +1,36 @@
+// Specific definitions for generic platforms  -*- C++ -*-
+
+// Copyright (C) 2000-2023 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+/** @file bits/os_defines.h
+ *  This is an internal header file, included by other library headers.
+ *  Do not attempt to use it directly. @headername{iosfwd}
+ */
+
+#ifndef _GLIBCXX_OS_DEFINES
+#define _GLIBCXX_OS_DEFINES 1
+
+// System-specific #define, typedefs, corrections, etc, go here.  This
+// file will come before all others.
+
+#endif
diff --git a/libstdc++-v3/configure b/libstdc++-v3/configure
index de8390703e2..a21590fb647 100755
--- a/libstdc++-v3/configure
+++ b/libstdc++-v3/configure
@@ -5657,7 +5657,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -5998,6 +5998,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
@@ -9313,7 +9319,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -9750,7 +9756,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -10654,14 +10660,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -10685,7 +10691,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -11319,7 +11325,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -12208,7 +12214,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -12567,7 +12573,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,
         # as there is no search path for DLLs.
         hardcode_libdir_flag_spec_CXX='-L$libdir'
@@ -14340,14 +14346,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -14370,7 +14376,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -14978,7 +14984,7 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu
 
 
 case $host in
-  *-cygwin* | *-mingw*)
+  *-cygwin* | *-mingw* | *-msys*)
     # 'host' will be top-level target in the case of a target lib,
     # we must compare to with_cross_host to decide if this is a native
     # or cross-compiler and select where to install dlls appropriately.
@@ -18134,7 +18140,7 @@ $as_echo "$enable_vtable_verify" >&6; }
   vtv_cygmin=no
   if test $enable_vtable_verify = yes; then
     case ${target_os} in
-      cygwin*|mingw32*)
+      cygwin*|mingw*)
         VTV_CXXFLAGS="-fvtable-verify=std -Wl,-lvtv,-u_vtable_map_vars_start,-u_vtable_map_vars_end"
         VTV_CXXLINKFLAGS="-L${toplevel_builddir}/libvtv/.libs -Wl,--rpath -Wl,${toplevel_builddir}/libvtv/.libs"
         vtv_cygmin=yes
@@ -21834,7 +21840,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -28156,7 +28162,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by GCC" >&5
 $as_echo_n "checking for ld used by GCC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -53764,7 +53770,7 @@ $as_echo "#define HAVE_TLS 1" >>confdefs.h
 	;;
     esac
     ;;
-  *-linux* | *-uclinux* | *-gnu* | *-kfreebsd*-gnu | *-cygwin*)
+  *-linux* | *-uclinux* | *-gnu* | *-kfreebsd*-gnu | *-cygwin* | *-mint*)
 
   # All these tests are for C++; save the language and the compiler flags.
   # The CXXFLAGS thing is suspicious, but based on similar bits previously
@@ -60180,7 +60186,7 @@ _ACEOF
   fi
 
     ;;
-  *-mingw32*)
+  *-mingw*)
 
   # If we're not using GNU ld, then there's no point in even trying these
   # tests.  Check for that first.  We should have already tested for gld
diff --git a/libstdc++-v3/configure.host b/libstdc++-v3/configure.host
index 155a3cdea1b..28369401ccd 100644
--- a/libstdc++-v3/configure.host
+++ b/libstdc++-v3/configure.host
@@ -289,6 +289,10 @@ case "${host_os}" in
     esac
     OPT_LDFLAGS="${OPT_LDFLAGS} \$(lt_host_flags)"
     ;;
+  mint*)
+    SECTION_FLAGS="${SECTION_FLAGS} -D_GNU_SOURCE"
+    os_include_dir="os/mint"
+    ;;
   netbsd*)
     os_include_dir="os/bsd/netbsd"
     ;;
diff --git a/libstdc++-v3/crossconfig.m4 b/libstdc++-v3/crossconfig.m4
index 830a00b5d2a..f7219123ba8 100644
--- a/libstdc++-v3/crossconfig.m4
+++ b/libstdc++-v3/crossconfig.m4
@@ -183,7 +183,7 @@ case "${host}" in
 	;;
     esac
     ;;
-  *-linux* | *-uclinux* | *-gnu* | *-kfreebsd*-gnu | *-cygwin*)
+  *-linux* | *-uclinux* | *-gnu* | *-kfreebsd*-gnu | *-cygwin* | *-mint*)
     GLIBCXX_CHECK_COMPILER_FEATURES
     GLIBCXX_CHECK_LINKER_FEATURES
     GLIBCXX_CHECK_MATH_SUPPORT
@@ -194,7 +194,7 @@ case "${host}" in
     AC_CHECK_FUNCS(aligned_alloc posix_memalign memalign _aligned_malloc)
     AM_ICONV
     ;;
-  *-mingw32*)
+  *-mingw*)
     GLIBCXX_CHECK_LINKER_FEATURES
     GLIBCXX_CHECK_MATH_SUPPORT
     GLIBCXX_CHECK_STDLIB_SUPPORT
diff --git a/libstdc++-v3/include/bits/basic_string.h b/libstdc++-v3/include/bits/basic_string.h
index 6443ba9192a..5ac3bb8fcc1 100644
--- a/libstdc++-v3/include/bits/basic_string.h
+++ b/libstdc++-v3/include/bits/basic_string.h
@@ -6343,13 +6343,13 @@ _GLIBCXX_END_NAMESPACE_CXX11
 
   template<>
     basic_istream<char>&
-    getline(basic_istream<char>& __in, basic_string<char>& __str,
+    getline(basic_istream<char>& ___in, basic_string<char>& __str,
 	    char __delim);
 
 #ifdef _GLIBCXX_USE_WCHAR_T
   template<>
     basic_istream<wchar_t>&
-    getline(basic_istream<wchar_t>& __in, basic_string<wchar_t>& __str,
+    getline(basic_istream<wchar_t>& ___in, basic_string<wchar_t>& __str,
 	    wchar_t __delim);
 #endif  
 
diff --git a/libstdc++-v3/include/bits/basic_string.tcc b/libstdc++-v3/include/bits/basic_string.tcc
index 65ff2445ff0..d001660db69 100644
--- a/libstdc++-v3/include/bits/basic_string.tcc
+++ b/libstdc++-v3/include/bits/basic_string.tcc
@@ -1462,7 +1462,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   // 21.3.7.9 basic_string::getline and operators
   template<typename _CharT, typename _Traits, typename _Alloc>
     basic_istream<_CharT, _Traits>&
-    operator>>(basic_istream<_CharT, _Traits>& __in,
+    operator>>(basic_istream<_CharT, _Traits>& ___in,
 	       basic_string<_CharT, _Traits, _Alloc>& __str)
     {
       typedef basic_istream<_CharT, _Traits>		__istream_type;
@@ -1475,7 +1475,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
       __size_type __extracted = 0;
       typename __ios_base::iostate __err = __ios_base::goodbit;
-      typename __istream_type::sentry __cerb(__in, false);
+      typename __istream_type::sentry __cerb(___in, false);
       if (__cerb)
 	{
 	  __try
@@ -1484,12 +1484,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      __str.erase();
 	      _CharT __buf[128];
 	      __size_type __len = 0;	      
-	      const streamsize __w = __in.width();
+	      const streamsize __w = ___in.width();
 	      const __size_type __n = __w > 0 ? static_cast<__size_type>(__w)
 		                              : __str.max_size();
-	      const __ctype_type& __ct = use_facet<__ctype_type>(__in.getloc());
+	      const __ctype_type& __ct = use_facet<__ctype_type>(___in.getloc());
 	      const __int_type __eof = _Traits::eof();
-	      __int_type __c = __in.rdbuf()->sgetc();
+	      __int_type __c = ___in.rdbuf()->sgetc();
 
 	      while (__extracted < __n
 		     && !_Traits::eq_int_type(__c, __eof)
@@ -1503,17 +1503,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 		    }
 		  __buf[__len++] = _Traits::to_char_type(__c);
 		  ++__extracted;
-		  __c = __in.rdbuf()->snextc();
+		  __c = ___in.rdbuf()->snextc();
 		}
 	      __str.append(__buf, __len);
 
 	      if (_Traits::eq_int_type(__c, __eof))
 		__err |= __ios_base::eofbit;
-	      __in.width(0);
+	      ___in.width(0);
 	    }
 	  __catch(__cxxabiv1::__forced_unwind&)
 	    {
-	      __in._M_setstate(__ios_base::badbit);
+	      ___in._M_setstate(__ios_base::badbit);
 	      __throw_exception_again;
 	    }
 	  __catch(...)
@@ -1521,20 +1521,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      // _GLIBCXX_RESOLVE_LIB_DEFECTS
 	      // 91. Description of operator>> and getline() for string<>
 	      // might cause endless loop
-	      __in._M_setstate(__ios_base::badbit);
+	      ___in._M_setstate(__ios_base::badbit);
 	    }
 	}
       // 211.  operator>>(istream&, string&) doesn't set failbit
       if (!__extracted)
 	__err |= __ios_base::failbit;
       if (__err)
-	__in.setstate(__err);
-      return __in;
+	___in.setstate(__err);
+      return ___in;
     }
 
   template<typename _CharT, typename _Traits, typename _Alloc>
     basic_istream<_CharT, _Traits>&
-    getline(basic_istream<_CharT, _Traits>& __in,
+    getline(basic_istream<_CharT, _Traits>& ___in,
 	    basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim)
     {
       typedef basic_istream<_CharT, _Traits>		__istream_type;
@@ -1546,7 +1546,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       __size_type __extracted = 0;
       const __size_type __n = __str.max_size();
       typename __ios_base::iostate __err = __ios_base::goodbit;
-      typename __istream_type::sentry __cerb(__in, true);
+      typename __istream_type::sentry __cerb(___in, true);
       if (__cerb)
 	{
 	  __try
@@ -1554,7 +1554,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      __str.erase();
 	      const __int_type __idelim = _Traits::to_int_type(__delim);
 	      const __int_type __eof = _Traits::eof();
-	      __int_type __c = __in.rdbuf()->sgetc();
+	      __int_type __c = ___in.rdbuf()->sgetc();
 
 	      while (__extracted < __n
 		     && !_Traits::eq_int_type(__c, __eof)
@@ -1562,7 +1562,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 		{
 		  __str += _Traits::to_char_type(__c);
 		  ++__extracted;
-		  __c = __in.rdbuf()->snextc();
+		  __c = ___in.rdbuf()->snextc();
 		}
 
 	      if (_Traits::eq_int_type(__c, __eof))
@@ -1570,14 +1570,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      else if (_Traits::eq_int_type(__c, __idelim))
 		{
 		  ++__extracted;		  
-		  __in.rdbuf()->sbumpc();
+		  ___in.rdbuf()->sbumpc();
 		}
 	      else
 		__err |= __ios_base::failbit;
 	    }
 	  __catch(__cxxabiv1::__forced_unwind&)
 	    {
-	      __in._M_setstate(__ios_base::badbit);
+	      ___in._M_setstate(__ios_base::badbit);
 	      __throw_exception_again;
 	    }
 	  __catch(...)
@@ -1585,14 +1585,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      // _GLIBCXX_RESOLVE_LIB_DEFECTS
 	      // 91. Description of operator>> and getline() for string<>
 	      // might cause endless loop
-	      __in._M_setstate(__ios_base::badbit);
+	      ___in._M_setstate(__ios_base::badbit);
 	    }
 	}
       if (!__extracted)
 	__err |= __ios_base::failbit;
       if (__err)
-	__in.setstate(__err);
-      return __in;
+	___in.setstate(__err);
+      return ___in;
     }
 
   // Inhibit implicit instantiations for required instantiations,
diff --git a/libstdc++-v3/include/bits/istream.tcc b/libstdc++-v3/include/bits/istream.tcc
index 92df9d126ef..37810bc7c41 100644
--- a/libstdc++-v3/include/bits/istream.tcc
+++ b/libstdc++-v3/include/bits/istream.tcc
@@ -44,21 +44,21 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
   template<typename _CharT, typename _Traits>
     basic_istream<_CharT, _Traits>::sentry::
-    sentry(basic_istream<_CharT, _Traits>& __in, bool __noskip) : _M_ok(false)
+    sentry(basic_istream<_CharT, _Traits>& ___in, bool __noskip) : _M_ok(false)
     {
       ios_base::iostate __err = ios_base::goodbit;
-      if (__in.good())
+      if (___in.good())
 	__try
 	  {
-	    if (__in.tie())
-	      __in.tie()->flush();
-	    if (!__noskip && bool(__in.flags() & ios_base::skipws))
+	    if (___in.tie())
+	      ___in.tie()->flush();
+	    if (!__noskip && bool(___in.flags() & ios_base::skipws))
 	      {
 		const __int_type __eof = traits_type::eof();
-		__streambuf_type* __sb = __in.rdbuf();
+		__streambuf_type* __sb = ___in.rdbuf();
 		__int_type __c = __sb->sgetc();
 
-		const __ctype_type& __ct = __check_facet(__in._M_ctype);
+		const __ctype_type& __ct = __check_facet(___in._M_ctype);
 		while (!traits_type::eq_int_type(__c, __eof)
 		       && __ct.is(ctype_base::space,
 				  traits_type::to_char_type(__c)))
@@ -73,18 +73,18 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	  }
 	__catch(__cxxabiv1::__forced_unwind&)
 	  {
-	    __in._M_setstate(ios_base::badbit);
+	    ___in._M_setstate(ios_base::badbit);
 	    __throw_exception_again;
 	  }
 	__catch(...)
-	  { __in._M_setstate(ios_base::badbit); }
+	  { ___in._M_setstate(ios_base::badbit); }
 
-      if (__in.good() && __err == ios_base::goodbit)
+      if (___in.good() && __err == ios_base::goodbit)
 	_M_ok = true;
       else
 	{
 	  __err |= ios_base::failbit;
-	  __in.setstate(__err);
+	  ___in.setstate(__err);
 	}
     }
 
@@ -928,18 +928,18 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   // 27.6.1.2.3 Character extraction templates
   template<typename _CharT, typename _Traits>
     basic_istream<_CharT, _Traits>&
-    operator>>(basic_istream<_CharT, _Traits>& __in, _CharT& __c)
+    operator>>(basic_istream<_CharT, _Traits>& ___in, _CharT& __c)
     {
       typedef basic_istream<_CharT, _Traits>		__istream_type;
       typedef typename __istream_type::int_type         __int_type;
 
-      typename __istream_type::sentry __cerb(__in, false);
+      typename __istream_type::sentry __cerb(___in, false);
       if (__cerb)
 	{
 	  ios_base::iostate __err = ios_base::goodbit;
 	  __try
 	    {
-	      const __int_type __cb = __in.rdbuf()->sbumpc();
+	      const __int_type __cb = ___in.rdbuf()->sbumpc();
 	      if (!_Traits::eq_int_type(__cb, _Traits::eof()))
 		__c = _Traits::to_char_type(__cb);
 	      else
@@ -947,20 +947,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	    }
 	  __catch(__cxxabiv1::__forced_unwind&)
 	    {
-	      __in._M_setstate(ios_base::badbit);
+	      ___in._M_setstate(ios_base::badbit);
 	      __throw_exception_again;
 	    }
 	  __catch(...)
-	    { __in._M_setstate(ios_base::badbit); }
+	    { ___in._M_setstate(ios_base::badbit); }
 	  if (__err)
-	    __in.setstate(__err);
+	    ___in.setstate(__err);
 	}
-      return __in;
+      return ___in;
     }
 
   template<typename _CharT, typename _Traits>
     basic_istream<_CharT, _Traits>&
-    operator>>(basic_istream<_CharT, _Traits>& __in, _CharT* __s)
+    operator>>(basic_istream<_CharT, _Traits>& ___in, _CharT* __s)
     {
       typedef basic_istream<_CharT, _Traits>		__istream_type;
       typedef basic_streambuf<_CharT, _Traits>          __streambuf_type;
@@ -970,20 +970,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
       streamsize __extracted = 0;
       ios_base::iostate __err = ios_base::goodbit;
-      typename __istream_type::sentry __cerb(__in, false);
+      typename __istream_type::sentry __cerb(___in, false);
       if (__cerb)
 	{
 	  __try
 	    {
 	      // Figure out how many characters to extract.
-	      streamsize __num = __in.width();
+	      streamsize __num = ___in.width();
 	      if (__num <= 0)
 		__num = __gnu_cxx::__numeric_traits<streamsize>::__max;
 
-	      const __ctype_type& __ct = use_facet<__ctype_type>(__in.getloc());
+	      const __ctype_type& __ct = use_facet<__ctype_type>(___in.getloc());
 
 	      const int_type __eof = _Traits::eof();
-	      __streambuf_type* __sb = __in.rdbuf();
+	      __streambuf_type* __sb = ___in.rdbuf();
 	      int_type __c = __sb->sgetc();
 
 	      while (__extracted < __num - 1
@@ -1001,36 +1001,36 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      // _GLIBCXX_RESOLVE_LIB_DEFECTS
 	      // 68.  Extractors for char* should store null at end
 	      *__s = char_type();
-	      __in.width(0);
+	      ___in.width(0);
 	    }
 	  __catch(__cxxabiv1::__forced_unwind&)
 	    {
-	      __in._M_setstate(ios_base::badbit);
+	      ___in._M_setstate(ios_base::badbit);
 	      __throw_exception_again;
 	    }
 	  __catch(...)
-	    { __in._M_setstate(ios_base::badbit); }
+	    { ___in._M_setstate(ios_base::badbit); }
 	}
       if (!__extracted)
 	__err |= ios_base::failbit;
       if (__err)
-	__in.setstate(__err);
-      return __in;
+	___in.setstate(__err);
+      return ___in;
     }
 
   // 27.6.1.4 Standard basic_istream manipulators
   template<typename _CharT, typename _Traits>
     basic_istream<_CharT, _Traits>&
-    ws(basic_istream<_CharT, _Traits>& __in)
+    ws(basic_istream<_CharT, _Traits>& ___in)
     {
       typedef basic_istream<_CharT, _Traits>		__istream_type;
       typedef basic_streambuf<_CharT, _Traits>          __streambuf_type;
       typedef typename __istream_type::int_type		__int_type;
       typedef ctype<_CharT>				__ctype_type;
 
-      const __ctype_type& __ct = use_facet<__ctype_type>(__in.getloc());
+      const __ctype_type& __ct = use_facet<__ctype_type>(___in.getloc());
       const __int_type __eof = _Traits::eof();
-      __streambuf_type* __sb = __in.rdbuf();
+      __streambuf_type* __sb = ___in.rdbuf();
       __int_type __c = __sb->sgetc();
 
       while (!_Traits::eq_int_type(__c, __eof)
@@ -1038,8 +1038,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	__c = __sb->snextc();
 
        if (_Traits::eq_int_type(__c, __eof))
-	 __in.setstate(ios_base::eofbit);
-      return __in;
+	 ___in.setstate(ios_base::eofbit);
+      return ___in;
     }
 
   // Inhibit implicit instantiations for required instantiations,
diff --git a/libstdc++-v3/include/bits/locale_conv.h b/libstdc++-v3/include/bits/locale_conv.h
index b8f77dcaca9..bf868037216 100644
--- a/libstdc++-v3/include/bits/locale_conv.h
+++ b/libstdc++-v3/include/bits/locale_conv.h
@@ -249,10 +249,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11
       {
 	if (!_M_with_cvtstate)
 	  _M_state = state_type();
-	wide_string __out{ _M_wide_err_string.get_allocator() };
-	if (__str_codecvt_in(__first, __last, __out, *_M_cvt, _M_state,
+	wide_string ___out{ _M_wide_err_string.get_allocator() };
+	if (__str_codecvt_in(__first, __last, ___out, *_M_cvt, _M_state,
 			     _M_count))
-	  return __out;
+	  return ___out;
 	if (_M_with_strings)
 	  return _M_wide_err_string;
 	__throw_range_error("wstring_convert::from_bytes");
@@ -285,10 +285,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11
       {
 	if (!_M_with_cvtstate)
 	  _M_state = state_type();
-	byte_string __out{ _M_byte_err_string.get_allocator() };
-	if (__str_codecvt_out(__first, __last, __out, *_M_cvt, _M_state,
+	byte_string ___out{ _M_byte_err_string.get_allocator() };
+	if (__str_codecvt_out(__first, __last, ___out, *_M_cvt, _M_state,
 			      _M_count))
-	  return __out;
+	  return ___out;
 	if (_M_with_strings)
 	  return _M_byte_err_string;
 	__throw_range_error("wstring_convert::to_bytes");
@@ -378,13 +378,13 @@ _GLIBCXX_END_NAMESPACE_CXX11
       { return _M_buf && _M_conv_put() && !_M_buf->pubsync() ? 0 : -1; }
 
       typename _Wide_streambuf::int_type
-      overflow(typename _Wide_streambuf::int_type __out)
+      overflow(typename _Wide_streambuf::int_type ___out)
       {
 	if (!_M_buf || !_M_conv_put())
 	  return _Tr::eof();
-	else if (!_Tr::eq_int_type(__out, _Tr::eof()))
-	  return this->sputc(__out);
-	return _Tr::not_eof(__out);
+	else if (!_Tr::eq_int_type(___out, _Tr::eof()))
+	  return this->sputc(___out);
+	return _Tr::not_eof(___out);
       }
 
       typename _Wide_streambuf::int_type
diff --git a/libstdc++-v3/include/bits/locale_facets.h b/libstdc++-v3/include/bits/locale_facets.h
index 1ad0eb5ab66..d7365de7533 100644
--- a/libstdc++-v3/include/bits/locale_facets.h
+++ b/libstdc++-v3/include/bits/locale_facets.h
@@ -1984,7 +1984,7 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL
        *  except if the value is 1, sets @a v to true, if the value is 0, sets
        *  @a v to false, and otherwise set err to ios_base::failbit.
        *
-       *  @param  __in  Start of input stream.
+       *  @param  ___in  Start of input stream.
        *  @param  __end  End of input stream.
        *  @param  __io  Source of locale and flags.
        *  @param  __err  Error flags to set.
@@ -1992,9 +1992,9 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL
        *  @return  Iterator after reading.
       */
       iter_type
-      get(iter_type __in, iter_type __end, ios_base& __io,
+      get(iter_type ___in, iter_type __end, ios_base& __io,
 	  ios_base::iostate& __err, bool& __v) const
-      { return this->do_get(__in, __end, __io, __err, __v); }
+      { return this->do_get(___in, __end, __io, __err, __v); }
 
       //@{
       /**
@@ -2021,7 +2021,7 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL
        *  Otherwise, sets err to ios_base::failbit and leaves @a v unaltered.
        *  Sets err to ios_base::eofbit if the stream is emptied.
        *
-       *  @param  __in  Start of input stream.
+       *  @param  ___in  Start of input stream.
        *  @param  __end  End of input stream.
        *  @param  __io  Source of locale and flags.
        *  @param  __err  Error flags to set.
@@ -2029,35 +2029,35 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL
        *  @return  Iterator after reading.
       */
       iter_type
-      get(iter_type __in, iter_type __end, ios_base& __io,
+      get(iter_type ___in, iter_type __end, ios_base& __io,
 	  ios_base::iostate& __err, long& __v) const
-      { return this->do_get(__in, __end, __io, __err, __v); }
+      { return this->do_get(___in, __end, __io, __err, __v); }
 
       iter_type
-      get(iter_type __in, iter_type __end, ios_base& __io,
+      get(iter_type ___in, iter_type __end, ios_base& __io,
 	  ios_base::iostate& __err, unsigned short& __v) const
-      { return this->do_get(__in, __end, __io, __err, __v); }
+      { return this->do_get(___in, __end, __io, __err, __v); }
 
       iter_type
-      get(iter_type __in, iter_type __end, ios_base& __io,
+      get(iter_type ___in, iter_type __end, ios_base& __io,
 	  ios_base::iostate& __err, unsigned int& __v)   const
-      { return this->do_get(__in, __end, __io, __err, __v); }
+      { return this->do_get(___in, __end, __io, __err, __v); }
 
       iter_type
-      get(iter_type __in, iter_type __end, ios_base& __io,
+      get(iter_type ___in, iter_type __end, ios_base& __io,
 	  ios_base::iostate& __err, unsigned long& __v)  const
-      { return this->do_get(__in, __end, __io, __err, __v); }
+      { return this->do_get(___in, __end, __io, __err, __v); }
 
 #ifdef _GLIBCXX_USE_LONG_LONG
       iter_type
-      get(iter_type __in, iter_type __end, ios_base& __io,
+      get(iter_type ___in, iter_type __end, ios_base& __io,
 	  ios_base::iostate& __err, long long& __v) const
-      { return this->do_get(__in, __end, __io, __err, __v); }
+      { return this->do_get(___in, __end, __io, __err, __v); }
 
       iter_type
-      get(iter_type __in, iter_type __end, ios_base& __io,
+      get(iter_type ___in, iter_type __end, ios_base& __io,
 	  ios_base::iostate& __err, unsigned long long& __v)  const
-      { return this->do_get(__in, __end, __io, __err, __v); }
+      { return this->do_get(___in, __end, __io, __err, __v); }
 #endif
       //@}
 
@@ -2081,7 +2081,7 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL
        *  Otherwise, sets err to ios_base::failbit and leaves @a v unaltered.
        *  Sets err to ios_base::eofbit if the stream is emptied.
        *
-       *  @param  __in  Start of input stream.
+       *  @param  ___in  Start of input stream.
        *  @param  __end  End of input stream.
        *  @param  __io  Source of locale and flags.
        *  @param  __err  Error flags to set.
@@ -2089,19 +2089,19 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL
        *  @return  Iterator after reading.
       */
       iter_type
-      get(iter_type __in, iter_type __end, ios_base& __io,
+      get(iter_type ___in, iter_type __end, ios_base& __io,
 	  ios_base::iostate& __err, float& __v) const
-      { return this->do_get(__in, __end, __io, __err, __v); }
+      { return this->do_get(___in, __end, __io, __err, __v); }
 
       iter_type
-      get(iter_type __in, iter_type __end, ios_base& __io,
+      get(iter_type ___in, iter_type __end, ios_base& __io,
 	  ios_base::iostate& __err, double& __v) const
-      { return this->do_get(__in, __end, __io, __err, __v); }
+      { return this->do_get(___in, __end, __io, __err, __v); }
 
       iter_type
-      get(iter_type __in, iter_type __end, ios_base& __io,
+      get(iter_type ___in, iter_type __end, ios_base& __io,
 	  ios_base::iostate& __err, long double& __v) const
-      { return this->do_get(__in, __end, __io, __err, __v); }
+      { return this->do_get(___in, __end, __io, __err, __v); }
       //@}
 
       /**
@@ -2124,7 +2124,7 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL
        *  Otherwise, sets err to ios_base::failbit and leaves @a v unaltered.
        *  Sets err to ios_base::eofbit if the stream is emptied.
        *
-       *  @param  __in  Start of input stream.
+       *  @param  ___in  Start of input stream.
        *  @param  __end  End of input stream.
        *  @param  __io  Source of locale and flags.
        *  @param  __err  Error flags to set.
@@ -2132,9 +2132,9 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL
        *  @return  Iterator after reading.
       */
       iter_type
-      get(iter_type __in, iter_type __end, ios_base& __io,
+      get(iter_type ___in, iter_type __end, ios_base& __io,
 	  ios_base::iostate& __err, void*& __v) const
-      { return this->do_get(__in, __end, __io, __err, __v); }
+      { return this->do_get(___in, __end, __io, __err, __v); }
 
     protected:
       /// Destructor.
diff --git a/libstdc++-v3/include/bits/ostream.tcc b/libstdc++-v3/include/bits/ostream.tcc
index e96bad81210..40f37fd265b 100644
--- a/libstdc++-v3/include/bits/ostream.tcc
+++ b/libstdc++-v3/include/bits/ostream.tcc
@@ -318,10 +318,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
   template<typename _CharT, typename _Traits>
     basic_ostream<_CharT, _Traits>&
-    operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s)
+    operator<<(basic_ostream<_CharT, _Traits>& ___out, const char* __s)
     {
       if (!__s)
-	__out.setstate(ios_base::badbit);
+	___out.setstate(ios_base::badbit);
       else
 	{
 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
@@ -339,18 +339,18 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
 	      _CharT *__ws = __pg.__get();
 	      for (size_t  __i = 0; __i < __clen; ++__i)
-		__ws[__i] = __out.widen(__s[__i]);
-	      __ostream_insert(__out, __ws, __clen);
+		__ws[__i] = ___out.widen(__s[__i]);
+	      __ostream_insert(___out, __ws, __clen);
 	    }
 	  __catch(__cxxabiv1::__forced_unwind&)
 	    {
-	      __out._M_setstate(ios_base::badbit);
+	      ___out._M_setstate(ios_base::badbit);
 	      __throw_exception_again;
 	    }
 	  __catch(...)
-	    { __out._M_setstate(ios_base::badbit); }
+	    { ___out._M_setstate(ios_base::badbit); }
 	}
-      return __out;
+      return ___out;
     }
 
   // Inhibit implicit instantiations for required instantiations,
diff --git a/libstdc++-v3/include/bits/ostream_insert.h b/libstdc++-v3/include/bits/ostream_insert.h
index 8c9b941a167..4a6f1ea8dfa 100644
--- a/libstdc++-v3/include/bits/ostream_insert.h
+++ b/libstdc++-v3/include/bits/ostream_insert.h
@@ -41,31 +41,31 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
   template<typename _CharT, typename _Traits>
     inline void
-    __ostream_write(basic_ostream<_CharT, _Traits>& __out,
+    __ostream_write(basic_ostream<_CharT, _Traits>& ___out,
 		    const _CharT* __s, streamsize __n)
     {
       typedef basic_ostream<_CharT, _Traits>       __ostream_type;      
       typedef typename __ostream_type::ios_base    __ios_base;
 
-      const streamsize __put = __out.rdbuf()->sputn(__s, __n);
+      const streamsize __put = ___out.rdbuf()->sputn(__s, __n);
       if (__put != __n)
-	__out.setstate(__ios_base::badbit);
+	___out.setstate(__ios_base::badbit);
     }
 
   template<typename _CharT, typename _Traits>
     inline void
-    __ostream_fill(basic_ostream<_CharT, _Traits>& __out, streamsize __n)
+    __ostream_fill(basic_ostream<_CharT, _Traits>& ___out, streamsize __n)
     {
       typedef basic_ostream<_CharT, _Traits>       __ostream_type;      
       typedef typename __ostream_type::ios_base    __ios_base;
 
-      const _CharT __c = __out.fill();
+      const _CharT __c = ___out.fill();
       for (; __n > 0; --__n)
 	{
-	  const typename _Traits::int_type __put = __out.rdbuf()->sputc(__c);
+	  const typename _Traits::int_type __put = ___out.rdbuf()->sputc(__c);
 	  if (_Traits::eq_int_type(__put, _Traits::eof()))
 	    {
-	      __out.setstate(__ios_base::badbit);
+	      ___out.setstate(__ios_base::badbit);
 	      break;
 	    }
 	}
@@ -73,43 +73,43 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
   template<typename _CharT, typename _Traits>
     basic_ostream<_CharT, _Traits>&
-    __ostream_insert(basic_ostream<_CharT, _Traits>& __out,
+    __ostream_insert(basic_ostream<_CharT, _Traits>& ___out,
 		     const _CharT* __s, streamsize __n)
     {
       typedef basic_ostream<_CharT, _Traits>       __ostream_type;
       typedef typename __ostream_type::ios_base    __ios_base;
 
-      typename __ostream_type::sentry __cerb(__out);
+      typename __ostream_type::sentry __cerb(___out);
       if (__cerb)
 	{
 	  __try
 	    {
-	      const streamsize __w = __out.width();
+	      const streamsize __w = ___out.width();
 	      if (__w > __n)
 		{
-		  const bool __left = ((__out.flags()
+		  const bool __left = ((___out.flags()
 					& __ios_base::adjustfield)
 				       == __ios_base::left);
 		  if (!__left)
-		    __ostream_fill(__out, __w - __n);
-		  if (__out.good())
-		    __ostream_write(__out, __s, __n);
-		  if (__left && __out.good())
-		    __ostream_fill(__out, __w - __n);
+		    __ostream_fill(___out, __w - __n);
+		  if (___out.good())
+		    __ostream_write(___out, __s, __n);
+		  if (__left && ___out.good())
+		    __ostream_fill(___out, __w - __n);
 		}
 	      else
-		__ostream_write(__out, __s, __n);
-	      __out.width(0);
+		__ostream_write(___out, __s, __n);
+	      ___out.width(0);
 	    }
 	  __catch(__cxxabiv1::__forced_unwind&)
 	    {
-	      __out._M_setstate(__ios_base::badbit);
+	      ___out._M_setstate(__ios_base::badbit);
 	      __throw_exception_again;
 	    }
 	  __catch(...)
-	    { __out._M_setstate(__ios_base::badbit); }
+	    { ___out._M_setstate(__ios_base::badbit); }
 	}
-      return __out;
+      return ___out;
     }
 
   // Inhibit implicit instantiations for required instantiations,
diff --git a/libstdc++-v3/include/bits/regex.h b/libstdc++-v3/include/bits/regex.h
index c8e6bfcaea4..46e42a8a84f 100644
--- a/libstdc++-v3/include/bits/regex.h
+++ b/libstdc++-v3/include/bits/regex.h
@@ -1819,7 +1819,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11
        */
       template<typename _Out_iter>
 	_Out_iter
-	format(_Out_iter __out, const char_type* __fmt_first,
+	format(_Out_iter ___out, const char_type* __fmt_first,
 	       const char_type* __fmt_last,
 	       match_flag_type __flags = regex_constants::format_default) const;
 
@@ -1828,10 +1828,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11
        */
       template<typename _Out_iter, typename _St, typename _Sa>
 	_Out_iter
-	format(_Out_iter __out, const basic_string<char_type, _St, _Sa>& __fmt,
+	format(_Out_iter ___out, const basic_string<char_type, _St, _Sa>& __fmt,
 	       match_flag_type __flags = regex_constants::format_default) const
 	{
-	  return format(__out, __fmt.data(), __fmt.data() + __fmt.size(),
+	  return format(___out, __fmt.data(), __fmt.data() + __fmt.size(),
 			__flags);
 	}
 
@@ -2319,46 +2319,46 @@ _GLIBCXX_END_NAMESPACE_CXX11
   /**
    * @brief Search for a regular expression within a range for multiple times,
    and replace the matched parts through filling a format string.
-   * @param __out   [OUT] The output iterator.
+   * @param ___out   [OUT] The output iterator.
    * @param __first [IN]  The start of the string to search.
    * @param __last  [IN]  One-past-the-end of the string to search.
    * @param __e     [IN]  The regular expression to search for.
    * @param __fmt   [IN]  The format string.
    * @param __flags [IN]  Search and replace policy flags.
    *
-   * @returns __out
+   * @returns ___out
    * @throws an exception of type regex_error.
    */
   template<typename _Out_iter, typename _Bi_iter,
 	   typename _Rx_traits, typename _Ch_type,
 	   typename _St, typename _Sa>
     inline _Out_iter
-    regex_replace(_Out_iter __out, _Bi_iter __first, _Bi_iter __last,
+    regex_replace(_Out_iter ___out, _Bi_iter __first, _Bi_iter __last,
 		  const basic_regex<_Ch_type, _Rx_traits>& __e,
 		  const basic_string<_Ch_type, _St, _Sa>& __fmt,
 		  regex_constants::match_flag_type __flags
 		  = regex_constants::match_default)
     {
-      return regex_replace(__out, __first, __last, __e, __fmt.c_str(), __flags);
+      return regex_replace(___out, __first, __last, __e, __fmt.c_str(), __flags);
     }
 
   /**
    * @brief Search for a regular expression within a range for multiple times,
    and replace the matched parts through filling a format C-string.
-   * @param __out   [OUT] The output iterator.
+   * @param ___out   [OUT] The output iterator.
    * @param __first [IN]  The start of the string to search.
    * @param __last  [IN]  One-past-the-end of the string to search.
    * @param __e     [IN]  The regular expression to search for.
    * @param __fmt   [IN]  The format C-string.
    * @param __flags [IN]  Search and replace policy flags.
    *
-   * @returns __out
+   * @returns ___out
    * @throws an exception of type regex_error.
    */
   template<typename _Out_iter, typename _Bi_iter,
 	   typename _Rx_traits, typename _Ch_type>
     _Out_iter
-    regex_replace(_Out_iter __out, _Bi_iter __first, _Bi_iter __last,
+    regex_replace(_Out_iter ___out, _Bi_iter __first, _Bi_iter __last,
 		  const basic_regex<_Ch_type, _Rx_traits>& __e,
 		  const _Ch_type* __fmt,
 		  regex_constants::match_flag_type __flags
diff --git a/libstdc++-v3/include/bits/regex.tcc b/libstdc++-v3/include/bits/regex.tcc
index dc32a49dcd9..2370994ed37 100644
--- a/libstdc++-v3/include/bits/regex.tcc
+++ b/libstdc++-v3/include/bits/regex.tcc
@@ -357,7 +357,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   template<typename _Bi_iter, typename _Alloc>
   template<typename _Out_iter>
     _Out_iter match_results<_Bi_iter, _Alloc>::
-    format(_Out_iter __out,
+    format(_Out_iter ___out,
 	   const match_results<_Bi_iter, _Alloc>::char_type* __fmt_first,
 	   const match_results<_Bi_iter, _Alloc>::char_type* __fmt_last,
 	   match_flag_type __flags) const
@@ -372,7 +372,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	{
 	  auto& __sub = (*this)[__idx];
 	  if (__sub.matched)
-	    __out = std::copy(__sub.first, __sub.second, __out);
+	    ___out = std::copy(__sub.first, __sub.second, ___out);
 	};
 
       if (__flags & regex_constants::format_sed)
@@ -389,10 +389,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 		    && __fctyp.is(__ctype_type::digit, *__fmt_first))
 		  __output(__traits.value(*__fmt_first++, 10));
 		else
-		  *__out++ = '\\';
+		  *___out++ = '\\';
 	      }
 	    else
-	      *__out++ = *__fmt_first++;
+	      *___out++ = *__fmt_first++;
 	}
       else
 	{
@@ -402,7 +402,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      if (__next == __fmt_last)
 		break;
 
-	      __out = std::copy(__fmt_first, __next, __out);
+	      ___out = std::copy(__fmt_first, __next, ___out);
 
 	      auto __eat = [&](char __ch) -> bool
 		{
@@ -415,22 +415,22 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 		};
 
 	      if (++__next == __fmt_last)
-		*__out++ = '$';
+		*___out++ = '$';
 	      else if (__eat('$'))
-		*__out++ = '$';
+		*___out++ = '$';
 	      else if (__eat('&'))
 		__output(0);
 	      else if (__eat('`'))
 		{
 		  auto& __sub = _M_prefix();
 		  if (__sub.matched)
-		    __out = std::copy(__sub.first, __sub.second, __out);
+		    ___out = std::copy(__sub.first, __sub.second, ___out);
 		}
 	      else if (__eat('\''))
 		{
 		  auto& __sub = _M_suffix();
 		  if (__sub.matched)
-		    __out = std::copy(__sub.first, __sub.second, __out);
+		    ___out = std::copy(__sub.first, __sub.second, ___out);
 		}
 	      else if (__fctyp.is(__ctype_type::digit, *__next))
 		{
@@ -445,18 +445,18 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 		    __output(__num);
 		}
 	      else
-		*__out++ = '$';
+		*___out++ = '$';
 	      __fmt_first = __next;
 	    }
-	  __out = std::copy(__fmt_first, __fmt_last, __out);
+	  ___out = std::copy(__fmt_first, __fmt_last, ___out);
 	}
-      return __out;
+      return ___out;
     }
 
   template<typename _Out_iter, typename _Bi_iter,
 	   typename _Rx_traits, typename _Ch_type>
     _Out_iter
-    regex_replace(_Out_iter __out, _Bi_iter __first, _Bi_iter __last,
+    regex_replace(_Out_iter ___out, _Bi_iter __first, _Bi_iter __last,
 		  const basic_regex<_Ch_type, _Rx_traits>& __e,
 		  const _Ch_type* __fmt,
 		  regex_constants::match_flag_type __flags)
@@ -467,7 +467,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       if (__i == __end)
 	{
 	  if (!(__flags & regex_constants::format_no_copy))
-	    __out = std::copy(__first, __last, __out);
+	    ___out = std::copy(__first, __last, ___out);
 	}
       else
 	{
@@ -476,17 +476,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	  for (; __i != __end; ++__i)
 	    {
 	      if (!(__flags & regex_constants::format_no_copy))
-		__out = std::copy(__i->prefix().first, __i->prefix().second,
-				  __out);
-	      __out = __i->format(__out, __fmt, __fmt + __len, __flags);
+		___out = std::copy(__i->prefix().first, __i->prefix().second,
+				  ___out);
+	      ___out = __i->format(___out, __fmt, __fmt + __len, __flags);
 	      __last = __i->suffix();
 	      if (__flags & regex_constants::format_first_only)
 		break;
 	    }
 	  if (!(__flags & regex_constants::format_no_copy))
-	    __out = std::copy(__last.first, __last.second, __out);
+	    ___out = std::copy(__last.first, __last.second, ___out);
 	}
-      return __out;
+      return ___out;
     }
 
   template<typename _Bi_iter,
diff --git a/libstdc++-v3/include/bits/stl_algo.h b/libstdc++-v3/include/bits/stl_algo.h
index 97370ed534e..624d90bc386 100644
--- a/libstdc++-v3/include/bits/stl_algo.h
+++ b/libstdc++-v3/include/bits/stl_algo.h
@@ -5711,7 +5711,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO
            typename _Size, typename _UniformRandomBitGenerator>
     _RandomAccessIterator
     __sample(_InputIterator __first, _InputIterator __last, input_iterator_tag,
-	     _RandomAccessIterator __out, random_access_iterator_tag,
+	     _RandomAccessIterator ___out, random_access_iterator_tag,
 	     _Size __n, _UniformRandomBitGenerator&& __g)
     {
       using __distrib_type = uniform_int_distribution<_Size>;
@@ -5720,7 +5720,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO
       _Size __sample_sz = 0;
       while (__first != __last && __sample_sz != __n)
 	{
-	  __out[__sample_sz++] = *__first;
+	  ___out[__sample_sz++] = *__first;
 	  ++__first;
 	}
       for (auto __pop_sz = __sample_sz; __first != __last;
@@ -5728,9 +5728,9 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO
 	{
 	  const auto __k = __d(__g, __param_type{0, __pop_sz});
 	  if (__k < __n)
-	    __out[__k] = *__first;
+	    ___out[__k] = *__first;
 	}
-      return __out + __sample_sz;
+      return ___out + __sample_sz;
     }
 
   /// Selection sampling algorithm.
@@ -5739,7 +5739,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO
     _OutputIterator
     __sample(_ForwardIterator __first, _ForwardIterator __last,
 	     forward_iterator_tag,
-	     _OutputIterator __out, _Cat,
+	     _OutputIterator ___out, _Cat,
 	     _Size __n, _UniformRandomBitGenerator&& __g)
     {
       using __distrib_type = uniform_int_distribution<_Size>;
@@ -5768,7 +5768,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO
 	      --__unsampled_sz;
 	      if (__p.first < __n)
 		{
-		  *__out++ = *__first;
+		  *___out++ = *__first;
 		  --__n;
 		}
 
@@ -5779,7 +5779,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO
 	      --__unsampled_sz;
 	      if (__p.second < __n)
 		{
-		  *__out++ = *__first;
+		  *___out++ = *__first;
 		  --__n;
 		}
 
@@ -5792,10 +5792,10 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO
       for (; __n != 0; ++__first)
 	if (__d(__g, __param_type{0, --__unsampled_sz}) < __n)
 	  {
-	    *__out++ = *__first;
+	    *___out++ = *__first;
 	    --__n;
 	  }
-      return __out;
+      return ___out;
     }
 
 #if __cplusplus > 201402L
@@ -5805,7 +5805,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO
            typename _Distance, typename _UniformRandomBitGenerator>
     _SampleIterator
     sample(_PopulationIterator __first, _PopulationIterator __last,
-	   _SampleIterator __out, _Distance __n,
+	   _SampleIterator ___out, _Distance __n,
 	   _UniformRandomBitGenerator&& __g)
     {
       using __pop_cat = typename
@@ -5824,7 +5824,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO
 
       typename iterator_traits<_PopulationIterator>::difference_type __d = __n;
       return _GLIBCXX_STD_A::
-	__sample(__first, __last, __pop_cat{}, __out, __samp_cat{}, __d,
+	__sample(__first, __last, __pop_cat{}, ___out, __samp_cat{}, __d,
 		 std::forward<_UniformRandomBitGenerator>(__g));
     }
 #endif // C++17
diff --git a/libstdc++-v3/include/experimental/algorithm b/libstdc++-v3/include/experimental/algorithm
index f7c9fbe0229..989c2a21fc9 100644
--- a/libstdc++-v3/include/experimental/algorithm
+++ b/libstdc++-v3/include/experimental/algorithm
@@ -57,7 +57,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
            typename _Distance, typename _UniformRandomNumberGenerator>
     _SampleIterator
     sample(_PopulationIterator __first, _PopulationIterator __last,
-	   _SampleIterator __out, _Distance __n,
+	   _SampleIterator ___out, _Distance __n,
 	   _UniformRandomNumberGenerator&& __g)
     {
       using __pop_cat = typename
@@ -75,7 +75,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 		    "sample size must be an integer type");
 
       typename iterator_traits<_PopulationIterator>::difference_type __d = __n;
-      return std::__sample(__first, __last, __pop_cat{}, __out, __samp_cat{},
+      return std::__sample(__first, __last, __pop_cat{}, ___out, __samp_cat{},
 			   __d,
 			   std::forward<_UniformRandomNumberGenerator>(__g));
     }
diff --git a/libstdc++-v3/include/ext/algorithm b/libstdc++-v3/include/ext/algorithm
index 823456cf618..0ac7e7406a6 100644
--- a/libstdc++-v3/include/ext/algorithm
+++ b/libstdc++-v3/include/ext/algorithm
@@ -265,7 +265,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	   typename _Distance>
     _OutputIterator
     random_sample_n(_ForwardIterator __first, _ForwardIterator __last,
-                    _OutputIterator __out, const _Distance __n)
+                    _OutputIterator ___out, const _Distance __n)
     {
       // concept requirements
       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
@@ -280,14 +280,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	{
 	  if ((std::rand() % __remaining) < __m)
 	    {
-	      *__out = *__first;
-	      ++__out;
+	      *___out = *__first;
+	      ++___out;
 	      --__m;
 	    }
 	  --__remaining;
 	  ++__first;
 	}
-      return __out;
+      return ___out;
     }
 
   /**
@@ -299,7 +299,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	   typename _Distance, typename _RandomNumberGenerator>
     _OutputIterator
     random_sample_n(_ForwardIterator __first, _ForwardIterator __last,
-                   _OutputIterator __out, const _Distance __n,
+                   _OutputIterator ___out, const _Distance __n,
 		   _RandomNumberGenerator& __rand)
     {
       // concept requirements
@@ -317,44 +317,44 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	{
 	  if (__rand(__remaining) < __m)
 	    {
-	      *__out = *__first;
-	      ++__out;
+	      *___out = *__first;
+	      ++___out;
 	      --__m;
 	    }
 	  --__remaining;
 	  ++__first;
 	}
-      return __out;
+      return ___out;
     }
 
   template<typename _InputIterator, typename _RandomAccessIterator,
 	   typename _Distance>
     _RandomAccessIterator
     __random_sample(_InputIterator __first, _InputIterator __last,
-		    _RandomAccessIterator __out,
+		    _RandomAccessIterator ___out,
 		    const _Distance __n)
     {
       _Distance __m = 0;
       _Distance __t = __n;
       for ( ; __first != __last && __m < __n; ++__m, ++__first)
-	__out[__m] = *__first;
+	___out[__m] = *__first;
 
       while (__first != __last)
 	{
 	  ++__t;
 	  _Distance __M = std::rand() % (__t);
 	  if (__M < __n)
-	    __out[__M] = *__first;
+	    ___out[__M] = *__first;
 	  ++__first;
 	}
-      return __out + __m;
+      return ___out + __m;
     }
 
   template<typename _InputIterator, typename _RandomAccessIterator,
 	   typename _RandomNumberGenerator, typename _Distance>
     _RandomAccessIterator
     __random_sample(_InputIterator __first, _InputIterator __last,
-		    _RandomAccessIterator __out,
+		    _RandomAccessIterator ___out,
 		    _RandomNumberGenerator& __rand,
 		    const _Distance __n)
     {
@@ -365,17 +365,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       _Distance __m = 0;
       _Distance __t = __n;
       for ( ; __first != __last && __m < __n; ++__m, ++__first)
-	__out[__m] = *__first;
+	___out[__m] = *__first;
 
       while (__first != __last)
 	{
 	  ++__t;
 	  _Distance __M = __rand(__t);
 	  if (__M < __n)
-	    __out[__M] = *__first;
+	    ___out[__M] = *__first;
 	  ++__first;
 	}
-      return __out + __m;
+      return ___out + __m;
     }
 
   /**
diff --git a/libstdc++-v3/include/ext/pb_ds/detail/debug_map_base.hpp b/libstdc++-v3/include/ext/pb_ds/detail/debug_map_base.hpp
index 976cf877cd7..3a53eed733d 100644
--- a/libstdc++-v3/include/ext/pb_ds/detail/debug_map_base.hpp
+++ b/libstdc++-v3/include/ext/pb_ds/detail/debug_map_base.hpp
@@ -57,9 +57,9 @@ namespace __gnu_pbds
     // Need std::pair ostream extractor.
     template<typename _CharT, typename _Traits, typename _Tp1, typename _Tp2>
     inline std::basic_ostream<_CharT, _Traits>&
-    operator<<(std::basic_ostream<_CharT, _Traits>& __out,
+    operator<<(std::basic_ostream<_CharT, _Traits>& ___out,
 	       const std::pair<_Tp1, _Tp2>& p)
-    { return (__out << '(' << p.first << ',' << p.second << ')'); }
+    { return (___out << '(' << p.first << ',' << p.second << ')'); }
 
 #define PB_DS_CLASS_T_DEC \
     template<typename Key, typename Eq_Fn, typename Const_Key_Reference>
diff --git a/libstdc++-v3/include/ext/random.tcc b/libstdc++-v3/include/ext/random.tcc
index 5aa443fd800..2ddb7feb39e 100644
--- a/libstdc++-v3/include/ext/random.tcc
+++ b/libstdc++-v3/include/ext/random.tcc
@@ -207,38 +207,38 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   namespace {
 
     template<size_t __shift>
-      inline void __rshift(uint32_t *__out, const uint32_t *__in)
+      inline void __rshift(uint32_t *___out, const uint32_t *___in)
       {
-	uint64_t __th = ((static_cast<uint64_t>(__in[3]) << 32)
-			 | static_cast<uint64_t>(__in[2]));
-	uint64_t __tl = ((static_cast<uint64_t>(__in[1]) << 32)
-			 | static_cast<uint64_t>(__in[0]));
+	uint64_t __th = ((static_cast<uint64_t>(___in[3]) << 32)
+			 | static_cast<uint64_t>(___in[2]));
+	uint64_t __tl = ((static_cast<uint64_t>(___in[1]) << 32)
+			 | static_cast<uint64_t>(___in[0]));
 
 	uint64_t __oh = __th >> (__shift * 8);
 	uint64_t __ol = __tl >> (__shift * 8);
 	__ol |= __th << (64 - __shift * 8);
-	__out[1] = static_cast<uint32_t>(__ol >> 32);
-	__out[0] = static_cast<uint32_t>(__ol);
-	__out[3] = static_cast<uint32_t>(__oh >> 32);
-	__out[2] = static_cast<uint32_t>(__oh);
+	___out[1] = static_cast<uint32_t>(__ol >> 32);
+	___out[0] = static_cast<uint32_t>(__ol);
+	___out[3] = static_cast<uint32_t>(__oh >> 32);
+	___out[2] = static_cast<uint32_t>(__oh);
       }
 
 
     template<size_t __shift>
-      inline void __lshift(uint32_t *__out, const uint32_t *__in)
+      inline void __lshift(uint32_t *___out, const uint32_t *___in)
       {
-	uint64_t __th = ((static_cast<uint64_t>(__in[3]) << 32)
-			 | static_cast<uint64_t>(__in[2]));
-	uint64_t __tl = ((static_cast<uint64_t>(__in[1]) << 32)
-			 | static_cast<uint64_t>(__in[0]));
+	uint64_t __th = ((static_cast<uint64_t>(___in[3]) << 32)
+			 | static_cast<uint64_t>(___in[2]));
+	uint64_t __tl = ((static_cast<uint64_t>(___in[1]) << 32)
+			 | static_cast<uint64_t>(___in[0]));
 
 	uint64_t __oh = __th << (__shift * 8);
 	uint64_t __ol = __tl << (__shift * 8);
 	__oh |= __tl >> (64 - __shift * 8);
-	__out[1] = static_cast<uint32_t>(__ol >> 32);
-	__out[0] = static_cast<uint32_t>(__ol);
-	__out[3] = static_cast<uint32_t>(__oh >> 32);
-	__out[2] = static_cast<uint32_t>(__oh);
+	___out[1] = static_cast<uint32_t>(__ol >> 32);
+	___out[0] = static_cast<uint32_t>(__ol);
+	___out[3] = static_cast<uint32_t>(__oh >> 32);
+	___out[2] = static_cast<uint32_t>(__oh);
       }
 
 
diff --git a/libstdc++-v3/include/ext/vstring.tcc b/libstdc++-v3/include/ext/vstring.tcc
index ae5be38cd99..b56d5be345b 100644
--- a/libstdc++-v3/include/ext/vstring.tcc
+++ b/libstdc++-v3/include/ext/vstring.tcc
@@ -549,7 +549,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   template<typename _CharT, typename _Traits, typename _Alloc,
            template <typename, typename, typename> class _Base>
     basic_istream<_CharT, _Traits>&
-    operator>>(basic_istream<_CharT, _Traits>& __in,
+    operator>>(basic_istream<_CharT, _Traits>& ___in,
 	       __gnu_cxx::__versa_string<_CharT, _Traits,
 	                                 _Alloc, _Base>& __str)
     {
@@ -564,7 +564,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
       __size_type __extracted = 0;
       typename __ios_base::iostate __err = __ios_base::goodbit;
-      typename __istream_type::sentry __cerb(__in, false);
+      typename __istream_type::sentry __cerb(___in, false);
       if (__cerb)
 	{
 	  __try
@@ -573,12 +573,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      __str.erase();
 	      _CharT __buf[128];
 	      __size_type __len = 0;
-	      const streamsize __w = __in.width();
+	      const streamsize __w = ___in.width();
 	      const __size_type __n = __w > 0 ? static_cast<__size_type>(__w)
 		                              : __str.max_size();
-	      const __ctype_type& __ct = use_facet<__ctype_type>(__in.getloc());
+	      const __ctype_type& __ct = use_facet<__ctype_type>(___in.getloc());
 	      const __int_type __eof = _Traits::eof();
-	      __int_type __c = __in.rdbuf()->sgetc();
+	      __int_type __c = ___in.rdbuf()->sgetc();
 
 	      while (__extracted < __n
 		     && !_Traits::eq_int_type(__c, __eof)
@@ -592,17 +592,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 		    }
 		  __buf[__len++] = _Traits::to_char_type(__c);
 		  ++__extracted;
-		  __c = __in.rdbuf()->snextc();
+		  __c = ___in.rdbuf()->snextc();
 		}
 	      __str.append(__buf, __len);
 
 	      if (_Traits::eq_int_type(__c, __eof))
 		__err |= __ios_base::eofbit;
-	      __in.width(0);
+	      ___in.width(0);
 	    }
 	  __catch(__cxxabiv1::__forced_unwind&)
 	    {
-	      __in._M_setstate(__ios_base::badbit);
+	      ___in._M_setstate(__ios_base::badbit);
 	      __throw_exception_again;
 	    }
 	  __catch(...)
@@ -610,21 +610,21 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      // _GLIBCXX_RESOLVE_LIB_DEFECTS
 	      // 91. Description of operator>> and getline() for string<>
 	      // might cause endless loop
-	      __in._M_setstate(__ios_base::badbit);
+	      ___in._M_setstate(__ios_base::badbit);
 	    }
 	}
       // 211.  operator>>(istream&, string&) doesn't set failbit
       if (!__extracted)
 	__err |= __ios_base::failbit;
       if (__err)
-	__in.setstate(__err);
-      return __in;
+	___in.setstate(__err);
+      return ___in;
     }      
 
   template<typename _CharT, typename _Traits, typename _Alloc,
            template <typename, typename, typename> class _Base>
     basic_istream<_CharT, _Traits>&
-    getline(basic_istream<_CharT, _Traits>& __in,
+    getline(basic_istream<_CharT, _Traits>& ___in,
 	    __gnu_cxx::__versa_string<_CharT, _Traits, _Alloc, _Base>& __str,
 	    _CharT __delim)
     {
@@ -638,7 +638,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       __size_type __extracted = 0;
       const __size_type __n = __str.max_size();
       typename __ios_base::iostate __err = __ios_base::goodbit;
-      typename __istream_type::sentry __cerb(__in, true);
+      typename __istream_type::sentry __cerb(___in, true);
       if (__cerb)
 	{
 	  __try
@@ -649,7 +649,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      __size_type __len = 0;
 	      const __int_type __idelim = _Traits::to_int_type(__delim);
 	      const __int_type __eof = _Traits::eof();
-	      __int_type __c = __in.rdbuf()->sgetc();
+	      __int_type __c = ___in.rdbuf()->sgetc();
 
 	      while (__extracted < __n
 		     && !_Traits::eq_int_type(__c, __eof)
@@ -662,7 +662,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 		    }
 		  __buf[__len++] = _Traits::to_char_type(__c);
 		  ++__extracted;
-		  __c = __in.rdbuf()->snextc();
+		  __c = ___in.rdbuf()->snextc();
 		}
 	      __str.append(__buf, __len);
 
@@ -671,14 +671,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      else if (_Traits::eq_int_type(__c, __idelim))
 		{
 		  ++__extracted;		  
-		  __in.rdbuf()->sbumpc();
+		  ___in.rdbuf()->sbumpc();
 		}
 	      else
 		__err |= __ios_base::failbit;
 	    }
 	  __catch(__cxxabiv1::__forced_unwind&)
 	    {
-	      __in._M_setstate(__ios_base::badbit);
+	      ___in._M_setstate(__ios_base::badbit);
 	      __throw_exception_again;
 	    }
 	  __catch(...)
@@ -686,14 +686,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      // _GLIBCXX_RESOLVE_LIB_DEFECTS
 	      // 91. Description of operator>> and getline() for string<>
 	      // might cause endless loop
-	      __in._M_setstate(__ios_base::badbit);
+	      ___in._M_setstate(__ios_base::badbit);
 	    }
 	}
       if (!__extracted)
 	__err |= __ios_base::failbit;
       if (__err)
-	__in.setstate(__err);
-      return __in;
+	___in.setstate(__err);
+      return ___in;
     }      
 
 _GLIBCXX_END_NAMESPACE_VERSION
diff --git a/libstdc++-v3/include/parallel/algo.h b/libstdc++-v3/include/parallel/algo.h
index f6d0b2ad3c2..b0386615606 100644
--- a/libstdc++-v3/include/parallel/algo.h
+++ b/libstdc++-v3/include/parallel/algo.h
@@ -289,67 +289,67 @@ namespace __parallel
   // Sequential fallback
   template<typename _IIter, typename _OutputIterator>
     inline _OutputIterator
-    unique_copy(_IIter __begin1, _IIter __end1, _OutputIterator __out,
+    unique_copy(_IIter __begin1, _IIter __end1, _OutputIterator ___out,
 		__gnu_parallel::sequential_tag)
-    { return _GLIBCXX_STD_A::unique_copy(__begin1, __end1, __out); }
+    { return _GLIBCXX_STD_A::unique_copy(__begin1, __end1, ___out); }
 
   // Sequential fallback
   template<typename _IIter, typename _OutputIterator,
 	   typename _Predicate>
     inline _OutputIterator
-    unique_copy(_IIter __begin1, _IIter __end1, _OutputIterator __out,
+    unique_copy(_IIter __begin1, _IIter __end1, _OutputIterator ___out,
 		_Predicate __pred, __gnu_parallel::sequential_tag)
-    { return _GLIBCXX_STD_A::unique_copy(__begin1, __end1, __out, __pred); }
+    { return _GLIBCXX_STD_A::unique_copy(__begin1, __end1, ___out, __pred); }
 
   // Sequential fallback for input iterator case
   template<typename _IIter, typename _OutputIterator,
 	   typename _Predicate, typename _IteratorTag1, typename _IteratorTag2>
     inline _OutputIterator
     __unique_copy_switch(_IIter __begin, _IIter __last,
-		       _OutputIterator __out, _Predicate __pred,
+		       _OutputIterator ___out, _Predicate __pred,
 		       _IteratorTag1, _IteratorTag2)
-    { return _GLIBCXX_STD_A::unique_copy(__begin, __last, __out, __pred); }
+    { return _GLIBCXX_STD_A::unique_copy(__begin, __last, ___out, __pred); }
 
   // Parallel unique_copy for random access iterators
   template<typename _RAIter, typename RandomAccessOutputIterator,
 	   typename _Predicate>
     RandomAccessOutputIterator
     __unique_copy_switch(_RAIter __begin, _RAIter __last,
-			 RandomAccessOutputIterator __out, _Predicate __pred,
+			 RandomAccessOutputIterator ___out, _Predicate __pred,
 			 random_access_iterator_tag, random_access_iterator_tag)
     {
       if (_GLIBCXX_PARALLEL_CONDITION(
 	    static_cast<__gnu_parallel::_SequenceIndex>(__last - __begin)
 	    > __gnu_parallel::_Settings::get().unique_copy_minimal_n))
 	return __gnu_parallel::__parallel_unique_copy(
-		 __begin, __last, __out, __pred);
+		 __begin, __last, ___out, __pred);
       else
-	return _GLIBCXX_STD_A::unique_copy(__begin, __last, __out, __pred);
+	return _GLIBCXX_STD_A::unique_copy(__begin, __last, ___out, __pred);
     }
 
   // Public interface
   template<typename _IIter, typename _OutputIterator>
     inline _OutputIterator
-    unique_copy(_IIter __begin1, _IIter __end1, _OutputIterator __out)
+    unique_copy(_IIter __begin1, _IIter __end1, _OutputIterator ___out)
     {
       typedef typename std::iterator_traits<_IIter>::value_type _ValueType;
 
       return __unique_copy_switch(
-	       __begin1, __end1, __out, equal_to<_ValueType>(),
+	       __begin1, __end1, ___out, equal_to<_ValueType>(),
 	       std::__iterator_category(__begin1),
-	       std::__iterator_category(__out));
+	       std::__iterator_category(___out));
     }
 
   // Public interface
   template<typename _IIter, typename _OutputIterator, typename _Predicate>
     inline _OutputIterator
-    unique_copy(_IIter __begin1, _IIter __end1, _OutputIterator __out,
+    unique_copy(_IIter __begin1, _IIter __end1, _OutputIterator ___out,
 		_Predicate __pred)
     {
       return __unique_copy_switch(
-	       __begin1, __end1, __out, __pred,
+	       __begin1, __end1, ___out, __pred,
 	       std::__iterator_category(__begin1),
-	       std::__iterator_category(__out));
+	       std::__iterator_category(___out));
     }
 
   // Sequential fallback
@@ -358,9 +358,9 @@ namespace __parallel
     inline _OutputIterator
     set_union(_IIter1 __begin1, _IIter1 __end1,
 	      _IIter2 __begin2, _IIter2 __end2,
-	      _OutputIterator __out, __gnu_parallel::sequential_tag)
+	      _OutputIterator ___out, __gnu_parallel::sequential_tag)
     { return _GLIBCXX_STD_A::set_union(
-	       __begin1, __end1, __begin2, __end2, __out); }
+	       __begin1, __end1, __begin2, __end2, ___out); }
 
   // Sequential fallback
   template<typename _IIter1, typename _IIter2,
@@ -368,10 +368,10 @@ namespace __parallel
     inline _OutputIterator
     set_union(_IIter1 __begin1, _IIter1 __end1,
 	      _IIter2 __begin2, _IIter2 __end2,
-	      _OutputIterator __out, _Predicate __pred,
+	      _OutputIterator ___out, _Predicate __pred,
 	      __gnu_parallel::sequential_tag)
     { return _GLIBCXX_STD_A::set_union(__begin1, __end1,
-				       __begin2, __end2, __out, __pred); }
+				       __begin2, __end2, ___out, __pred); }
 
   // Sequential fallback for input iterator case
   template<typename _IIter1, typename _IIter2, typename _Predicate,
@@ -412,17 +412,17 @@ namespace __parallel
 	   typename _OutputIterator>
     inline _OutputIterator
     set_union(_IIter1 __begin1, _IIter1 __end1,
-	      _IIter2 __begin2, _IIter2 __end2, _OutputIterator __out)
+	      _IIter2 __begin2, _IIter2 __end2, _OutputIterator ___out)
     {
       typedef typename std::iterator_traits<_IIter1>::value_type _ValueType1;
       typedef typename std::iterator_traits<_IIter2>::value_type _ValueType2;
 
       return __set_union_switch(
-	       __begin1, __end1, __begin2, __end2, __out,
+	       __begin1, __end1, __begin2, __end2, ___out,
 	       __gnu_parallel::_Less<_ValueType1, _ValueType2>(),
 	       std::__iterator_category(__begin1),
 	       std::__iterator_category(__begin2),
-	       std::__iterator_category(__out));
+	       std::__iterator_category(___out));
     }
 
   // Public interface
@@ -431,13 +431,13 @@ namespace __parallel
     inline _OutputIterator
     set_union(_IIter1 __begin1, _IIter1 __end1,
 	      _IIter2 __begin2, _IIter2 __end2,
-	      _OutputIterator __out, _Predicate __pred)
+	      _OutputIterator ___out, _Predicate __pred)
     {
       return __set_union_switch(
-	       __begin1, __end1, __begin2, __end2, __out, __pred,
+	       __begin1, __end1, __begin2, __end2, ___out, __pred,
 	       std::__iterator_category(__begin1),
 	       std::__iterator_category(__begin2),
-	       std::__iterator_category(__out));
+	       std::__iterator_category(___out));
     }
 
   // Sequential fallback.
@@ -446,9 +446,9 @@ namespace __parallel
     inline _OutputIterator
     set_intersection(_IIter1 __begin1, _IIter1 __end1,
 		     _IIter2 __begin2, _IIter2 __end2,
-		     _OutputIterator __out, __gnu_parallel::sequential_tag)
+		     _OutputIterator ___out, __gnu_parallel::sequential_tag)
     { return _GLIBCXX_STD_A::set_intersection(__begin1, __end1,
-					      __begin2, __end2, __out); }
+					      __begin2, __end2, ___out); }
 
   // Sequential fallback.
   template<typename _IIter1, typename _IIter2,
@@ -456,10 +456,10 @@ namespace __parallel
     inline _OutputIterator
     set_intersection(_IIter1 __begin1, _IIter1 __end1,
 		     _IIter2 __begin2, _IIter2 __end2,
-		     _OutputIterator __out, _Predicate __pred,
+		     _OutputIterator ___out, _Predicate __pred,
 		     __gnu_parallel::sequential_tag)
     { return _GLIBCXX_STD_A::set_intersection(
-	       __begin1, __end1, __begin2, __end2, __out, __pred); }
+	       __begin1, __end1, __begin2, __end2, ___out, __pred); }
 
   // Sequential fallback for input iterator case
   template<typename _IIter1, typename _IIter2,
@@ -506,17 +506,17 @@ namespace __parallel
     inline _OutputIterator
     set_intersection(_IIter1 __begin1, _IIter1 __end1,
 		     _IIter2 __begin2, _IIter2 __end2,
-		     _OutputIterator __out)
+		     _OutputIterator ___out)
     {
       typedef typename std::iterator_traits<_IIter1>::value_type _ValueType1;
       typedef typename std::iterator_traits<_IIter2>::value_type _ValueType2;
 
       return __set_intersection_switch(
-	       __begin1, __end1, __begin2, __end2, __out,
+	       __begin1, __end1, __begin2, __end2, ___out,
 	       __gnu_parallel::_Less<_ValueType1, _ValueType2>(),
 	       std::__iterator_category(__begin1),
 	       std::__iterator_category(__begin2),
-	       std::__iterator_category(__out));
+	       std::__iterator_category(___out));
     }
 
   template<typename _IIter1, typename _IIter2,
@@ -524,13 +524,13 @@ namespace __parallel
     inline _OutputIterator
     set_intersection(_IIter1 __begin1, _IIter1 __end1,
 		     _IIter2 __begin2, _IIter2 __end2,
-		     _OutputIterator __out, _Predicate __pred)
+		     _OutputIterator ___out, _Predicate __pred)
     {
       return __set_intersection_switch(
-	       __begin1, __end1, __begin2, __end2, __out, __pred,
+	       __begin1, __end1, __begin2, __end2, ___out, __pred,
 	       std::__iterator_category(__begin1),
 	       std::__iterator_category(__begin2),
-	       std::__iterator_category(__out));
+	       std::__iterator_category(___out));
     }
 
   // Sequential fallback
@@ -539,10 +539,10 @@ namespace __parallel
     inline _OutputIterator
     set_symmetric_difference(_IIter1 __begin1, _IIter1 __end1,
 			     _IIter2 __begin2, _IIter2 __end2,
-			     _OutputIterator __out,
+			     _OutputIterator ___out,
 			     __gnu_parallel::sequential_tag)
     { return _GLIBCXX_STD_A::set_symmetric_difference(
-	       __begin1, __end1, __begin2, __end2, __out); }
+	       __begin1, __end1, __begin2, __end2, ___out); }
 
   // Sequential fallback
   template<typename _IIter1, typename _IIter2,
@@ -550,10 +550,10 @@ namespace __parallel
     inline _OutputIterator
     set_symmetric_difference(_IIter1 __begin1, _IIter1 __end1,
 			     _IIter2 __begin2, _IIter2 __end2,
-			     _OutputIterator __out, _Predicate __pred,
+			     _OutputIterator ___out, _Predicate __pred,
 			     __gnu_parallel::sequential_tag)
     { return _GLIBCXX_STD_A::set_symmetric_difference(
-	       __begin1, __end1, __begin2, __end2, __out, __pred); }
+	       __begin1, __end1, __begin2, __end2, ___out, __pred); }
 
   // Sequential fallback for input iterator case
   template<typename _IIter1, typename _IIter2,
@@ -600,17 +600,17 @@ namespace __parallel
     inline _OutputIterator
     set_symmetric_difference(_IIter1 __begin1, _IIter1 __end1,
 			     _IIter2 __begin2, _IIter2 __end2,
-			     _OutputIterator __out)
+			     _OutputIterator ___out)
     {
       typedef typename std::iterator_traits<_IIter1>::value_type _ValueType1;
       typedef typename std::iterator_traits<_IIter2>::value_type _ValueType2;
 
       return __set_symmetric_difference_switch(
-	       __begin1, __end1, __begin2, __end2, __out,
+	       __begin1, __end1, __begin2, __end2, ___out,
 	       __gnu_parallel::_Less<_ValueType1, _ValueType2>(),
 	       std::__iterator_category(__begin1),
 	       std::__iterator_category(__begin2),
-	       std::__iterator_category(__out));
+	       std::__iterator_category(___out));
     }
 
   // Public interface.
@@ -619,13 +619,13 @@ namespace __parallel
     inline _OutputIterator
     set_symmetric_difference(_IIter1 __begin1, _IIter1 __end1,
 			     _IIter2 __begin2, _IIter2 __end2,
-			     _OutputIterator __out, _Predicate __pred)
+			     _OutputIterator ___out, _Predicate __pred)
     {
       return __set_symmetric_difference_switch(
-	       __begin1, __end1, __begin2, __end2, __out, __pred,
+	       __begin1, __end1, __begin2, __end2, ___out, __pred,
 	       std::__iterator_category(__begin1),
 	       std::__iterator_category(__begin2),
-	       std::__iterator_category(__out));
+	       std::__iterator_category(___out));
     }
 
   // Sequential fallback.
@@ -634,9 +634,9 @@ namespace __parallel
     inline _OutputIterator
     set_difference(_IIter1 __begin1, _IIter1 __end1,
 		   _IIter2 __begin2, _IIter2 __end2,
-		   _OutputIterator __out, __gnu_parallel::sequential_tag)
+		   _OutputIterator ___out, __gnu_parallel::sequential_tag)
     { return _GLIBCXX_STD_A::set_difference(
-	       __begin1,__end1, __begin2, __end2, __out); }
+	       __begin1,__end1, __begin2, __end2, ___out); }
 
   // Sequential fallback.
   template<typename _IIter1, typename _IIter2,
@@ -644,10 +644,10 @@ namespace __parallel
     inline _OutputIterator
     set_difference(_IIter1 __begin1, _IIter1 __end1,
 		   _IIter2 __begin2, _IIter2 __end2,
-		   _OutputIterator __out, _Predicate __pred,
+		   _OutputIterator ___out, _Predicate __pred,
 		   __gnu_parallel::sequential_tag)
     { return _GLIBCXX_STD_A::set_difference(__begin1, __end1,
-					    __begin2, __end2, __out, __pred); }
+					    __begin2, __end2, ___out, __pred); }
 
   // Sequential fallback for input iterator case.
   template<typename _IIter1, typename _IIter2, typename _Predicate,
@@ -692,17 +692,17 @@ namespace __parallel
     inline _OutputIterator
     set_difference(_IIter1 __begin1, _IIter1 __end1,
 		   _IIter2 __begin2, _IIter2 __end2,
-		   _OutputIterator __out)
+		   _OutputIterator ___out)
     {
       typedef typename std::iterator_traits<_IIter1>::value_type _ValueType1;
       typedef typename std::iterator_traits<_IIter2>::value_type _ValueType2;
 
       return __set_difference_switch(
-	       __begin1, __end1, __begin2, __end2, __out,
+	       __begin1, __end1, __begin2, __end2, ___out,
 	       __gnu_parallel::_Less<_ValueType1, _ValueType2>(),
 	       std::__iterator_category(__begin1),
 	       std::__iterator_category(__begin2),
-	       std::__iterator_category(__out));
+	       std::__iterator_category(___out));
     }
 
   // Public interface
@@ -711,13 +711,13 @@ namespace __parallel
     inline _OutputIterator
     set_difference(_IIter1 __begin1, _IIter1 __end1,
 		   _IIter2 __begin2, _IIter2 __end2,
-		   _OutputIterator __out, _Predicate __pred)
+		   _OutputIterator ___out, _Predicate __pred)
     {
       return __set_difference_switch(
-	       __begin1, __end1, __begin2, __end2, __out, __pred,
+	       __begin1, __end1, __begin2, __end2, ___out, __pred,
 	       std::__iterator_category(__begin1),
 	       std::__iterator_category(__begin2),
-	       std::__iterator_category(__out));
+	       std::__iterator_category(___out));
     }
 
   // Sequential fallback
diff --git a/libstdc++-v3/include/parallel/multiway_merge.h b/libstdc++-v3/include/parallel/multiway_merge.h
index ccd8b6e9390..650d68252bb 100644
--- a/libstdc++-v3/include/parallel/multiway_merge.h
+++ b/libstdc++-v3/include/parallel/multiway_merge.h
@@ -1372,7 +1372,7 @@ namespace __gnu_parallel
    *     for (int __j = 0; __i < 10; ++__j)
    *       sequences[__i][__j] = __j;
    *
-   *   int __out[33];
+   *   int ___out[33];
    *   std::vector<std::pair<int*> > seqs;
    *   for (int __i = 0; __i < 10; ++__i)
    *     { seqs.push(std::make_pair<int*>(sequences[__i],
@@ -1733,7 +1733,7 @@ namespace __gnu_parallel
    *     for (int __j = 0; __i < 11; ++__j)
    *       sequences[__i][__j] = __j; // __last one is sentinel!
    *
-   *   int __out[33];
+   *   int ___out[33];
    *   std::vector<std::pair<int*> > seqs;
    *   for (int __i = 0; __i < 10; ++__i)
    *     { seqs.push(std::make_pair<int*>(sequences[__i],
diff --git a/libstdc++-v3/include/parallel/set_operations.h b/libstdc++-v3/include/parallel/set_operations.h
index b9a72b92626..9aeaf550649 100644
--- a/libstdc++-v3/include/parallel/set_operations.h
+++ b/libstdc++-v3/include/parallel/set_operations.h
@@ -130,12 +130,12 @@ namespace __gnu_parallel
       }
 
       _OutputIterator
-      __first_empty(_IIter __c, _IIter __d, _OutputIterator __out) const
-      { return std::copy(__c, __d, __out); }
+      __first_empty(_IIter __c, _IIter __d, _OutputIterator ___out) const
+      { return std::copy(__c, __d, ___out); }
 
       _OutputIterator
-      __second_empty(_IIter __a, _IIter __b, _OutputIterator __out) const
-      { return std::copy(__a, __b, __out); }
+      __second_empty(_IIter __a, _IIter __b, _OutputIterator ___out) const
+      { return std::copy(__a, __b, ___out); }
     };
 
 
@@ -198,12 +198,12 @@ namespace __gnu_parallel
       }
 
       _OutputIterator
-      __first_empty(_IIter, _IIter, _OutputIterator __out) const
-      { return __out; }
+      __first_empty(_IIter, _IIter, _OutputIterator ___out) const
+      { return ___out; }
 
       _OutputIterator
-      __second_empty(_IIter __a, _IIter __b, _OutputIterator __out) const
-      { return std::copy(__a, __b, __out); }
+      __second_empty(_IIter __a, _IIter __b, _OutputIterator ___out) const
+      { return std::copy(__a, __b, ___out); }
     };
 
 
@@ -265,12 +265,12 @@ namespace __gnu_parallel
       }
 
       _OutputIterator
-      __first_empty(_IIter, _IIter, _OutputIterator __out) const
-      { return __out; }
+      __first_empty(_IIter, _IIter, _OutputIterator ___out) const
+      { return ___out; }
 
       _OutputIterator
-      __second_empty(_IIter, _IIter, _OutputIterator __out) const
-      { return __out; }
+      __second_empty(_IIter, _IIter, _OutputIterator ___out) const
+      { return ___out; }
     };
 
   template<class _IIter, class _OutputIterator, class _Compare>
@@ -335,12 +335,12 @@ namespace __gnu_parallel
       }
 
       _OutputIterator
-      __first_empty(_IIter __c, _IIter __d, _OutputIterator __out) const
-      { return std::copy(__c, __d, __out); }
+      __first_empty(_IIter __c, _IIter __d, _OutputIterator ___out) const
+      { return std::copy(__c, __d, ___out); }
 
       _OutputIterator
-      __second_empty(_IIter __a, _IIter __b, _OutputIterator __out) const
-      { return std::copy(__a, __b, __out); }
+      __second_empty(_IIter __a, _IIter __b, _OutputIterator ___out) const
+      { return std::copy(__a, __b, ___out); }
     };
 
   template<typename _IIter,
diff --git a/libstdc++-v3/include/parallel/unique_copy.h b/libstdc++-v3/include/parallel/unique_copy.h
index 8e7b5a74daa..1d3ab42277d 100644
--- a/libstdc++-v3/include/parallel/unique_copy.h
+++ b/libstdc++-v3/include/parallel/unique_copy.h
@@ -85,7 +85,7 @@ namespace __gnu_parallel
 	// Check for length without duplicates
 	// Needed for position in output
 	_DifferenceType __i = 0;
-	_OutputIterator __out = __result;
+	_OutputIterator ___out = __result;
 
 	if (__iam == 0)
           {
@@ -93,7 +93,7 @@ namespace __gnu_parallel
             __end = __borders[__iam + 1];
 
             ++__i;
-            *__out++ = *__first;
+            *___out++ = *__first;
 
             for (_IIter __iter = __first + __begin; __iter < __first + __end;
 		 ++__iter)
@@ -101,7 +101,7 @@ namespace __gnu_parallel
         	if (!__binary_pred(*__iter, *(__iter - 1)))
                   {
                     ++__i;
-                    *__out++ = *__iter;
+                    *___out++ = *__iter;
                   }
               }
           }
diff --git a/libstdc++-v3/include/std/istream b/libstdc++-v3/include/std/istream
index 233cc6b0145..00a7e7c9e1b 100644
--- a/libstdc++-v3/include/std/istream
+++ b/libstdc++-v3/include/std/istream
@@ -738,7 +738,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   //@{
   /**
    *  @brief  Character extractors
-   *  @param  __in  An input stream.
+   *  @param  ___in  An input stream.
    *  @param  __c  A character reference.
    *  @return  in
    *
@@ -749,25 +749,25 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   */
   template<typename _CharT, typename _Traits>
     basic_istream<_CharT, _Traits>&
-    operator>>(basic_istream<_CharT, _Traits>& __in, _CharT& __c);
+    operator>>(basic_istream<_CharT, _Traits>& ___in, _CharT& __c);
 
   template<class _Traits>
     inline basic_istream<char, _Traits>&
-    operator>>(basic_istream<char, _Traits>& __in, unsigned char& __c)
-    { return (__in >> reinterpret_cast<char&>(__c)); }
+    operator>>(basic_istream<char, _Traits>& ___in, unsigned char& __c)
+    { return (___in >> reinterpret_cast<char&>(__c)); }
 
   template<class _Traits>
     inline basic_istream<char, _Traits>&
-    operator>>(basic_istream<char, _Traits>& __in, signed char& __c)
-    { return (__in >> reinterpret_cast<char&>(__c)); }
+    operator>>(basic_istream<char, _Traits>& ___in, signed char& __c)
+    { return (___in >> reinterpret_cast<char&>(__c)); }
   //@}
 
   //@{
   /**
    *  @brief  Character string extractors
-   *  @param  __in  An input stream.
+   *  @param  ___in  An input stream.
    *  @param  __s  A pointer to a character array.
-   *  @return  __in
+   *  @return  ___in
    *
    *  Behaves like one of the formatted arithmetic extractors described in
    *  std::basic_istream.  After constructing a sentry object with good
@@ -791,22 +791,22 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   */
   template<typename _CharT, typename _Traits>
     basic_istream<_CharT, _Traits>&
-    operator>>(basic_istream<_CharT, _Traits>& __in, _CharT* __s);
+    operator>>(basic_istream<_CharT, _Traits>& ___in, _CharT* __s);
 
   // Explicit specialization declaration, defined in src/istream.cc.
   template<>
     basic_istream<char>&
-    operator>>(basic_istream<char>& __in, char* __s);
+    operator>>(basic_istream<char>& ___in, char* __s);
 
   template<class _Traits>
     inline basic_istream<char, _Traits>&
-    operator>>(basic_istream<char, _Traits>& __in, unsigned char* __s)
-    { return (__in >> reinterpret_cast<char*>(__s)); }
+    operator>>(basic_istream<char, _Traits>& ___in, unsigned char* __s)
+    { return (___in >> reinterpret_cast<char*>(__s)); }
 
   template<class _Traits>
     inline basic_istream<char, _Traits>&
-    operator>>(basic_istream<char, _Traits>& __in, signed char* __s)
-    { return (__in >> reinterpret_cast<char*>(__s)); }
+    operator>>(basic_istream<char, _Traits>& ___in, signed char* __s)
+    { return (___in >> reinterpret_cast<char*>(__s)); }
   //@}
 
   /**
diff --git a/libstdc++-v3/include/std/ostream b/libstdc++-v3/include/std/ostream
index f7cab03c841..a4ac5693f93 100644
--- a/libstdc++-v3/include/std/ostream
+++ b/libstdc++-v3/include/std/ostream
@@ -479,14 +479,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   //@{
   /**
    *  @brief  Character inserters
-   *  @param  __out  An output stream.
+   *  @param  ___out  An output stream.
    *  @param  __c  A character.
    *  @return  out
    *
    *  Behaves like one of the formatted arithmetic inserters described in
    *  std::basic_ostream.  After constructing a sentry object with good
    *  status, this function inserts a single character and any required
-   *  padding (as determined by [22.2.2.2.2]).  @c __out.width(0) is then
+   *  padding (as determined by [22.2.2.2.2]).  @c ___out.width(0) is then
    *  called.
    *
    *  If @p __c is of type @c char and the character type of the stream is not
@@ -494,36 +494,36 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   */
   template<typename _CharT, typename _Traits>
     inline basic_ostream<_CharT, _Traits>&
-    operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
-    { return __ostream_insert(__out, &__c, 1); }
+    operator<<(basic_ostream<_CharT, _Traits>& ___out, _CharT __c)
+    { return __ostream_insert(___out, &__c, 1); }
 
   template<typename _CharT, typename _Traits>
     inline basic_ostream<_CharT, _Traits>&
-    operator<<(basic_ostream<_CharT, _Traits>& __out, char __c)
-    { return (__out << __out.widen(__c)); }
+    operator<<(basic_ostream<_CharT, _Traits>& ___out, char __c)
+    { return (___out << ___out.widen(__c)); }
 
   // Specialization
   template <class _Traits>
     inline basic_ostream<char, _Traits>&
-    operator<<(basic_ostream<char, _Traits>& __out, char __c)
-    { return __ostream_insert(__out, &__c, 1); }
+    operator<<(basic_ostream<char, _Traits>& ___out, char __c)
+    { return __ostream_insert(___out, &__c, 1); }
 
   // Signed and unsigned
   template<class _Traits>
     inline basic_ostream<char, _Traits>&
-    operator<<(basic_ostream<char, _Traits>& __out, signed char __c)
-    { return (__out << static_cast<char>(__c)); }
+    operator<<(basic_ostream<char, _Traits>& ___out, signed char __c)
+    { return (___out << static_cast<char>(__c)); }
 
   template<class _Traits>
     inline basic_ostream<char, _Traits>&
-    operator<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
-    { return (__out << static_cast<char>(__c)); }
+    operator<<(basic_ostream<char, _Traits>& ___out, unsigned char __c)
+    { return (___out << static_cast<char>(__c)); }
   //@}
 
   //@{
   /**
    *  @brief  String inserters
-   *  @param  __out  An output stream.
+   *  @param  ___out  An output stream.
    *  @param  __s  A character string.
    *  @return  out
    *  @pre  @p __s must be a non-NULL pointer
@@ -532,47 +532,47 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
    *  std::basic_ostream.  After constructing a sentry object with good
    *  status, this function inserts @c traits::length(__s) characters starting
    *  at @p __s, widened if necessary, followed by any required padding (as
-   *  determined by [22.2.2.2.2]).  @c __out.width(0) is then called.
+   *  determined by [22.2.2.2.2]).  @c ___out.width(0) is then called.
   */
   template<typename _CharT, typename _Traits>
     inline basic_ostream<_CharT, _Traits>&
-    operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
+    operator<<(basic_ostream<_CharT, _Traits>& ___out, const _CharT* __s)
     {
       if (!__s)
-	__out.setstate(ios_base::badbit);
+	___out.setstate(ios_base::badbit);
       else
-	__ostream_insert(__out, __s,
+	__ostream_insert(___out, __s,
 			 static_cast<streamsize>(_Traits::length(__s)));
-      return __out;
+      return ___out;
     }
 
   template<typename _CharT, typename _Traits>
     basic_ostream<_CharT, _Traits> &
-    operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s);
+    operator<<(basic_ostream<_CharT, _Traits>& ___out, const char* __s);
 
   // Partial specializations
   template<class _Traits>
     inline basic_ostream<char, _Traits>&
-    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
+    operator<<(basic_ostream<char, _Traits>& ___out, const char* __s)
     {
       if (!__s)
-	__out.setstate(ios_base::badbit);
+	___out.setstate(ios_base::badbit);
       else
-	__ostream_insert(__out, __s,
+	__ostream_insert(___out, __s,
 			 static_cast<streamsize>(_Traits::length(__s)));
-      return __out;
+      return ___out;
     }
 
   // Signed and unsigned
   template<class _Traits>
     inline basic_ostream<char, _Traits>&
-    operator<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
-    { return (__out << reinterpret_cast<const char*>(__s)); }
+    operator<<(basic_ostream<char, _Traits>& ___out, const signed char* __s)
+    { return (___out << reinterpret_cast<const char*>(__s)); }
 
   template<class _Traits>
     inline basic_ostream<char, _Traits> &
-    operator<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
-    { return (__out << reinterpret_cast<const char*>(__s)); }
+    operator<<(basic_ostream<char, _Traits>& ___out, const unsigned char* __s)
+    { return (___out << reinterpret_cast<const char*>(__s)); }
   //@}
 
   // Standard basic_ostream manipulators
diff --git a/libstdc++-v3/include/std/thread b/libstdc++-v3/include/std/thread
index 6e850bb8d12..dd7883acb7a 100644
--- a/libstdc++-v3/include/std/thread
+++ b/libstdc++-v3/include/std/thread
@@ -96,7 +96,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
       template<class _CharT, class _Traits>
 	friend basic_ostream<_CharT, _Traits>&
-	operator<<(basic_ostream<_CharT, _Traits>& __out, thread::id __id);
+	operator<<(basic_ostream<_CharT, _Traits>& ___out, thread::id __id);
     };
 
   private:
@@ -310,12 +310,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
   template<class _CharT, class _Traits>
     inline basic_ostream<_CharT, _Traits>&
-    operator<<(basic_ostream<_CharT, _Traits>& __out, thread::id __id)
+    operator<<(basic_ostream<_CharT, _Traits>& ___out, thread::id __id)
     {
       if (__id == thread::id())
-	return __out << "thread::id of a non-executing thread";
+	return ___out << "thread::id of a non-executing thread";
       else
-	return __out << __id._M_thread;
+	return ___out << __id._M_thread;
     }
 
 _GLIBCXX_END_NAMESPACE_VERSION
diff --git a/libstdc++-v3/include/std/tuple b/libstdc++-v3/include/std/tuple
index 1f5365ad026..9c427ff6bef 100644
--- a/libstdc++-v3/include/std/tuple
+++ b/libstdc++-v3/include/std/tuple
@@ -220,23 +220,23 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       constexpr _Tuple_impl(const _Tuple_impl&) = default;
 
       constexpr
-      _Tuple_impl(_Tuple_impl&& __in)
+      _Tuple_impl(_Tuple_impl&& ___in)
       noexcept(__and_<is_nothrow_move_constructible<_Head>,
 	              is_nothrow_move_constructible<_Inherited>>::value)
-      : _Inherited(std::move(_M_tail(__in))),
-	_Base(std::forward<_Head>(_M_head(__in))) { }
+      : _Inherited(std::move(_M_tail(___in))),
+	_Base(std::forward<_Head>(_M_head(___in))) { }
 
       template<typename... _UElements>
-        constexpr _Tuple_impl(const _Tuple_impl<_Idx, _UElements...>& __in)
-	: _Inherited(_Tuple_impl<_Idx, _UElements...>::_M_tail(__in)),
-	  _Base(_Tuple_impl<_Idx, _UElements...>::_M_head(__in)) { }
+        constexpr _Tuple_impl(const _Tuple_impl<_Idx, _UElements...>& ___in)
+	: _Inherited(_Tuple_impl<_Idx, _UElements...>::_M_tail(___in)),
+	  _Base(_Tuple_impl<_Idx, _UElements...>::_M_head(___in)) { }
 
       template<typename _UHead, typename... _UTails>
-        constexpr _Tuple_impl(_Tuple_impl<_Idx, _UHead, _UTails...>&& __in)
+        constexpr _Tuple_impl(_Tuple_impl<_Idx, _UHead, _UTails...>&& ___in)
 	: _Inherited(std::move
-		     (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in))),
+		     (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(___in))),
 	  _Base(std::forward<_UHead>
-		(_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in))) { }
+		(_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(___in))) { }
 
       template<typename _Alloc>
 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a)
@@ -260,81 +260,81 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
       template<typename _Alloc>
         _Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
-	            const _Tuple_impl& __in)
-	: _Inherited(__tag, __a, _M_tail(__in)),
-          _Base(__use_alloc<_Head, _Alloc, _Head>(__a), _M_head(__in)) { }
+	            const _Tuple_impl& ___in)
+	: _Inherited(__tag, __a, _M_tail(___in)),
+          _Base(__use_alloc<_Head, _Alloc, _Head>(__a), _M_head(___in)) { }
 
       template<typename _Alloc>
 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
-	            _Tuple_impl&& __in)
-	: _Inherited(__tag, __a, std::move(_M_tail(__in))),
+	            _Tuple_impl&& ___in)
+	: _Inherited(__tag, __a, std::move(_M_tail(___in))),
 	  _Base(__use_alloc<_Head, _Alloc, _Head>(__a),
-	        std::forward<_Head>(_M_head(__in))) { }
+	        std::forward<_Head>(_M_head(___in))) { }
 
       template<typename _Alloc, typename... _UElements>
 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
-	            const _Tuple_impl<_Idx, _UElements...>& __in)
+	            const _Tuple_impl<_Idx, _UElements...>& ___in)
 	: _Inherited(__tag, __a,
-		     _Tuple_impl<_Idx, _UElements...>::_M_tail(__in)),
+		     _Tuple_impl<_Idx, _UElements...>::_M_tail(___in)),
 	  _Base(__use_alloc<_Head, _Alloc, _Head>(__a),
-		_Tuple_impl<_Idx, _UElements...>::_M_head(__in)) { }
+		_Tuple_impl<_Idx, _UElements...>::_M_head(___in)) { }
 
       template<typename _Alloc, typename _UHead, typename... _UTails>
 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
-	            _Tuple_impl<_Idx, _UHead, _UTails...>&& __in)
+	            _Tuple_impl<_Idx, _UHead, _UTails...>&& ___in)
 	: _Inherited(__tag, __a, std::move
-		     (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in))),
+		     (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(___in))),
 	  _Base(__use_alloc<_Head, _Alloc, _UHead>(__a),
                 std::forward<_UHead>
-		(_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in))) { }
+		(_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(___in))) { }
 
       _Tuple_impl&
-      operator=(const _Tuple_impl& __in)
+      operator=(const _Tuple_impl& ___in)
       {
-	_M_head(*this) = _M_head(__in);
-	_M_tail(*this) = _M_tail(__in);
+	_M_head(*this) = _M_head(___in);
+	_M_tail(*this) = _M_tail(___in);
 	return *this;
       }
 
       _Tuple_impl&
-      operator=(_Tuple_impl&& __in)
+      operator=(_Tuple_impl&& ___in)
       noexcept(__and_<is_nothrow_move_assignable<_Head>,
 	              is_nothrow_move_assignable<_Inherited>>::value)
       {
-	_M_head(*this) = std::forward<_Head>(_M_head(__in));
-	_M_tail(*this) = std::move(_M_tail(__in));
+	_M_head(*this) = std::forward<_Head>(_M_head(___in));
+	_M_tail(*this) = std::move(_M_tail(___in));
 	return *this;
       }
 
       template<typename... _UElements>
         _Tuple_impl&
-        operator=(const _Tuple_impl<_Idx, _UElements...>& __in)
+        operator=(const _Tuple_impl<_Idx, _UElements...>& ___in)
         {
-	  _M_head(*this) = _Tuple_impl<_Idx, _UElements...>::_M_head(__in);
-	  _M_tail(*this) = _Tuple_impl<_Idx, _UElements...>::_M_tail(__in);
+	  _M_head(*this) = _Tuple_impl<_Idx, _UElements...>::_M_head(___in);
+	  _M_tail(*this) = _Tuple_impl<_Idx, _UElements...>::_M_tail(___in);
 	  return *this;
 	}
 
       template<typename _UHead, typename... _UTails>
         _Tuple_impl&
-        operator=(_Tuple_impl<_Idx, _UHead, _UTails...>&& __in)
+        operator=(_Tuple_impl<_Idx, _UHead, _UTails...>&& ___in)
         {
 	  _M_head(*this) = std::forward<_UHead>
-	    (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in));
+	    (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(___in));
 	  _M_tail(*this) = std::move
-	    (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in));
+	    (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(___in));
 	  return *this;
 	}
 
     protected:
       void
-      _M_swap(_Tuple_impl& __in)
+      _M_swap(_Tuple_impl& ___in)
       noexcept(__is_nothrow_swappable<_Head>::value
-               && noexcept(_M_tail(__in)._M_swap(_M_tail(__in))))
+               && noexcept(_M_tail(___in)._M_swap(_M_tail(___in))))
       {
 	using std::swap;
-	swap(_M_head(*this), _M_head(__in));
-	_Inherited::_M_swap(_M_tail(__in));
+	swap(_M_head(*this), _M_head(___in));
+	_Inherited::_M_swap(_M_tail(___in));
       }
     };
 
@@ -368,17 +368,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       constexpr _Tuple_impl(const _Tuple_impl&) = default;
 
       constexpr
-      _Tuple_impl(_Tuple_impl&& __in)
+      _Tuple_impl(_Tuple_impl&& ___in)
       noexcept(is_nothrow_move_constructible<_Head>::value)
-      : _Base(std::forward<_Head>(_M_head(__in))) { }
+      : _Base(std::forward<_Head>(_M_head(___in))) { }
 
       template<typename _UHead>
-        constexpr _Tuple_impl(const _Tuple_impl<_Idx, _UHead>& __in)
-	: _Base(_Tuple_impl<_Idx, _UHead>::_M_head(__in)) { }
+        constexpr _Tuple_impl(const _Tuple_impl<_Idx, _UHead>& ___in)
+	: _Base(_Tuple_impl<_Idx, _UHead>::_M_head(___in)) { }
 
       template<typename _UHead>
-        constexpr _Tuple_impl(_Tuple_impl<_Idx, _UHead>&& __in)
-	: _Base(std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(__in)))
+        constexpr _Tuple_impl(_Tuple_impl<_Idx, _UHead>&& ___in)
+	: _Base(std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(___in)))
 	{ }
 
       template<typename _Alloc>
@@ -398,67 +398,67 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
       template<typename _Alloc>
         _Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
-	            const _Tuple_impl& __in)
-	: _Base(__use_alloc<_Head, _Alloc, _Head>(__a), _M_head(__in)) { }
+	            const _Tuple_impl& ___in)
+	: _Base(__use_alloc<_Head, _Alloc, _Head>(__a), _M_head(___in)) { }
 
       template<typename _Alloc>
 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
-	            _Tuple_impl&& __in)
+	            _Tuple_impl&& ___in)
 	: _Base(__use_alloc<_Head, _Alloc, _Head>(__a),
-	        std::forward<_Head>(_M_head(__in))) { }
+	        std::forward<_Head>(_M_head(___in))) { }
 
       template<typename _Alloc, typename _UHead>
 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
-	            const _Tuple_impl<_Idx, _UHead>& __in)
+	            const _Tuple_impl<_Idx, _UHead>& ___in)
 	: _Base(__use_alloc<_Head, _Alloc, _Head>(__a),
-		_Tuple_impl<_Idx, _UHead>::_M_head(__in)) { }
+		_Tuple_impl<_Idx, _UHead>::_M_head(___in)) { }
 
       template<typename _Alloc, typename _UHead>
 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
-	            _Tuple_impl<_Idx, _UHead>&& __in)
+	            _Tuple_impl<_Idx, _UHead>&& ___in)
 	: _Base(__use_alloc<_Head, _Alloc, _UHead>(__a),
-                std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(__in)))
+                std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(___in)))
 	{ }
 
       _Tuple_impl&
-      operator=(const _Tuple_impl& __in)
+      operator=(const _Tuple_impl& ___in)
       {
-	_M_head(*this) = _M_head(__in);
+	_M_head(*this) = _M_head(___in);
 	return *this;
       }
 
       _Tuple_impl&
-      operator=(_Tuple_impl&& __in)
+      operator=(_Tuple_impl&& ___in)
       noexcept(is_nothrow_move_assignable<_Head>::value)
       {
-	_M_head(*this) = std::forward<_Head>(_M_head(__in));
+	_M_head(*this) = std::forward<_Head>(_M_head(___in));
 	return *this;
       }
 
       template<typename _UHead>
         _Tuple_impl&
-        operator=(const _Tuple_impl<_Idx, _UHead>& __in)
+        operator=(const _Tuple_impl<_Idx, _UHead>& ___in)
         {
-	  _M_head(*this) = _Tuple_impl<_Idx, _UHead>::_M_head(__in);
+	  _M_head(*this) = _Tuple_impl<_Idx, _UHead>::_M_head(___in);
 	  return *this;
 	}
 
       template<typename _UHead>
         _Tuple_impl&
-        operator=(_Tuple_impl<_Idx, _UHead>&& __in)
+        operator=(_Tuple_impl<_Idx, _UHead>&& ___in)
         {
 	  _M_head(*this)
-	    = std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(__in));
+	    = std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(___in));
 	  return *this;
 	}
 
     protected:
       void
-      _M_swap(_Tuple_impl& __in)
+      _M_swap(_Tuple_impl& ___in)
       noexcept(__is_nothrow_swappable<_Head>::value)
       {
 	using std::swap;
-	swap(_M_head(*this), _M_head(__in));
+	swap(_M_head(*this), _M_head(___in));
       }
     };
 
@@ -675,8 +675,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                   && _TNTC<_Dummy>::template
                     _NonNestedTuple<const tuple<_UElements...>&>(),
         bool>::type=true>
-        constexpr tuple(const tuple<_UElements...>& __in)
-        : _Inherited(static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
+        constexpr tuple(const tuple<_UElements...>& ___in)
+        : _Inherited(static_cast<const _Tuple_impl<0, _UElements...>&>(___in))
         { }
 
       template<typename... _UElements, typename _Dummy = void, typename
@@ -687,8 +687,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                   && _TNTC<_Dummy>::template
                     _NonNestedTuple<const tuple<_UElements...>&>(),
         bool>::type=false>
-        explicit constexpr tuple(const tuple<_UElements...>& __in)
-        : _Inherited(static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
+        explicit constexpr tuple(const tuple<_UElements...>& ___in)
+        : _Inherited(static_cast<const _Tuple_impl<0, _UElements...>&>(___in))
         { }
 
       template<typename... _UElements, typename _Dummy = void, typename
@@ -699,8 +699,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                   && _TNTC<_Dummy>::template
                     _NonNestedTuple<tuple<_UElements...>&&>(),
         bool>::type=true>
-        constexpr tuple(tuple<_UElements...>&& __in)
-        : _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(__in)) { }
+        constexpr tuple(tuple<_UElements...>&& ___in)
+        : _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(___in)) { }
 
       template<typename... _UElements, typename _Dummy = void, typename
         enable_if<_TMCT<_UElements...>::template
@@ -710,8 +710,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                   && _TNTC<_Dummy>::template
                     _NonNestedTuple<tuple<_UElements...>&&>(),
         bool>::type=false>
-        explicit constexpr tuple(tuple<_UElements...>&& __in)
-        : _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(__in)) { }
+        explicit constexpr tuple(tuple<_UElements...>&& ___in)
+        : _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(___in)) { }
 
       // Allocator-extended constructors.
 
@@ -764,12 +764,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
         { }
 
       template<typename _Alloc>
-	tuple(allocator_arg_t __tag, const _Alloc& __a, const tuple& __in)
-	: _Inherited(__tag, __a, static_cast<const _Inherited&>(__in)) { }
+	tuple(allocator_arg_t __tag, const _Alloc& __a, const tuple& ___in)
+	: _Inherited(__tag, __a, static_cast<const _Inherited&>(___in)) { }
 
       template<typename _Alloc>
-	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple&& __in)
-	: _Inherited(__tag, __a, static_cast<_Inherited&&>(__in)) { }
+	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple&& ___in)
+	: _Inherited(__tag, __a, static_cast<_Inherited&&>(___in)) { }
 
       template<typename _Alloc, typename _Dummy = void,
 	       typename... _UElements, typename
@@ -781,9 +781,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                     _NonNestedTuple<tuple<_UElements...>&&>(),
         bool>::type=true>
 	tuple(allocator_arg_t __tag, const _Alloc& __a,
-	      const tuple<_UElements...>& __in)
+	      const tuple<_UElements...>& ___in)
 	: _Inherited(__tag, __a,
-	             static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
+	             static_cast<const _Tuple_impl<0, _UElements...>&>(___in))
 	{ }
 
       template<typename _Alloc, typename _Dummy = void,
@@ -796,9 +796,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                     _NonNestedTuple<tuple<_UElements...>&&>(),
         bool>::type=false>
 	explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
-	      const tuple<_UElements...>& __in)
+	      const tuple<_UElements...>& ___in)
 	: _Inherited(__tag, __a,
-	             static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
+	             static_cast<const _Tuple_impl<0, _UElements...>&>(___in))
 	{ }
 
       template<typename _Alloc, typename _Dummy = void,
@@ -811,9 +811,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                     _NonNestedTuple<tuple<_UElements...>&&>(),
         bool>::type=true>
 	tuple(allocator_arg_t __tag, const _Alloc& __a,
-	      tuple<_UElements...>&& __in)
+	      tuple<_UElements...>&& ___in)
 	: _Inherited(__tag, __a,
-	             static_cast<_Tuple_impl<0, _UElements...>&&>(__in))
+	             static_cast<_Tuple_impl<0, _UElements...>&&>(___in))
 	{ }
 
       template<typename _Alloc, typename _Dummy = void,
@@ -826,23 +826,23 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                     _NonNestedTuple<tuple<_UElements...>&&>(),
         bool>::type=false>
 	explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
-	      tuple<_UElements...>&& __in)
+	      tuple<_UElements...>&& ___in)
 	: _Inherited(__tag, __a,
-	             static_cast<_Tuple_impl<0, _UElements...>&&>(__in))
+	             static_cast<_Tuple_impl<0, _UElements...>&&>(___in))
 	{ }
 
       tuple&
-      operator=(const tuple& __in)
+      operator=(const tuple& ___in)
       {
-	static_cast<_Inherited&>(*this) = __in;
+	static_cast<_Inherited&>(*this) = ___in;
 	return *this;
       }
 
       tuple&
-      operator=(tuple&& __in)
+      operator=(tuple&& ___in)
       noexcept(is_nothrow_move_assignable<_Inherited>::value)
       {
-	static_cast<_Inherited&>(*this) = std::move(__in);
+	static_cast<_Inherited&>(*this) = std::move(___in);
 	return *this;
       }
 
@@ -850,9 +850,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	typename
 	       enable_if<sizeof...(_UElements)
 			 == sizeof...(_Elements), tuple&>::type
-        operator=(const tuple<_UElements...>& __in)
+        operator=(const tuple<_UElements...>& ___in)
         {
-	  static_cast<_Inherited&>(*this) = __in;
+	  static_cast<_Inherited&>(*this) = ___in;
 	  return *this;
 	}
 
@@ -860,16 +860,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	typename
 	       enable_if<sizeof...(_UElements)
 			 == sizeof...(_Elements), tuple&>::type
-        operator=(tuple<_UElements...>&& __in)
+        operator=(tuple<_UElements...>&& ___in)
         {
-	  static_cast<_Inherited&>(*this) = std::move(__in);
+	  static_cast<_Inherited&>(*this) = std::move(___in);
 	  return *this;
 	}
 
       void
-      swap(tuple& __in)
-      noexcept(noexcept(__in._M_swap(__in)))
-      { _Inherited::_M_swap(__in); }
+      swap(tuple& ___in)
+      noexcept(noexcept(___in._M_swap(___in)))
+      { _Inherited::_M_swap(___in); }
     };
 
 #if __cpp_deduction_guides >= 201606
@@ -992,8 +992,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                   && _TMC::template
                     _ImplicitlyConvertibleTuple<_U1, _U2>(),
 	bool>::type = true>
-        constexpr tuple(const tuple<_U1, _U2>& __in)
-	: _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in)) { }
+        constexpr tuple(const tuple<_U1, _U2>& ___in)
+	: _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(___in)) { }
 
       template<typename _U1, typename _U2, typename
         enable_if<_TMC::template
@@ -1001,8 +1001,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                   && !_TMC::template
                     _ImplicitlyConvertibleTuple<_U1, _U2>(),
 	bool>::type = false>
-        explicit constexpr tuple(const tuple<_U1, _U2>& __in)
-	: _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in)) { }
+        explicit constexpr tuple(const tuple<_U1, _U2>& ___in)
+	: _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(___in)) { }
 
       template<typename _U1, typename _U2, typename
         enable_if<_TMC::template
@@ -1010,8 +1010,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                   && _TMC::template
                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
 	bool>::type = true>
-        constexpr tuple(tuple<_U1, _U2>&& __in)
-	: _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in)) { }
+        constexpr tuple(tuple<_U1, _U2>&& ___in)
+	: _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(___in)) { }
 
       template<typename _U1, typename _U2, typename
         enable_if<_TMC::template
@@ -1019,8 +1019,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                   && !_TMC::template
                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
 	bool>::type = false>
-        explicit constexpr tuple(tuple<_U1, _U2>&& __in)
-	: _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in)) { }
+        explicit constexpr tuple(tuple<_U1, _U2>&& ___in)
+	: _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(___in)) { }
 
       template<typename _U1, typename _U2, typename
         enable_if<_TMC::template
@@ -1028,8 +1028,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                   && _TMC::template
                     _ImplicitlyConvertibleTuple<_U1, _U2>(),
 	bool>::type = true>
-        constexpr tuple(const pair<_U1, _U2>& __in)
-	: _Inherited(__in.first, __in.second) { }
+        constexpr tuple(const pair<_U1, _U2>& ___in)
+	: _Inherited(___in.first, ___in.second) { }
 
       template<typename _U1, typename _U2, typename
         enable_if<_TMC::template
@@ -1037,8 +1037,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                   && !_TMC::template
                     _ImplicitlyConvertibleTuple<_U1, _U2>(),
 	bool>::type = false>
-        explicit constexpr tuple(const pair<_U1, _U2>& __in)
-	: _Inherited(__in.first, __in.second) { }
+        explicit constexpr tuple(const pair<_U1, _U2>& ___in)
+	: _Inherited(___in.first, ___in.second) { }
 
       template<typename _U1, typename _U2, typename
         enable_if<_TMC::template
@@ -1046,9 +1046,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                   && _TMC::template
                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
 	bool>::type = true>
-        constexpr tuple(pair<_U1, _U2>&& __in)
-	: _Inherited(std::forward<_U1>(__in.first),
-		     std::forward<_U2>(__in.second)) { }
+        constexpr tuple(pair<_U1, _U2>&& ___in)
+	: _Inherited(std::forward<_U1>(___in.first),
+		     std::forward<_U2>(___in.second)) { }
 
       template<typename _U1, typename _U2, typename
         enable_if<_TMC::template
@@ -1056,9 +1056,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                   && !_TMC::template
                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
 	bool>::type = false>
-        explicit constexpr tuple(pair<_U1, _U2>&& __in)
-	: _Inherited(std::forward<_U1>(__in.first),
-		     std::forward<_U2>(__in.second)) { }
+        explicit constexpr tuple(pair<_U1, _U2>&& ___in)
+	: _Inherited(std::forward<_U1>(___in.first),
+		     std::forward<_U2>(___in.second)) { }
 
       // Allocator-extended constructors.
 
@@ -1112,12 +1112,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	             std::forward<_U2>(__a2)) { }
 
       template<typename _Alloc>
-	tuple(allocator_arg_t __tag, const _Alloc& __a, const tuple& __in)
-	: _Inherited(__tag, __a, static_cast<const _Inherited&>(__in)) { }
+	tuple(allocator_arg_t __tag, const _Alloc& __a, const tuple& ___in)
+	: _Inherited(__tag, __a, static_cast<const _Inherited&>(___in)) { }
 
       template<typename _Alloc>
-	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple&& __in)
-	: _Inherited(__tag, __a, static_cast<_Inherited&&>(__in)) { }
+	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple&& ___in)
+	: _Inherited(__tag, __a, static_cast<_Inherited&&>(___in)) { }
 
       template<typename _Alloc, typename _U1, typename _U2, typename
         enable_if<_TMC::template
@@ -1126,9 +1126,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                     _ImplicitlyConvertibleTuple<_U1, _U2>(),
 	bool>::type = true>
 	tuple(allocator_arg_t __tag, const _Alloc& __a,
-	      const tuple<_U1, _U2>& __in)
+	      const tuple<_U1, _U2>& ___in)
 	: _Inherited(__tag, __a,
-	             static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in))
+	             static_cast<const _Tuple_impl<0, _U1, _U2>&>(___in))
 	{ }
 
       template<typename _Alloc, typename _U1, typename _U2, typename
@@ -1138,9 +1138,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                     _ImplicitlyConvertibleTuple<_U1, _U2>(),
 	bool>::type = false>
 	explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
-	      const tuple<_U1, _U2>& __in)
+	      const tuple<_U1, _U2>& ___in)
 	: _Inherited(__tag, __a,
-	             static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in))
+	             static_cast<const _Tuple_impl<0, _U1, _U2>&>(___in))
 	{ }
 
       template<typename _Alloc, typename _U1, typename _U2, typename
@@ -1149,8 +1149,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                   && _TMC::template
                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
 	bool>::type = true>
-	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple<_U1, _U2>&& __in)
-	: _Inherited(__tag, __a, static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in))
+	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple<_U1, _U2>&& ___in)
+	: _Inherited(__tag, __a, static_cast<_Tuple_impl<0, _U1, _U2>&&>(___in))
 	{ }
 
       template<typename _Alloc, typename _U1, typename _U2, typename
@@ -1160,8 +1160,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
 	bool>::type = false>
 	explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
-                       tuple<_U1, _U2>&& __in)
-	: _Inherited(__tag, __a, static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in))
+                       tuple<_U1, _U2>&& ___in)
+	: _Inherited(__tag, __a, static_cast<_Tuple_impl<0, _U1, _U2>&&>(___in))
 	{ }
 
       template<typename _Alloc, typename _U1, typename _U2, typename
@@ -1171,8 +1171,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                     _ImplicitlyConvertibleTuple<_U1, _U2>(),
 	bool>::type = true>
         tuple(allocator_arg_t __tag, const _Alloc& __a,
-	      const pair<_U1, _U2>& __in)
-	: _Inherited(__tag, __a, __in.first, __in.second) { }
+	      const pair<_U1, _U2>& ___in)
+	: _Inherited(__tag, __a, ___in.first, ___in.second) { }
 
       template<typename _Alloc, typename _U1, typename _U2, typename
         enable_if<_TMC::template
@@ -1181,8 +1181,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                     _ImplicitlyConvertibleTuple<_U1, _U2>(),
 	bool>::type = false>
         explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
-	      const pair<_U1, _U2>& __in)
-	: _Inherited(__tag, __a, __in.first, __in.second) { }
+	      const pair<_U1, _U2>& ___in)
+	: _Inherited(__tag, __a, ___in.first, ___in.second) { }
 
       template<typename _Alloc, typename _U1, typename _U2, typename
         enable_if<_TMC::template
@@ -1190,9 +1190,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                   && _TMC::template
                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
 	bool>::type = true>
-        tuple(allocator_arg_t __tag, const _Alloc& __a, pair<_U1, _U2>&& __in)
-	: _Inherited(__tag, __a, std::forward<_U1>(__in.first),
-		     std::forward<_U2>(__in.second)) { }
+        tuple(allocator_arg_t __tag, const _Alloc& __a, pair<_U1, _U2>&& ___in)
+	: _Inherited(__tag, __a, std::forward<_U1>(___in.first),
+		     std::forward<_U2>(___in.second)) { }
 
       template<typename _Alloc, typename _U1, typename _U2, typename
         enable_if<_TMC::template
@@ -1201,63 +1201,63 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
                     _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),
 	bool>::type = false>
         explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
-                       pair<_U1, _U2>&& __in)
-	: _Inherited(__tag, __a, std::forward<_U1>(__in.first),
-		     std::forward<_U2>(__in.second)) { }
+                       pair<_U1, _U2>&& ___in)
+	: _Inherited(__tag, __a, std::forward<_U1>(___in.first),
+		     std::forward<_U2>(___in.second)) { }
 
       tuple&
-      operator=(const tuple& __in)
+      operator=(const tuple& ___in)
       {
-	static_cast<_Inherited&>(*this) = __in;
+	static_cast<_Inherited&>(*this) = ___in;
 	return *this;
       }
 
       tuple&
-      operator=(tuple&& __in)
+      operator=(tuple&& ___in)
       noexcept(is_nothrow_move_assignable<_Inherited>::value)
       {
-	static_cast<_Inherited&>(*this) = std::move(__in);
+	static_cast<_Inherited&>(*this) = std::move(___in);
 	return *this;
       }
 
       template<typename _U1, typename _U2>
         tuple&
-        operator=(const tuple<_U1, _U2>& __in)
+        operator=(const tuple<_U1, _U2>& ___in)
         {
-	  static_cast<_Inherited&>(*this) = __in;
+	  static_cast<_Inherited&>(*this) = ___in;
 	  return *this;
 	}
 
       template<typename _U1, typename _U2>
         tuple&
-        operator=(tuple<_U1, _U2>&& __in)
+        operator=(tuple<_U1, _U2>&& ___in)
         {
-	  static_cast<_Inherited&>(*this) = std::move(__in);
+	  static_cast<_Inherited&>(*this) = std::move(___in);
 	  return *this;
 	}
 
       template<typename _U1, typename _U2>
         tuple&
-        operator=(const pair<_U1, _U2>& __in)
+        operator=(const pair<_U1, _U2>& ___in)
         {
-	  this->_M_head(*this) = __in.first;
-	  this->_M_tail(*this)._M_head(*this) = __in.second;
+	  this->_M_head(*this) = ___in.first;
+	  this->_M_tail(*this)._M_head(*this) = ___in.second;
 	  return *this;
 	}
 
       template<typename _U1, typename _U2>
         tuple&
-        operator=(pair<_U1, _U2>&& __in)
+        operator=(pair<_U1, _U2>&& ___in)
         {
-	  this->_M_head(*this) = std::forward<_U1>(__in.first);
-	  this->_M_tail(*this)._M_head(*this) = std::forward<_U2>(__in.second);
+	  this->_M_head(*this) = std::forward<_U1>(___in.first);
+	  this->_M_tail(*this)._M_head(*this) = std::forward<_U2>(___in.second);
 	  return *this;
 	}
 
       void
-      swap(tuple& __in)
-      noexcept(noexcept(__in._M_swap(__in)))
-      { _Inherited::_M_swap(__in); }
+      swap(tuple& ___in)
+      noexcept(noexcept(___in._M_swap(___in)))
+      { _Inherited::_M_swap(___in); }
     };
 
 
diff --git a/libstdc++-v3/include/std/utility b/libstdc++-v3/include/std/utility
index 847e5184c5b..607d7d6986d 100644
--- a/libstdc++-v3/include/std/utility
+++ b/libstdc++-v3/include/std/utility
@@ -222,18 +222,18 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
   template<std::size_t _Int, class _Tp1, class _Tp2>
     constexpr typename tuple_element<_Int, std::pair<_Tp1, _Tp2>>::type&
-    get(std::pair<_Tp1, _Tp2>& __in) noexcept
-    { return __pair_get<_Int>::__get(__in); }
+    get(std::pair<_Tp1, _Tp2>& ___in) noexcept
+    { return __pair_get<_Int>::__get(___in); }
 
   template<std::size_t _Int, class _Tp1, class _Tp2>
     constexpr typename tuple_element<_Int, std::pair<_Tp1, _Tp2>>::type&&
-    get(std::pair<_Tp1, _Tp2>&& __in) noexcept
-    { return __pair_get<_Int>::__move_get(std::move(__in)); }
+    get(std::pair<_Tp1, _Tp2>&& ___in) noexcept
+    { return __pair_get<_Int>::__move_get(std::move(___in)); }
 
   template<std::size_t _Int, class _Tp1, class _Tp2>
     constexpr const typename tuple_element<_Int, std::pair<_Tp1, _Tp2>>::type&
-    get(const std::pair<_Tp1, _Tp2>& __in) noexcept
-    { return __pair_get<_Int>::__const_get(__in); }
+    get(const std::pair<_Tp1, _Tp2>& ___in) noexcept
+    { return __pair_get<_Int>::__const_get(___in); }
 
 #if __cplusplus > 201103L
 
diff --git a/libstdc++-v3/include/tr1/regex b/libstdc++-v3/include/tr1/regex
index bfb5ef770d4..f910c304d16 100644
--- a/libstdc++-v3/include/tr1/regex
+++ b/libstdc++-v3/include/tr1/regex
@@ -2008,7 +2008,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
        */
       template<typename _Out_iter>
         _Out_iter
-        format(_Out_iter __out, const string_type& __fmt,
+        format(_Out_iter ___out, const string_type& __fmt,
 	       regex_constants::match_flag_type __flags
 	       = regex_constants::format_default) const;
 
@@ -2404,7 +2404,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   template<typename _Out_iter, typename _Bi_iter,
 	   typename _Rx_traits, typename _Ch_type>
     inline _Out_iter
-    regex_replace(_Out_iter __out, _Bi_iter __first, _Bi_iter __last,
+    regex_replace(_Out_iter ___out, _Bi_iter __first, _Bi_iter __last,
 		  const basic_regex<_Ch_type, _Rx_traits>& __e,
 		  const basic_string<_Ch_type>& __fmt,
 		  regex_constants::match_flag_type __flags
diff --git a/libstdc++-v3/include/tr1/tuple b/libstdc++-v3/include/tr1/tuple
index fe53a8b99b0..351ad9ee282 100644
--- a/libstdc++-v3/include/tr1/tuple
+++ b/libstdc++-v3/include/tr1/tuple
@@ -102,26 +102,26 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       : _Inherited(__tail...), _M_head(__head) { }
 
       template<typename... _UElements>
-      _Tuple_impl(const _Tuple_impl<_Idx, _UElements...>& __in)
-      : _Inherited(__in._M_tail()), _M_head(__in._M_head) { }
+      _Tuple_impl(const _Tuple_impl<_Idx, _UElements...>& ___in)
+      : _Inherited(___in._M_tail()), _M_head(___in._M_head) { }
 
-      _Tuple_impl(const _Tuple_impl& __in)
-      : _Inherited(__in._M_tail()), _M_head(__in._M_head) { }
+      _Tuple_impl(const _Tuple_impl& ___in)
+      : _Inherited(___in._M_tail()), _M_head(___in._M_head) { }
      
       template<typename... _UElements>
         _Tuple_impl&
-        operator=(const _Tuple_impl<_Idx, _UElements...>& __in)
+        operator=(const _Tuple_impl<_Idx, _UElements...>& ___in)
         {
-	  _M_head = __in._M_head;
-	  _M_tail() = __in._M_tail();
+	  _M_head = ___in._M_head;
+	  _M_tail() = ___in._M_tail();
 	  return *this;
 	}
 
       _Tuple_impl&
-      operator=(const _Tuple_impl& __in)
+      operator=(const _Tuple_impl& ___in)
       {
-	_M_head = __in._M_head;
-	_M_tail() = __in._M_tail();
+	_M_head = ___in._M_head;
+	_M_tail() = ___in._M_tail();
 	return *this;
       }
     };
@@ -139,24 +139,24 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       : _Inherited(__elements...) { }
 
       template<typename... _UElements>
-        tuple(const tuple<_UElements...>& __in)
-	: _Inherited(__in) { }
+        tuple(const tuple<_UElements...>& ___in)
+	: _Inherited(___in) { }
 
-      tuple(const tuple& __in)
-      : _Inherited(__in) { }
+      tuple(const tuple& ___in)
+      : _Inherited(___in) { }
 
       template<typename... _UElements>
         tuple&
-        operator=(const tuple<_UElements...>& __in)
+        operator=(const tuple<_UElements...>& ___in)
         {
-	  static_cast<_Inherited&>(*this) = __in;
+	  static_cast<_Inherited&>(*this) = ___in;
 	  return *this;
 	}
 
       tuple&
-      operator=(const tuple& __in)
+      operator=(const tuple& ___in)
       {
-	static_cast<_Inherited&>(*this) = __in;
+	static_cast<_Inherited&>(*this) = ___in;
 	return *this;
       }
     };
@@ -178,41 +178,41 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       : _Inherited(__a1, __a2) { }
 
       template<typename _U1, typename _U2>
-        tuple(const tuple<_U1, _U2>& __in)
-	: _Inherited(__in) { }
+        tuple(const tuple<_U1, _U2>& ___in)
+	: _Inherited(___in) { }
 
-      tuple(const tuple& __in)
-      : _Inherited(__in) { }
+      tuple(const tuple& ___in)
+      : _Inherited(___in) { }
 
       template<typename _U1, typename _U2>
-        tuple(const pair<_U1, _U2>& __in)
+        tuple(const pair<_U1, _U2>& ___in)
 	: _Inherited(_Tuple_impl<0, 
 		     typename __add_c_ref<_U1>::type,
-		     typename __add_c_ref<_U2>::type>(__in.first, 
-						      __in.second))
+		     typename __add_c_ref<_U2>::type>(___in.first, 
+						      ___in.second))
         { }
   
       template<typename _U1, typename _U2>
         tuple&
-        operator=(const tuple<_U1, _U2>& __in)
+        operator=(const tuple<_U1, _U2>& ___in)
         {
-	  static_cast<_Inherited&>(*this) = __in;
+	  static_cast<_Inherited&>(*this) = ___in;
 	  return *this;
 	}
 
       tuple&
-      operator=(const tuple& __in)
+      operator=(const tuple& ___in)
       {
-	static_cast<_Inherited&>(*this) = __in;
+	static_cast<_Inherited&>(*this) = ___in;
 	return *this;
       }
 
       template<typename _U1, typename _U2>
         tuple&
-        operator=(const pair<_U1, _U2>& __in)
+        operator=(const pair<_U1, _U2>& ___in)
         {
-	  this->_M_head = __in.first;
-	  this->_M_tail()._M_head = __in.second;
+	  this->_M_head = ___in.first;
+	  this->_M_tail()._M_head = ___in.second;
 	  return *this;
 	}
     };
diff --git a/libstdc++-v3/include/tr1/utility b/libstdc++-v3/include/tr1/utility
index 91076d9882c..fd33b441985 100644
--- a/libstdc++-v3/include/tr1/utility
+++ b/libstdc++-v3/include/tr1/utility
@@ -93,13 +93,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
   template<int _Int, class _Tp1, class _Tp2>
     inline typename tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&
-    get(std::pair<_Tp1, _Tp2>& __in)
-    { return __pair_get<_Int>::__get(__in); }
+    get(std::pair<_Tp1, _Tp2>& ___in)
+    { return __pair_get<_Int>::__get(___in); }
 
   template<int _Int, class _Tp1, class _Tp2>
     inline const typename tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&
-    get(const std::pair<_Tp1, _Tp2>& __in)
-    { return __pair_get<_Int>::__const_get(__in); }
+    get(const std::pair<_Tp1, _Tp2>& ___in)
+    { return __pair_get<_Int>::__const_get(___in); }
 
 _GLIBCXX_END_NAMESPACE_VERSION
 }
diff --git a/libstdc++-v3/include/tr2/bool_set b/libstdc++-v3/include/tr2/bool_set
index 9d55b3c0ebd..ce4c4921702 100644
--- a/libstdc++-v3/include/tr2/bool_set
+++ b/libstdc++-v3/include/tr2/bool_set
@@ -131,18 +131,18 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
     template<typename CharT, typename Traits>
       friend std::basic_ostream<CharT, Traits>&
-      operator<<(std::basic_ostream<CharT, Traits>& __out, bool_set __b)
+      operator<<(std::basic_ostream<CharT, Traits>& ___out, bool_set __b)
       {
 	int __a = __b._M_b;
-	__out << __a;
+	___out << __a;
       }
 
     template<typename CharT, typename Traits>
       friend std::basic_istream<CharT, Traits>&
-      operator>>(std::basic_istream<CharT, Traits>& __in, bool_set& __b)
+      operator>>(std::basic_istream<CharT, Traits>& ___in, bool_set& __b)
       {
 	long __c;
-	__in >> __c;
+	___in >> __c;
 	if (__c >= _S_false && __c < _S_empty)
 	  __b._M_b = static_cast<_Bool_set_val>(__c);
       }
diff --git a/libstdc++-v3/include/tr2/bool_set.tcc b/libstdc++-v3/include/tr2/bool_set.tcc
index a5fd898a822..78fab086508 100644
--- a/libstdc++-v3/include/tr2/bool_set.tcc
+++ b/libstdc++-v3/include/tr2/bool_set.tcc
@@ -100,9 +100,9 @@ _GLIBCXX_END_NAMESPACE_VERSION
        *  @param  v  Value to format and insert.
        *  @return  Iterator after reading.
       iter_type
-      get(iter_type __in, iter_type __end, ios_base& __io,
+      get(iter_type ___in, iter_type __end, ios_base& __io,
 	  ios_base::iostate& __err, bool& __v) const
-      { return this->do_get(__in, __end, __io, __err, __v); }
+      { return this->do_get(___in, __end, __io, __err, __v); }
        */
 /*
   template<typename _CharT, typename _InIter>
diff --git a/libstdc++-v3/src/filesystem/dir.cc b/libstdc++-v3/src/filesystem/dir.cc
index c8457bde102..ac4dda465d2 100644
--- a/libstdc++-v3/src/filesystem/dir.cc
+++ b/libstdc++-v3/src/filesystem/dir.cc
@@ -41,9 +41,10 @@
 #endif
 
 #ifdef _GLIBCXX_FILESYSTEM_IS_WINDOWS
-# undef opendir
-# define opendir _wopendir
-#endif
+# include "fs-win32.h"
+#else
+# include "fs-posix.h"
+#endif // _GLIBCXX_FILESYSTEM_IS_WINDOWS
 
 namespace fs = std::experimental::filesystem;
 
@@ -51,7 +52,7 @@ struct fs::_Dir
 {
   _Dir() : dirp(nullptr) { }
 
-  _Dir(DIR* dirp, const fs::path& path) : dirp(dirp), path(path) { }
+  _Dir(os_DIR_t* dirp, const fs::path& path) : dirp(dirp), path(path) { }
 
   _Dir(_Dir&& d)
   : dirp(std::exchange(d.dirp, nullptr)), path(std::move(d.path)),
@@ -60,11 +61,11 @@ struct fs::_Dir
 
   _Dir& operator=(_Dir&&) = delete;
 
-  ~_Dir() { if (dirp) ::closedir(dirp); }
+  ~_Dir() { if (dirp) ::os_closedir(dirp); }
 
   bool advance(std::error_code*, directory_options = directory_options::none);
 
-  DIR*			dirp;
+  os_DIR_t*			dirp;
   fs::path		path;
   directory_entry	entry;
   file_type		type = file_type::none;
@@ -87,7 +88,7 @@ namespace
     if (ec)
       ec->clear();
 
-    if (DIR* dirp = ::opendir(p.c_str()))
+    if (os_DIR_t* dirp = ::os_opendir(p.c_str()))
       return {dirp, p};
 
     const int err = errno;
@@ -105,7 +106,7 @@ namespace
   }
 
   inline fs::file_type
-  get_file_type(const ::dirent& d __attribute__((__unused__)))
+  get_file_type(const ::os_dirent_t& d __attribute__((__unused__)))
   {
 #ifdef _GLIBCXX_HAVE_STRUCT_DIRENT_D_TYPE
     switch (d.d_type)
@@ -145,13 +146,14 @@ fs::_Dir::advance(error_code* ec, directory_options options)
     ec->clear();
 
   int err = std::exchange(errno, 0);
-  const auto entp = readdir(dirp);
+  const auto entp = ::os_readdir(dirp);
   std::swap(errno, err);
 
   if (entp)
     {
       // skip past dot and dot-dot
-      if (!strcmp(entp->d_name, ".") || !strcmp(entp->d_name, ".."))
+      if (!std::char_traits<path::value_type>::compare(entp->d_name, _WS("."), 1) ||
+	    !std::char_traits<path::value_type>::compare(entp->d_name, _WS(".."), 2))
 	return advance(ec, options);
       entry = fs::directory_entry{path / entp->d_name};
       type = get_file_type(*entp);
@@ -239,7 +241,7 @@ recursive_directory_iterator(const path& p, directory_options options,
                              error_code* ec)
 : _M_options(options), _M_pending(true)
 {
-  if (DIR* dirp = ::opendir(p.c_str()))
+  if (os_DIR_t* dirp = ::os_opendir(p.c_str()))
     {
       auto sp = std::make_shared<_Dir_stack>();
       sp->push(_Dir{ dirp, p });
diff --git a/libstdc++-v3/src/filesystem/fs-posix.h b/libstdc++-v3/src/filesystem/fs-posix.h
new file mode 100644
index 00000000000..08768c59c97
--- /dev/null
+++ b/libstdc++-v3/src/filesystem/fs-posix.h
@@ -0,0 +1,49 @@
+
+// Copyright (C) 2014-2017 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#ifndef _GLIBCXX_EXPERIMENTAL_FS_POSIX_H
+#define _GLIBCXX_EXPERIMENTAL_FS_POSIX_H 1
+
+#define os_DIR_t DIR
+#define os_dirent_t dirent
+#define os_open open
+#define os_opendir opendir
+#define os_closedir closedir
+#define os_readdir readdir
+#define os_stat stat
+#define os_stat_t stat
+#define os_chmod chmod
+#define os_mkdir mkdir
+#define os_getcwd getcwd
+#define os_chdir chdir
+#define os_utimbuf_t utimbuf
+#define os_utime utime
+#define os_remove remove
+#define os_rename rename
+#define os_truncate truncate
+
+#define os_utime utime
+
+#define _WS(x) x
+
+#endif // _GLIBCXX_EXPERIMENTAL_FS_POSIX_H
diff --git a/libstdc++-v3/src/filesystem/fs-win32.h b/libstdc++-v3/src/filesystem/fs-win32.h
new file mode 100644
index 00000000000..23053343fc0
--- /dev/null
+++ b/libstdc++-v3/src/filesystem/fs-win32.h
@@ -0,0 +1,64 @@
+
+// Copyright (C) 2014-2017 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+#ifndef _GLIBCXX_EXPERIMENTAL_FS_WIN32_H
+#define _GLIBCXX_EXPERIMENTAL_FS_WIN32_H 1
+
+#define os_DIR_t _WDIR
+#define os_dirent_t _wdirent
+#define os_open _wopen
+#define os_opendir _wopendir
+#define os_closedir _wclosedir
+#define os_readdir _wreaddir
+#define os_stat _wstat
+#define os_stat_t _stat
+#define os_chmod _wchmod
+#define os_mkdir _wmkdir
+#define os_getcwd _wgetcwd
+#define os_chdir _wchdir
+#define os_utimbuf_t _utimbuf
+#define os_utime _wutime
+#define os_remove _wremove
+#define os_rename _wrename
+
+#include <unistd.h>
+#include <fcntl.h>
+#include <errno.h>
+
+inline int _wtruncate(const wchar_t *fname, _off64_t size) {
+  int fd = ::os_open(fname, _O_BINARY|_O_RDWR);
+  if (fd == -1) return fd;
+  int ret = ::ftruncate64(fd, size), err=0;
+  _get_errno(&err);
+  _close(fd);
+  _set_errno(err);
+  return ret;
+}
+
+#define os_truncate _wtruncate
+
+#define os_utime _wutime
+
+#define _WS(x) L##x
+
+#endif // _GLIBCXX_EXPERIMENTAL_FS_WIN32_H
diff --git a/libstdc++-v3/src/filesystem/ops.cc b/libstdc++-v3/src/filesystem/ops.cc
index 397a8d7ffe7..7492a15af25 100644
--- a/libstdc++-v3/src/filesystem/ops.cc
+++ b/libstdc++-v3/src/filesystem/ops.cc
@@ -56,11 +56,10 @@
 #endif
 
 #ifdef _GLIBCXX_FILESYSTEM_IS_WINDOWS
-# undef utime
-# define utime _wutime
-# undef chmod
-# define chmod _wchmod
-#endif
+# include "fs-win32.h"
+#else
+# include "fs-posix.h"
+#endif // _GLIBCXX_FILESYSTEM_IS_WINDOWS
 
 namespace fs = std::experimental::filesystem;
 
@@ -88,11 +87,7 @@ fs::absolute(const path& p, const path& base)
 
 namespace
 {
-#ifdef _GLIBCXX_FILESYSTEM_IS_WINDOWS
-  inline bool is_dot(wchar_t c) { return c == L'.'; }
-#else
-  inline bool is_dot(char c) { return c == '.'; }
-#endif
+  inline bool is_dot(fs::path::value_type c) { return c == _WS('.'); }
 
   inline bool is_dot(const fs::path& path)
   {
@@ -111,7 +106,7 @@ namespace
     void operator()(void* p) const { ::free(p); }
   };
 
-  using char_ptr = std::unique_ptr<char[], free_as_in_malloc>;
+  using char_ptr = std::unique_ptr<fs::path::value_type[], free_as_in_malloc>;
 }
 
 fs::path
@@ -250,7 +245,7 @@ namespace
 #ifdef _GLIBCXX_HAVE_SYS_STAT_H
 namespace
 {
-  typedef struct ::stat stat_type;
+  typedef struct ::os_stat_t stat_type;
 
   inline fs::file_type
   make_file_type(const stat_type& st) noexcept
@@ -267,10 +262,12 @@ namespace
       return file_type::block;
     else if (S_ISFIFO(st.st_mode))
       return file_type::fifo;
+#ifndef _GLIBCXX_FILESYSTEM_IS_WINDOWS
     else if (S_ISLNK(st.st_mode))
       return file_type::symlink;
     else if (S_ISSOCK(st.st_mode))
       return file_type::socket;
+#endif // _GLIBCXX_FILESYSTEM_IS_WINDOWS
 #endif
     return file_type::unknown;
 
@@ -323,7 +320,7 @@ namespace
 
     if (to_st == nullptr)
       {
-	if (::stat(to.c_str(), &st1))
+	if (::os_stat(to.c_str(), &st1))
 	  {
 	    int err = errno;
 	    if (!is_not_found_errno(err))
@@ -345,7 +342,7 @@ namespace
 
     if (from_st == nullptr)
       {
-	if (::stat(from.c_str(), &st2))
+	if (::os_stat(from.c_str(), &st2))
 	  {
 	    ec.assign(errno, std::generic_category());
 	    return false;
@@ -410,7 +407,7 @@ namespace
       int fd;
     };
 
-    CloseFD in = { ::open(from.c_str(), O_RDONLY) };
+    CloseFD in = { ::os_open(from.c_str(), O_RDONLY) };
     if (in.fd == -1)
       {
 	ec.assign(errno, std::generic_category());
@@ -421,7 +418,7 @@ namespace
       oflag |= O_TRUNC;
     else
       oflag |= O_EXCL;
-    CloseFD out = { ::open(to.c_str(), oflag, S_IWUSR) };
+    CloseFD out = { ::os_open(to.c_str(), oflag, S_IWUSR) };
     if (out.fd == -1)
       {
 	if (errno == EEXIST && is_set(option, opts::skip_existing))
@@ -436,7 +433,7 @@ namespace
 #elif defined _GLIBCXX_USE_FCHMODAT
     if (::fchmodat(AT_FDCWD, to.c_str(), from_st->st_mode, 0))
 #else
-    if (::chmod(to.c_str(), from_st->st_mode))
+    if (::os_chmod(to.c_str(), from_st->st_mode))
 #endif
       {
 	ec.assign(errno, std::generic_category());
@@ -522,16 +519,24 @@ fs::copy(const path& from, const path& to, copy_options options,
   stat_type from_st, to_st;
   // _GLIBCXX_RESOLVE_LIB_DEFECTS
   // 2681. filesystem::copy() cannot copy symlinks
+#ifndef _GLIBCXX_FILESYSTEM_IS_WINDOWS
   if (use_lstat || copy_symlinks
       ? ::lstat(from.c_str(), &from_st)
       : ::stat(from.c_str(), &from_st))
+#else
+  if (::os_stat(from.c_str(), &from_st))
+#endif // _GLIBCXX_FILESYSTEM_IS_WINDOWS
     {
       ec.assign(errno, std::generic_category());
       return;
     }
+#ifndef _GLIBCXX_FILESYSTEM_IS_WINDOWS
   if (use_lstat
       ? ::lstat(to.c_str(), &to_st)
       : ::stat(to.c_str(), &to_st))
+#else
+  if (::os_stat(to.c_str(), &to_st))
+#endif // _GLIBCXX_FILESYSTEM_IS_WINDOWS
     {
       if (!is_not_found_errno(errno))
 	{
@@ -716,8 +721,12 @@ namespace
   {
     bool created = false;
 #ifdef _GLIBCXX_HAVE_SYS_STAT_H
+#ifndef _GLIBCXX_FILESYSTEM_IS_WINDOWS
     ::mode_t mode = static_cast<std::underlying_type_t<fs::perms>>(perm);
-    if (::mkdir(p.c_str(), mode))
+    if (::os_mkdir(p.c_str(), mode))
+#else
+    if (::os_mkdir(p.c_str()))
+#endif // _GLIBCXX_FILESYSTEM_IS_WINDOWS
       {
 	const int err = errno;
 	if (err != EEXIST || !is_directory(p, ec))
@@ -770,7 +779,7 @@ fs::create_directory(const path& p, const path& attributes,
 {
 #ifdef _GLIBCXX_HAVE_SYS_STAT_H
   stat_type st;
-  if (::stat(attributes.c_str(), &st))
+  if (::os_stat(attributes.c_str(), &st))
     {
       ec.assign(errno, std::generic_category());
       return false;
@@ -819,7 +828,7 @@ void
 fs::create_hard_link(const path& to, const path& new_hard_link,
 		     error_code& ec) noexcept
 {
-#ifdef _GLIBCXX_HAVE_UNISTD_H
+#if !defined(_GLIBCXX_FILESYSTEM_IS_WINDOWS) && defined(_GLIBCXX_HAVE_UNISTD_H)
   if (::link(to.c_str(), new_hard_link.c_str()))
     ec.assign(errno, std::generic_category());
   else
@@ -843,7 +852,7 @@ void
 fs::create_symlink(const path& to, const path& new_symlink,
 		   error_code& ec) noexcept
 {
-#ifdef _GLIBCXX_HAVE_UNISTD_H
+#if !defined(_GLIBCXX_FILESYSTEM_IS_WINDOWS) && defined(_GLIBCXX_HAVE_UNISTD_H)
   if (::symlink(to.c_str(), new_symlink.c_str()))
     ec.assign(errno, std::generic_category());
   else
@@ -869,8 +878,8 @@ fs::current_path(error_code& ec)
 {
   path p;
 #ifdef _GLIBCXX_HAVE_UNISTD_H
-#ifdef __GLIBC__
-  if (char_ptr cwd = char_ptr{::getcwd(nullptr, 0)})
+#if defined(__GLIBC__) || defined(_GLIBCXX_FILESYSTEM_IS_WINDOWS)
+  if (char_ptr cwd = char_ptr{::os_getcwd(nullptr, 0)})
     {
       p.assign(cwd.get());
       ec.clear();
@@ -928,7 +937,7 @@ void
 fs::current_path(const path& p, error_code& ec) noexcept
 {
 #ifdef _GLIBCXX_HAVE_UNISTD_H
-  if (::chdir(p.c_str()))
+  if (::os_chdir(p.c_str()))
     ec.assign(errno, std::generic_category());
   else
     ec.clear();
@@ -955,14 +964,14 @@ fs::equivalent(const path& p1, const path& p2, error_code& ec) noexcept
   int err = 0;
   file_status s1, s2;
   stat_type st1, st2;
-  if (::stat(p1.c_str(), &st1) == 0)
+  if (::os_stat(p1.c_str(), &st1) == 0)
     s1 = make_file_status(st1);
   else if (is_not_found_errno(errno))
     s1.type(file_type::not_found);
   else
     err = errno;
 
-  if (::stat(p2.c_str(), &st2) == 0)
+  if (::os_stat(p2.c_str(), &st2) == 0)
     s2 = make_file_status(st2);
   else if (is_not_found_errno(errno))
     s2.type(file_type::not_found);
@@ -1012,7 +1021,7 @@ namespace
     {
 #ifdef _GLIBCXX_HAVE_SYS_STAT_H
       stat_type st;
-      if (::stat(p.c_str(), &st))
+      if (::os_stat(p.c_str(), &st))
 	{
 	  ec.assign(errno, std::generic_category());
 	  return deflt;
@@ -1062,8 +1071,14 @@ fs::hard_link_count(const path& p)
 std::uintmax_t
 fs::hard_link_count(const path& p, error_code& ec) noexcept
 {
+#ifndef _GLIBCXX_FILESYSTEM_IS_WINDOWS
   return do_stat(p, ec, std::mem_fn(&stat::st_nlink),
 		 static_cast<uintmax_t>(-1));
+#else
+  ec = std::make_error_code(std::errc::not_supported);
+
+  return static_cast<uintmax_t>(-1);
+#endif // _GLIBCXX_FILESYSTEM_IS_WINDOWS
 }
 
 bool
@@ -1138,11 +1153,11 @@ fs::last_write_time(const path& p __attribute__((__unused__)),
   else
     ec.clear();
 #elif _GLIBCXX_HAVE_UTIME_H
-  ::utimbuf times;
+  ::os_utimbuf_t times;
   times.modtime = s.count();
   times.actime = do_stat(p, ec, [](const auto& st) { return st.st_atime; },
 			 times.modtime);
-  if (::utime(p.c_str(), &times))
+  if (::os_utime(p.c_str(), &times))
     ec.assign(errno, std::generic_category());
   else
     ec.clear();
@@ -1195,7 +1210,7 @@ fs::permissions(const path& p, perms prms, error_code& ec) noexcept
 #else
   if (nofollow && is_symlink(st))
     ec = std::make_error_code(std::errc::operation_not_supported);
-  else if (::chmod(p.c_str(), static_cast<mode_t>(prms)))
+  else if (::os_chmod(p.c_str(), static_cast<mode_t>(prms)))
     err = errno;
 #endif
 
@@ -1218,7 +1233,7 @@ fs::read_symlink(const path& p)
 fs::path fs::read_symlink(const path& p, error_code& ec)
 {
   path result;
-#ifdef _GLIBCXX_HAVE_SYS_STAT_H
+#if !defined(_GLIBCXX_FILESYSTEM_IS_WINDOWS) && defined(_GLIBCXX_HAVE_SYS_STAT_H)
   stat_type st;
   if (::lstat(p.c_str(), &st))
     {
@@ -1272,7 +1287,7 @@ fs::remove(const path& p)
 bool
 fs::remove(const path& p, error_code& ec) noexcept
 {
-  if (::remove(p.c_str()) == 0)
+  if (::os_remove(p.c_str()) == 0)
     {
       ec.clear();
       return true;
@@ -1334,7 +1349,7 @@ fs::rename(const path& from, const path& to)
 void
 fs::rename(const path& from, const path& to, error_code& ec) noexcept
 {
-  if (::rename(from.c_str(), to.c_str()))
+  if (::os_rename(from.c_str(), to.c_str()))
     ec.assign(errno, std::generic_category());
   else
     ec.clear();
@@ -1355,7 +1370,7 @@ fs::resize_file(const path& p, uintmax_t size, error_code& ec) noexcept
 #ifdef _GLIBCXX_HAVE_UNISTD_H
   if (size > static_cast<uintmax_t>(std::numeric_limits<off_t>::max()))
     ec.assign(EINVAL, std::generic_category());
-  else if (::truncate(p.c_str(), size))
+  else if (::os_truncate(p.c_str(), size))
     ec.assign(errno, std::generic_category());
   else
     ec.clear();
@@ -1409,7 +1424,7 @@ fs::status(const fs::path& p, error_code& ec) noexcept
 {
   file_status status;
   stat_type st;
-  if (::stat(p.c_str(), &st))
+  if (::os_stat(p.c_str(), &st))
     {
       int err = errno;
       ec.assign(err, std::generic_category());
@@ -1427,11 +1442,13 @@ fs::status(const fs::path& p, error_code& ec) noexcept
     }
   return status;
 }
+#endif // _GLIBCXX_FILESYSTEM_IS_WINDOWS
 
 fs::file_status
 fs::symlink_status(const fs::path& p, std::error_code& ec) noexcept
 {
   file_status status;
+#if !defined(_GLIBCXX_FILESYSTEM_IS_WINDOWS) && defined(_GLIBCXX_HAVE_SYS_STAT_H)
   stat_type st;
   if (::lstat(p.c_str(), &st))
     {
@@ -1445,9 +1462,11 @@ fs::symlink_status(const fs::path& p, std::error_code& ec) noexcept
       status = make_file_status(st);
       ec.clear();
     }
+#else
+  ec = std::make_error_code(std::errc::not_supported);
+#endif
   return status;
 }
-#endif
 
 fs::file_status
 fs::status(const fs::path& p)
diff --git a/libstdc++-v3/src/filesystem/path.cc b/libstdc++-v3/src/filesystem/path.cc
index 1d9e7dca102..e21d5e3e840 100644
--- a/libstdc++-v3/src/filesystem/path.cc
+++ b/libstdc++-v3/src/filesystem/path.cc
@@ -296,7 +296,7 @@ path::has_filename() const
 std::pair<const path::string_type*, std::size_t>
 path::_M_find_extension() const
 {
-  const std::string* s = nullptr;
+  const path::string_type* s = nullptr;
 
   if (_M_type != _Type::_Multi)
     s = &_M_pathname;
diff --git a/libtool.m4 b/libtool.m4
index 24d13f34409..e905d58ca24 100644
--- a/libtool.m4
+++ b/libtool.m4
@@ -1513,6 +1513,12 @@ AC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)
     # This has been around since 386BSD, at least.  Likely further.
     if test -x /sbin/sysctl; then
@@ -1728,7 +1734,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -2204,14 +2210,14 @@ bsdi[[45]]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -2235,7 +2241,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 m4_if([$1], [],[
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"])
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -2841,7 +2847,7 @@ if test "$GCC" = yes; then
   # Check if gcc -print-prog-name=ld gives a path.
   AC_MSG_CHECKING([for ld used by $CC])
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -4403,7 +4409,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,
       # as there is no search path for DLLs.
       _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
@@ -4776,7 +4782,7 @@ _LT_EOF
       _LT_TAGVAR(export_dynamic_flag_spec, $1)=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -5720,7 +5726,7 @@ if test "$_lt_caught_CXX_error" != yes; then
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,
         # as there is no search path for DLLs.
         _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
diff --git a/libvtv/configure b/libvtv/configure
index dfb9162c79f..f6f65a82b1f 100755
--- a/libvtv/configure
+++ b/libvtv/configure
@@ -6269,7 +6269,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -9800,7 +9800,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -10231,7 +10231,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -11132,14 +11132,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -11163,7 +11163,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -11794,7 +11794,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -12668,7 +12668,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -13021,7 +13021,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,
         # as there is no search path for DLLs.
         hardcode_libdir_flag_spec_CXX='-L$libdir'
@@ -14794,14 +14794,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -14824,7 +14824,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -15429,7 +15429,7 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu
 
 
 case $host in
-  *-cygwin* | *-mingw*)
+  *-cygwin* | *-mingw* | *-msys*)
     # 'host' will be top-level target in the case of a target lib,
     # we must compare to with_cross_host to decide if this is a native
     # or cross-compiler and select where to install dlls appropriately.
@@ -15472,7 +15472,7 @@ if test "x$VTV_SUPPORTED" = "xyes"; then
 fi
 
 case "$target_os" in
-  cygwin*|mingw32*)
+  cygwin*|mingw*)
     vtv_cygmin="yes"
     ;;
   *)
diff --git a/libvtv/configure.ac b/libvtv/configure.ac
index 33b1e7913c6..095925d5b15 100644
--- a/libvtv/configure.ac
+++ b/libvtv/configure.ac
@@ -177,7 +177,7 @@ _EOF
 fi
 
 case "$target_os" in
-  cygwin*|mingw32*)
+  cygwin*|mingw*)
     vtv_cygmin="yes"
     ;;
   *)
diff --git a/lto-plugin/configure b/lto-plugin/configure
index cdea9eac3ee..437bad465b9 100755
--- a/lto-plugin/configure
+++ b/lto-plugin/configure
@@ -5671,7 +5671,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -9203,7 +9203,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -9634,7 +9634,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -10535,14 +10535,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -10566,7 +10566,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -11197,7 +11197,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -11816,7 +11816,7 @@ CC="$lt_save_CC"
 
 
 case $host in
-  *-cygwin* | *-mingw*)
+  *-cygwin* | *-mingw* | *-msys*)
     # 'host' will be top-level target in the case of a target lib,
     # we must compare to with_cross_host to decide if this is a native
     # or cross-compiler and select where to install dlls appropriately.
diff --git a/zlib/configure b/zlib/configure
index ee5527c4a40..790129cc58e 100755
--- a/zlib/configure
+++ b/zlib/configure
@@ -4306,7 +4306,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -4658,6 +4658,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
@@ -8113,7 +8119,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -8550,7 +8556,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -9454,14 +9460,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -9485,7 +9491,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -10119,7 +10125,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
