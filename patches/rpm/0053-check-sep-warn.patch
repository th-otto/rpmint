From ec97e802087cead17b1f25ae9c8cfdf6891fb085 Mon Sep 17 00:00:00 2001
From: Thorsten Otto <admin@tho-otto.de>
Date: Thu, 15 Mar 2018 06:00:05 +0100
Subject: [PATCH 53/63] check sep warn

---
 build/parseReqs.c | 13 ++++++++++---
 macros.in         |  2 +-
 2 files changed, 11 insertions(+), 4 deletions(-)

diff --git a/build/parseReqs.c b/build/parseReqs.c
index 705d4cbbe..bd65153db 100644
--- a/build/parseReqs.c
+++ b/build/parseReqs.c
@@ -42,7 +42,7 @@ static rpmRC checkEpoch(const char *s, char **emsg)
     return RPMRC_OK;
 }
 
-static rpmRC checkDep(rpmSpec spec, char *N, char *EVR, char **emsg)
+static rpmRC checkDep(rpmSpec spec, rpmsenseFlags tagflags, char *N, char *EVR, char **emsg)
 {
     /* 
      * Tokens must begin with alphanumeric, _, or /, but we don't know
@@ -65,6 +65,11 @@ static rpmRC checkDep(rpmSpec spec, char *N, char *EVR, char **emsg)
 
 	    if (rpmExpandNumeric("%{?_wrong_version_format_terminate_build}"))
 		return RPMRC_FAIL;
+	    if (tagflags & (RPMSENSE_FIND_REQUIRES|RPMSENSE_FIND_PROVIDES))
+		rpmlog(RPMLOG_WARNING, "%s\n", *emsg);
+	    else
+		rpmlog(RPMLOG_WARNING, _("line %d: %s: %s\n"), spec->lineNum, *emsg, spec->line);
+	    *emsg = _free(*emsg);
 	}
     }
     return RPMRC_OK;
@@ -72,6 +77,7 @@ static rpmRC checkDep(rpmSpec spec, char *N, char *EVR, char **emsg)
 
 struct parseRCPOTRichData {
     rpmSpec spec;
+    rpmsenseFlags tagflags;
     StringBuf sb;
 };
 
@@ -109,7 +115,7 @@ static rpmRC parseRCPOTRichCB(void *cbdata, rpmrichParseType type,
 	    appendStringBuf(sb, rel);
 	    appendStringBuf(sb, EVR);
 	}
-	rc = checkDep(data->spec, N, EVR, emsg);
+	rc = checkDep(data->spec, data->tagflags, N, EVR, emsg);
 	_free(N);
 	_free(EVR);
     } else if (type == RPMRICH_PARSE_OP) {
@@ -223,6 +229,7 @@ rpmRC parseRCPOT(rpmSpec spec, Package pkg, const char *field, rpmTagVal tagN,
 		goto exit;
 	    }
 	    data.spec = spec;
+	    data.tagflags = tagflags;
 	    data.sb = newStringBuf();
 	    if (rpmrichParseForTag(&r, &emsg, parseRCPOTRichCB, &data, nametag) != RPMRC_OK) {
 		freeStringBuf(data.sb);
@@ -274,7 +281,7 @@ rpmRC parseRCPOT(rpmSpec spec, Package pkg, const char *field, rpmTagVal tagN,
 	}
 
 	/* check that dependency is well-formed */
-	if (checkDep(spec, N, EVR, &emsg))
+	if (checkDep(spec, tagflags, N, EVR, &emsg))
 	    goto exit;
 
 	if (nametag == RPMTAG_FILETRIGGERNAME ||
diff --git a/macros.in b/macros.in
index 722cae8cc..0e562029c 100644
--- a/macros.in
+++ b/macros.in
@@ -456,7 +456,7 @@ package or when debugging this package.\
 %_invalid_encoding_terminates_build 0
 
 # Should invalid version format in requires, provides, ... terminate a build?
-%_wrong_version_format_terminate_build 1
+%_wrong_version_format_terminate_build 0
 
 #
 # Should rpm try to download missing sources at build-time?
-- 
2.16.2

