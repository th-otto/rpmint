diff -rup gtk+-1.2.10.orig/configure.in gtk+-1.2.10/configure.in
--- gtk+-1.2.10.orig/configure.in	2001-03-15 21:31:58.000000000 +0100
+++ gtk+-1.2.10/configure.in	2023-03-27 15:37:33.651587388 +0200
@@ -1,5 +1,5 @@
 # Process this file with autoconf to produce a configure script.
-AC_INIT(gdk/gdktypes.h)
+AC_PREREQ([2.59])
 
 # In the following, there are a the following variants
 # of GLib cflags and libs variables
@@ -15,9 +15,6 @@ AC_INIT(gdk/gdktypes.h)
 # Save this value here, since automake will set cflags later
 cflags_set=${CFLAGS+set}
 
-dnl we need to AC_DIVERT_PUSH/AC_DIVERT_POP these variable definitions so they
-dnl are available for $ac_help expansion (don't we all *love* autoconf?)
-AC_DIVERT_PUSH(AC_DIVERSION_NOTICE)dnl
 #
 # Making releases:
 #   GTK_MICRO_VERSION += 1;
@@ -27,14 +24,24 @@ AC_DIVERT_PUSH(AC_DIVERSION_NOTICE)dnl
 # if backwards compatibility has been broken,
 # set GTK_BINARY_AGE and GTK_INTERFACE_AGE to 0.
 #
-GTK_MAJOR_VERSION=1
-GTK_MINOR_VERSION=2
-GTK_MICRO_VERSION=10
-GTK_INTERFACE_AGE=1
-GTK_BINARY_AGE=10
-GTK_VERSION=$GTK_MAJOR_VERSION.$GTK_MINOR_VERSION.$GTK_MICRO_VERSION
+m4_define([gtk_major_version], [1])
+m4_define([gtk_minor_version], [2])
+m4_define([gtk_micro_version], [10])
+m4_define([gtk_interface_age], [1])
+m4_define([gtk_binary_age], [10])
+m4_define([gtk_version],
+          [gtk_major_version.gtk_minor_version.gtk_micro_version])
+
+AC_CONFIG_SRCDIR([gdk/gdktypes.h])
+AC_INIT([gtk+],[gtk_version],[http://bugzilla.gnome.org/enter_bug.cgi?product=glib],[],[])
+
+GTK_MAJOR_VERSION=gtk_major_version
+GTK_MINOR_VERSION=gtk_minor_version
+GTK_MICRO_VERSION=gtk_micro_version
+GTK_INTERFACE_AGE=gtk_interface_age
+GTK_BINARY_AGE=gtk_binary_age
+GTK_VERSION=gtk_major_version.gtk_minor_version.gtk_micro_version
 dnl
-AC_DIVERT_POP()dnl
 
 AC_SUBST(GTK_MAJOR_VERSION)
 AC_SUBST(GTK_MINOR_VERSION)
@@ -53,21 +60,21 @@ AC_SUBST(LT_CURRENT)
 AC_SUBST(LT_REVISION)
 AC_SUBST(LT_AGE)
 
-# For automake.
-VERSION=$GTK_VERSION
-PACKAGE=gtk+
-
 # Save this value here, since automake will set cflags later
 cflags_set=${CFLAGS+set}
 
 dnl Initialize automake stuff
-AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)
+AM_INIT_AUTOMAKE(no-define)
+
+# For automake.
+VERSION=$GTK_VERSION
+PACKAGE=gtk+
 
 # Specify a configuration file
-AM_CONFIG_HEADER(config.h)
+AC_CONFIG_HEADERS([config.h])
 
 dnl Initialize libtool
-AM_PROG_LIBTOOL
+LT_INIT
 
 dnl Initialize maintainer mode
 AM_MAINTAINER_MODE
@@ -76,13 +83,11 @@ AC_CANONICAL_HOST
 
 dnl figure debugging default, prior to $ac_help setup
 dnl
-AC_DIVERT_PUSH(AC_DIVERSION_NOTICE)dnl
 if test `expr $GTK_MINOR_VERSION \% 2` = 1 ; then
         debug_default=yes
 else
         debug_default=minimum
 fi
-AC_DIVERT_POP()dnl
 
 dnl declare --enable-* args and collect ac_help strings
 AC_ARG_ENABLE(debug, [  --enable-debug=[no/minimum/yes] turn on debugging [default=$debug_default]],,enable_debug=$debug_default)
@@ -119,8 +124,7 @@ AM_SANITY_CHECK
 
 # Checks for programs.
 AC_PROG_CC
-AC_ISC_POSIX
-AM_PROG_CC_STDC
+AC_SEARCH_LIBS([strerror],[cposix])
 AC_PROG_INSTALL
 AC_PROG_MAKE_SET
 
@@ -166,22 +170,6 @@ if test "x$enable_rebuilds" = "xyes" &&
 fi
 AC_SUBST(REBUILD)
 
-AC_MSG_CHECKING(whether make is GNU Make)
-STRIP_BEGIN=
-STRIP_END=
-if $ac_make --version 2>/dev/null | grep '^GNU Make ' >/dev/null ; then
-	STRIP_BEGIN='$(strip $(STRIP_DUMMY)'
-	STRIP_END=')'
-	AC_MSG_RESULT(yes)
-else
-	AC_MSG_RESULT(no)
-fi
-dnl some Make 3.79 $(strip ) versions are broken and require an empty arg
-STRIP_DUMMY=
-AC_SUBST(STRIP_DUMMY)
-AC_SUBST(STRIP_BEGIN)
-AC_SUBST(STRIP_END)
-
 # i18n stuff
 ALL_LINGUAS="az ca cs da de el es et eu fi fr ga gl hr hu it ja ko lt nl no nn pl pt pt_BR ro ru sk sl sp sr sv tr uk vi wa zh_CN.GB2312 zh_TW.Big5"
 AM_GTK_GNU_GETTEXT
@@ -198,31 +186,31 @@ AC_MSG_CHECKING([for extra flags to get
 
 gtk_save_LIBS=$LIBS
 LIBS="$LIBS -lm"
-AC_TRY_RUN([#include <math.h>
-             int main (void) { return (log(1) != log(1.)); }],
-     AC_MSG_RESULT(none needed),
-     gtk_save_CFLAGS=$CFLAGS
+AC_RUN_IFELSE([AC_LANG_SOURCE([[#include <math.h>
+             int main (void) { return (log(1) != log(1.)); }]])],
+     AC_MSG_RESULT([none needed]),
+     [gtk_save_CFLAGS=$CFLAGS
      CFLAGS="$CFLAGS -std1"
-     AC_TRY_RUN([#include <math.h>
-	         int main (void) { return (log(1) != log(1.)); }],
-         AC_MSG_RESULT(-std1),
-         AC_MSG_RESULT()
+     AC_RUN_IFELSE([AC_LANG_SOURCE([[#include <math.h>
+	         int main (void) { return (log(1) != log(1.)); }]])],
+         [AC_MSG_RESULT(-std1)],
+         [AC_MSG_RESULT()
          CFLAGS=$gtk_save_CFLAGS
          AC_MSG_WARN(
-                [No ANSI prototypes found in library. (-std1 didn't work.)]),
-	 true
-     ),
-     AC_MSG_RESULT(none needed)
+                [No ANSI prototypes found in library. (-std1 didn't work.)])],
+	 [AC_MSG_RESULT([guessing none needed])]
+     )],
+     [AC_MSG_RESULT([guessing none needed])]
 )
 LIBS=$gtk_save_LIBS
 
 dnl NeXTStep cc seems to need this
 AC_MSG_CHECKING([for extra flags for POSIX compliance])
-AC_TRY_COMPILE([#include <dirent.h>], [DIR *dir;],
+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <dirent.h>]], [[DIR *dir;]])],
   AC_MSG_RESULT(none needed),
   gtk_save_CFLAGS=$CFLAGS
   CFLAGS="$CFLAGS -posix"
-  AC_TRY_COMPILE([#include <dirent.h>], [DIR *dir;],
+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <dirent.h>]], [[DIR *dir;]])],
     AC_MSG_RESULT(-posix),
     AC_MSG_RESULT()
     CFLAGS=$gtk_save_CFLAGS
@@ -243,9 +231,9 @@ if test x$with_glib = x ; then
     gmodule gthread)
 
   # we do not want to make all gtk progs to link to thread libraries.
-  glib_cflags=`$GLIB_CONFIG glib gmodule --cflags`
+  glib_cflags=`pkg-config --cflags glib gmodule`
   glib_thread_cflags="$GLIB_CFLAGS"
-  glib_libs=`$GLIB_CONFIG glib gmodule --libs`
+  glib_libs=`pkg-config --libs glib gmodule`
   glib_thread_libs="$GLIB_LIBS"
   GLIB_LIBS="$glib_libs"
   GLIB_DEPLIBS="$glib_libs"
@@ -295,10 +283,6 @@ AC_SUBST(GLIB_DEPLIBS)
 AC_PATH_X
 AC_PATH_XTRA
 
-if test "x$x_includes" = "x"; then
-  x_includes="/usr/include"
-fi
-
 saved_cflags="$CFLAGS"
 saved_ldflags="$LDFLAGS"
 
@@ -427,7 +411,7 @@ fi
 
 AC_MSG_CHECKING(need -DX_LOCALE)
 
-AC_TRY_RUN([
+AC_RUN_IFELSE([AC_LANG_SOURCE([[
 #include <stdio.h>
 #include <locale.h>
 
@@ -435,7 +419,7 @@ int
 main ()
 {
   return setlocale (LC_ALL, "${with_locale}") == NULL;
-}],
+}]])],
 need_x_locale=no,
 need_x_locale=yes,
 need_x_locale=no)
@@ -448,12 +432,12 @@ else
   if test x$with_native_locale = xyes ; then
     AC_MSG_CHECKING(functioning locale support)
   
-    AC_TRY_COMPILE([#include <stdlib.h>],[
+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdlib.h>]],[[
           char c;
           if (MB_CUR_MAX == 1) {
               wctomb(&c, 42);
           }
-    ],use_native_locale=yes,)
+    ]])],use_native_locale=yes,)
 
     AC_MSG_RESULT($use_native_locale)
   fi
@@ -462,15 +446,12 @@ fi
 if test x$use_native_locale = xyes ; then
   AC_MSG_CHECKING(if sizeof(wchar_t) == 4)
 
-  AC_TRY_RUN([
+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
   #include <stdlib.h>
-
-  int
-  main ()
-  {
-    return (sizeof(wchar_t) == 4) ? 0 : 1;
-  }],
-  ,use_native_locale=no,:)
+  #include <wchar.h>
+  int a[sizeof(wchar_t) == 4 ? 1 : -1];
+  ]],[[]])],
+  ,use_native_locale=no)
   AC_MSG_RESULT($use_native_locale)
 fi
 
@@ -479,13 +460,23 @@ if test $use_native_locale = yes ; then
 fi
 
 # Checks for header files.
-AC_HEADER_STDC
+AC_CHECK_INCLUDES_DEFAULT
+AC_PROG_EGREP
 
 # Checks for typedefs, structures, and compiler characteristics.
 AC_C_CONST
 
 # Checks for library functions.
-AC_TYPE_SIGNAL
+AC_CACHE_CHECK([return type of signal handlers],[ac_cv_type_signal],[AC_COMPILE_IFELSE(
+[AC_LANG_PROGRAM([[#include <sys/types.h>
+#include <signal.h>
+]],
+		 [[return *(signal (0, 0)) (0) == 1;]])],
+		   [ac_cv_type_signal=int],
+		   [ac_cv_type_signal=void])])
+AC_DEFINE_UNQUOTED([RETSIGTYPE],[$ac_cv_type_signal],[Define as the return type of signal handlers
+		    (`int' or `void').])
+
 AC_FUNC_MMAP
 
 AC_CHECK_FUNCS(getresuid)
@@ -493,12 +484,12 @@ AC_TYPE_UID_T
 
 # Check if <sys/select.h> needs to be included for fd_set
 AC_MSG_CHECKING([for fd_set])
-AC_TRY_COMPILE([#include <sys/types.h>],
-        [fd_set readMask, writeMask;], gtk_ok=yes, gtk_ok=no)
+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>]],
+        [[fd_set readMask, writeMask;]])], gtk_ok=yes, gtk_ok=no)
 if test $gtk_ok = yes; then
     AC_MSG_RESULT([yes, found in sys/types.h])
 else
-    AC_HEADER_EGREP(fd_mask, sys/select.h, gtk_ok=yes)
+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/select.h]],[[]])], gtk_ok=yes, gtk_ok=no)
     if test $gtk_ok = yes; then
         AC_DEFINE(HAVE_SYS_SELECT_H)
         AC_MSG_RESULT([yes, found in sys/select.h])
@@ -510,16 +501,16 @@ fi
 
 # Duplicate `widechar' tests from `glib'.
 # Check for wchar.h
-AC_MSG_CHECKING(for wchar.h)
-AC_TRY_CPP([#include <wchar.h>], gtk_ok=yes, gtk_ok=no)
+AC_MSG_CHECKING([for wchar.h])
+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <wchar.h>]], [[]])], gtk_ok=yes, gtk_ok=no)
 if test $gtk_ok = yes; then
    AC_DEFINE(HAVE_WCHAR_H,1,[Define if wchar.h exists])
 fi
 AC_MSG_RESULT($gtk_ok)
 
 # Check for wctype.h (for iswalnum)
-AC_MSG_CHECKING(for wctype.h)
-AC_TRY_CPP([#include <wctype.h>], gtk_ok=yes, gtk_ok=no)
+AC_MSG_CHECKING([for wctype.h])
+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <wctype.h>]],[[]])], gtk_ok=yes, gtk_ok=no)
 if test $gtk_ok = yes; then
    AC_DEFINE(HAVE_WCTYPE_H,1,[Define if wctype.h exists])
 fi
@@ -532,8 +523,8 @@ AC_CHECK_FUNC(iswalnum,,[AC_CHECK_LIB(w,
 # The following is necessary for Linux libc-5.4.38
 oLIBS="$LIBS"
 LIBS="$LIBS $GDK_WLIBS"
-AC_MSG_CHECKING(if iswalnum() and friends are properly defined)
-AC_TRY_LINK([#include <stdlib.h>],[
+AC_MSG_CHECKING([if iswalnum() and friends are properly defined])
+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdlib.h>]],[[
 #if (defined(HAVE_WCTYPE_H) || defined(HAVE_WCHAR_H))
 #  ifdef HAVE_WCTYPE_H
 #    include <wctype.h>
@@ -546,7 +537,7 @@ AC_TRY_LINK([#include <stdlib.h>],[
 #  define iswalnum(c) ((wchar_t)(c) <= 0xFF && isalnum(c))
 #endif
 iswalnum((wchar_t) 0);
-], gtk_ok=yes, gtk_ok=no)
+]])], gtk_ok=yes, gtk_ok=no)
 LIBS="$oLIBS"
 
 if test $gtk_ok = no; then
@@ -560,7 +551,7 @@ AC_SUBST(GTK_DEBUG_FLAGS)
 AC_SUBST(GTK_XIM_FLAGS)
 AC_SUBST(GTK_LOCALE_FLAGS)
 
-AC_OUTPUT([
+AC_CONFIG_FILES([
 gtk+.spec
 docs/gtk-config.1
 Makefile
@@ -573,3 +564,5 @@ gtk/gtkfeatures.h
 gdk.pc
 gtk+.pc
 ], [chmod +x gtk-config])
+
+AC_OUTPUT
diff -rup gtk+-1.2.10.orig/docs/Makefile.am gtk+-1.2.10/docs/Makefile.am
--- gtk+-1.2.10.orig/docs/Makefile.am	2001-03-28 21:52:28.000000000 +0200
+++ gtk+-1.2.10/docs/Makefile.am	2023-03-27 15:26:50.584342935 +0200
@@ -166,7 +166,7 @@ files:
 	  echo $$p; \
 	done
 
-EXTRA_DIST += \
+EXTRA_DIST = \
 	Changes-1.2.txt			\
 	debugging.txt			\
 	developers.txt			\
diff -rup gtk+-1.2.10.orig/gdk/Makefile.am gtk+-1.2.10/gdk/Makefile.am
--- gtk+-1.2.10.orig/gdk/Makefile.am	2000-10-21 20:20:40.000000000 +0200
+++ gtk+-1.2.10/gdk/Makefile.am	2023-03-27 15:32:04.819973737 +0200
@@ -1,14 +1,13 @@
 ## Makefile.am for gtk+/gdk
 
-INCLUDES = @STRIP_BEGIN@ \
+AM_CPPFLAGS = \
 	-DG_LOG_DOMAIN=\"Gdk\"	\
 	-I$(top_srcdir)		\
 	@GTK_DEBUG_FLAGS@ 	\
 	@GTK_XIM_FLAGS@		\
 	@GTK_LOCALE_FLAGS@	\
 	@GLIB_CFLAGS@		\
-	@x_cflags@ 		\
-@STRIP_END@
+	@x_cflags@
 
 #
 # libraries to compile and install
@@ -17,21 +16,20 @@ lib_LTLIBRARIES = libgdk.la
 
 # libtool stuff: set version and export symbols for resolving
 libgdkincludedir = $(includedir)/gtk-1.2/gdk
-libgdk_la_LDFLAGS = @STRIP_BEGIN@ \
+libgdk_la_LDFLAGS = \
 	-version-info $(LT_CURRENT):$(LT_REVISION):$(LT_AGE) \
 	-release $(LT_RELEASE) \
 	-export-dynamic \
 	@GLIB_DEPLIBS@	\
 	@x_ldflags@	\
 	@x_libs@	\
-	-lm		\
-@STRIP_END@
+	-lm
 
 #
 # setup source file variables
 #
 # GDK header files for public installation (non-generated)
-gdk_public_h_sources = @STRIP_BEGIN@ \
+gdk_public_h_sources = \
 	gdk.h		\
 	gdkcursors.h	\
 	gdkrgb.h	\
@@ -39,9 +37,9 @@ gdk_public_h_sources = @STRIP_BEGIN@ \
 	gdkkeysyms.h	\
 	gdkprivate.h	\
 	gdktypes.h	\
-	gdkx.h		\
-@STRIP_END@
-gdk_c_sources = @STRIP_BEGIN@ \
+	gdkx.h
+
+gdk_c_sources = \
 	gdk.c		\
 	gdkcc.c		\
 	gdkcolor.c	\
@@ -72,18 +70,16 @@ gdk_c_sources = @STRIP_BEGIN@ \
 	MwmUtil.h       \
 	gxid_lib.h	\
 	gxid_proto.h	\
-        gxid_lib.c	\
-@STRIP_END@
+        gxid_lib.c
 
 #
 # setup GDK sources and their dependancies
 #
 libgdkinclude_HEADERS = $(gdk_public_h_sources)
 libgdk_la_SOURCES = $(gdk_c_sources)
-MAINTAINERCLEANFILES +=
-EXTRA_HEADERS +=
-EXTRA_DIST +=
-EXTRA_DIST +=
+MAINTAINERCLEANFILES =
+EXTRA_HEADERS =
+EXTRA_DIST =
 
 #
 # rules to generate built sources
@@ -103,12 +99,11 @@ X-derived-headers:
 #
 EXTRA_PROGRAMS = gxid
 bin_PROGRAMS = @xinput_progs@
-LDADDS = @STRIP_BEGIN@ \
+LDADDS = \
 	@x_ldflags@	\
 	@x_libs@	\
 	@GLIB_LIBS@	\
-	-lm		\
-@STRIP_END@
+	-lm
 gxid_SOURCES = gxid.c
 gxid_LDADD = $(LDADDS)
 
diff -rup gtk+-1.2.10.orig/gtk/Makefile.am gtk+-1.2.10/gtk/Makefile.am
--- gtk+-1.2.10.orig/gtk/Makefile.am	2001-02-02 18:09:02.000000000 +0100
+++ gtk+-1.2.10/gtk/Makefile.am	2023-03-27 15:30:41.756071329 +0200
@@ -1,6 +1,6 @@
 ## Makefile.am for gtk+/gtk
 
-INCLUDES = @STRIP_BEGIN@ \
+AM_CPPFLAGS = \
 	-DG_LOG_DOMAIN=\"Gtk\"				\
 	-DGTK_DISABLE_COMPAT_H				\
 	-DGTK_LIBDIR=\"$(libdir)\"	     	        \
@@ -12,8 +12,7 @@ INCLUDES = @STRIP_BEGIN@ \
 	@GTK_XIM_FLAGS@					\
 	@GTK_LOCALE_FLAGS@				\
 	@GLIB_CFLAGS@					\
-	@x_cflags@					\
-@STRIP_END@
+	@x_cflags@
 
 
 #
@@ -23,15 +22,14 @@ lib_LTLIBRARIES = libgtk.la
 
 # libtool stuff: set version and export symbols for resolving
 libgtkincludedir = $(includedir)/gtk-1.2/gtk
-libgtk_la_LDFLAGS = @STRIP_BEGIN@ \
+libgtk_la_LDFLAGS = \
 	-version-info $(LT_CURRENT):$(LT_REVISION):$(LT_AGE)	\
 	-release $(LT_RELEASE) 					\
 	-export-dynamic						\
 	@GLIB_DEPLIBS@ 						\
 	@x_ldflags@						\
 	@x_libs@ 						\
-	-lm							\
-@STRIP_END@
+	-lm
 #	$(top_builddir)/gdk/libgdk.la
 
 
@@ -39,7 +37,7 @@ libgtk_la_LDFLAGS = @STRIP_BEGIN@ \
 # setup source file variables
 #
 # GTK+ header files for public installation (non-generated)
-gtk_public_h_sources = @STRIP_BEGIN@ \
+gtk_public_h_sources = \
 	gtk.h			\
 	gtkaccelgroup.h		\
 	gtkaccellabel.h		\
@@ -148,13 +146,12 @@ gtk_public_h_sources = @STRIP_BEGIN@ \
 	gtkvscrollbar.h		\
 	gtkvseparator.h		\
 	gtkwidget.h		\
-	gtkwindow.h		\
-@STRIP_END@
+	gtkwindow.h
+
 # GTK+ header files that don't get installed
-gtk_private_h_sources = @STRIP_BEGIN@ \
-@STRIP_END@
+gtk_private_h_sources = 
 # GTK+ C sources to build the library from
-gtk_c_sources = @STRIP_BEGIN@ \
+gtk_c_sources = \
 	gtkaccelgroup.c		\
 	gtkaccellabel.c		\
 	gtkadjustment.c		\
@@ -262,8 +259,8 @@ gtk_c_sources = @STRIP_BEGIN@ \
 	gtkwidget.c		\
 	gtkwindow.c		\
 	fnmatch.c		\
-	fnmatch.h		\
-@STRIP_END@
+	fnmatch.h
+
 # we use our own built_sources variable rules to avoid automake's
 # BUILT_SOURCES oddities
 # we generate frequently rebuild files piggyback on a stamp file, so sources
@@ -271,7 +268,7 @@ gtk_c_sources = @STRIP_BEGIN@ \
 # content
 #
 # built sources that don't get installed
-gtk_built_sources = @STRIP_BEGIN@ \
+gtk_built_sources = \
 	stamp-gtk.defs		\
 	stamp-gtktypebuiltins.h	\
 	stamp-gtkmarshal.h	\
@@ -279,17 +276,17 @@ gtk_built_sources = @STRIP_BEGIN@ \
 	gtktypebuiltins_ids.c	\
 	gtktypebuiltins_evals.c	\
 	gtkmarshal.c		\
-	gtk.defs		\
-@STRIP_END@
+	gtk.defs
+
 # built sources that get installed with the header files
-gtk_built_public_sources = @STRIP_BEGIN@ \
+gtk_built_public_sources = \
 	gtkmarshal.h		\
-	gtktypebuiltins.h	\
-@STRIP_END@
+	gtktypebuiltins.h
+
 # non-header sources (headers should be specified in the above variables)
 # that don't serve as direct make target sources, i.e. they don't have
 # their own .lo rules and don't get publically installed
-gtk_extra_sources = @STRIP_BEGIN@ \
+gtk_extra_sources = \
 	gtkfeatures.h.in	\
 	makeenums.pl		\
 	makeenums.awk		\
@@ -298,22 +295,20 @@ gtk_extra_sources = @STRIP_BEGIN@ \
 	gtkargcollector.c	\
 	gtk-boxed.defs		\
 	genmarshal.pl		\
-	gtkmarshal.list		\
-@STRIP_END@
+	gtkmarshal.list
 # Extra headers that are used for enum type array/id generation
-gdk_headers = @STRIP_BEGIN@ \
+gdk_headers = \
 	../gdk/gdktypes.h	\
-	../gdk/gdkrgb.h		\
-@STRIP_END@
+	../gdk/gdkrgb.h
 
 #
 # setup GTK+ sources and their dependancies
 #
 libgtkinclude_HEADERS = $(gtk_public_h_sources) $(gtk_built_public_sources) gtkfeatures.h
 libgtk_la_SOURCES = $(gtk_c_sources)
-MAINTAINERCLEANFILES += $(gtk_built_public_sources) $(gtk_built_sources)
-EXTRA_HEADERS +=
-EXTRA_DIST += $(gtk_private_h_sources)
+MAINTAINERCLEANFILES = $(gtk_built_public_sources) $(gtk_built_sources)
+EXTRA_HEADERS =
+EXTRA_DIST = $(gtk_private_h_sources)
 EXTRA_DIST += $(gtk_built_sources) $(gtk_built_public_sources) $(gtk_extra_sources)
 
 #
@@ -321,7 +316,7 @@ EXTRA_DIST += $(gtk_built_sources) $(gtk
 #
 # setup autogeneration dependancies
 gen_sources = xgen-gdef xgen-gtbh xgen-gtbvc xgen-gtbic xgen-gtbec xgen-gmh xgen-gmc
-CLEANFILES += $(gen_sources)
+CLEANFILES = $(gen_sources)
 COPYING: $(gtk_built_public_sources) $(gtk_built_sources)
 $(OBJECTS): COPYING 	# this is our oldest-source-stamp
 # initial creation of the real stamp-* files
@@ -423,15 +418,15 @@ uninstall-local:
 #
 noinst_PROGRAMS = testgtk testinput testselection testrgb testdnd simple # testthreads
 DEPS = libgtk.la $(top_builddir)/gdk/libgdk.la
-LDADDS = @STRIP_BEGIN@ \
+LDADDS = \
 	libgtk.la			\
 	$(top_builddir)/gdk/libgdk.la	\
 	@x_ldflags@			\
 	@x_libs@			\
 	@GDK_WLIBS@			\
 	@GLIB_LIBS@			\
-	-lm				\
-@STRIP_END@
+	-lm
+
 testgtk_DEPENDENCIES = $(DEPS)
 testinput_DEPENDENCIES = $(DEPS)
 testselection_DEPENDENCIES = $(DEPS)
@@ -464,7 +459,7 @@ test-debug: testgtk
 	cd $$builddir; cd $(srcdir); \
 	$(SHELL) $$top_builddir/libtool --mode=execute gdb $$builddir/testgtk
 
-EXTRA_DIST += @STRIP_BEGIN@ \
+EXTRA_DIST += \
 	testgtk.1 		\
 	testgtkrc 		\
 	testgtkrc2 		\
@@ -485,5 +480,4 @@ EXTRA_DIST += @STRIP_BEGIN@ \
 	check-y.xpm		\
 	check-n.xpm		\
 	test.xpm		\
-	$(gtkconf_DATA)		\
-@STRIP_END@
+	$(gtkconf_DATA)
diff -rup gtk+-1.2.10.orig/gtk.m4 gtk+-1.2.10/gtk.m4
--- gtk+-1.2.10.orig/gtk.m4	1999-02-18 17:43:35.000000000 +0100
+++ gtk+-1.2.10/gtk.m4	2023-03-27 15:26:50.588342930 +0200
@@ -4,7 +4,7 @@
 dnl AM_PATH_GTK([MINIMUM-VERSION, [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND [, MODULES]]]])
 dnl Test for GTK, and define GTK_CFLAGS and GTK_LIBS
 dnl
-AC_DEFUN(AM_PATH_GTK,
+AC_DEFUN([AM_PATH_GTK],
 [dnl 
 dnl Get the cflags and libraries from the gtk-config script
 dnl
@@ -15,42 +15,35 @@ AC_ARG_WITH(gtk-exec-prefix,[  --with-gt
 AC_ARG_ENABLE(gtktest, [  --disable-gtktest       Do not try to compile and run a test GTK program],
 		    , enable_gtktest=yes)
 
-  for module in . $4
+  for module in gtk+ gmodule $4
   do
       case "$module" in
-         gthread) 
-             gtk_config_args="$gtk_config_args gthread"
+         gtk+|glib|gthread|gmodule)
+             gtk_config_args="$gtk_config_args $module"
          ;;
       esac
   done
 
   if test x$gtk_config_exec_prefix != x ; then
      gtk_config_args="$gtk_config_args --exec-prefix=$gtk_config_exec_prefix"
-     if test x${GTK_CONFIG+set} != xset ; then
-        GTK_CONFIG=$gtk_config_exec_prefix/bin/gtk-config
-     fi
   fi
   if test x$gtk_config_prefix != x ; then
      gtk_config_args="$gtk_config_args --prefix=$gtk_config_prefix"
-     if test x${GTK_CONFIG+set} != xset ; then
-        GTK_CONFIG=$gtk_config_prefix/bin/gtk-config
-     fi
   fi
 
-  AC_PATH_PROG(GTK_CONFIG, gtk-config, no)
   min_gtk_version=ifelse([$1], ,0.99.7,$1)
   AC_MSG_CHECKING(for GTK - version >= $min_gtk_version)
   no_gtk=""
-  if test "$GTK_CONFIG" = "no" ; then
+  if test "" = "no" ; then
     no_gtk=yes
   else
-    GTK_CFLAGS=`$GTK_CONFIG $gtk_config_args --cflags`
-    GTK_LIBS=`$GTK_CONFIG $gtk_config_args --libs`
-    gtk_config_major_version=`$GTK_CONFIG $gtk_config_args --version | \
+    GTK_CFLAGS=`pkg-config --cflags $gtk_config_args`
+    GTK_LIBS=`pkg-config --libs $gtk_config_args`
+    gtk_config_major_version=`pkg-config --modversion gtk+ | \
            sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\1/'`
-    gtk_config_minor_version=`$GTK_CONFIG $gtk_config_args --version | \
+    gtk_config_minor_version=`pkg-config --modversion gtk+ | \
            sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\2/'`
-    gtk_config_micro_version=`$GTK_CONFIG $gtk_config_args --version | \
+    gtk_config_micro_version=`pkg-config --modversion gtk+ | \
            sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\3/'`
     if test "x$enable_gtktest" = "xyes" ; then
       ac_save_CFLAGS="$CFLAGS"
