diff --git a/Modules/Compiler/GNU.cmake b/Modules/Compiler/GNU.cmake
index d96268869..ec548cb91 100644
--- a/Modules/Compiler/GNU.cmake
+++ b/Modules/Compiler/GNU.cmake
@@ -13,14 +13,21 @@ include(Compiler/CMakeCommonCompilerMacros)
 macro(__compiler_gnu lang)
   # Feature flags.
   set(CMAKE_${lang}_VERBOSE_FLAG "-v")
-  set(CMAKE_${lang}_COMPILE_OPTIONS_PIC "-fPIC")
+  if (MINT)
+    set(CMAKE_${lang}_COMPILE_OPTIONS_PIC "")
+    set(CMAKE_SHARED_LIBRARY_${lang}_FLAGS "")
+  else()
+    set(CMAKE_${lang}_COMPILE_OPTIONS_PIC "-fPIC")
+    set(CMAKE_SHARED_LIBRARY_${lang}_FLAGS "-fPIC")
+  endif()
   if(NOT CMAKE_${lang}_COMPILER_VERSION VERSION_LESS 3.4)
-    set(CMAKE_${lang}_COMPILE_OPTIONS_PIE "-fPIE")
+    if (NOT MINT)
+      set(CMAKE_${lang}_COMPILE_OPTIONS_PIE "-fPIE")
+    endif()
   endif()
   if(NOT CMAKE_${lang}_COMPILER_VERSION VERSION_LESS 4.0)
     set(CMAKE_${lang}_COMPILE_OPTIONS_VISIBILITY "-fvisibility=")
   endif()
-  set(CMAKE_SHARED_LIBRARY_${lang}_FLAGS "-fPIC")
   set(CMAKE_SHARED_LIBRARY_CREATE_${lang}_FLAGS "-shared")
   set(CMAKE_${lang}_COMPILE_OPTIONS_SYSROOT "--sysroot=")
 
diff --git a/Modules/FindCUDA.cmake b/Modules/FindCUDA.cmake
index 119fc13ea..664f85979 100644
--- a/Modules/FindCUDA.cmake
+++ b/Modules/FindCUDA.cmake
@@ -864,7 +864,9 @@ if(CUDA_USE_STATIC_CUDA_RUNTIME)
     # -Werror causes the try_compile to fail.  We will just temporarily disable other flags
     # when doing the find_package command here.
     set(_cuda_cmake_c_flags ${CMAKE_C_FLAGS})
-    set(CMAKE_C_FLAGS "-fPIC")
+    if (NOT MINT)
+      set(CMAKE_C_FLAGS "-fPIC")
+    endif()
     find_package(Threads REQUIRED)
     set(CMAKE_C_FLAGS ${_cuda_cmake_c_flags})
 
@@ -1654,8 +1656,10 @@ function(_cuda_get_important_host_flags important_flags flag_string)
     string(REGEX MATCHALL "/M[DT][d]?" flags "${flag_string}")
     list(APPEND ${important_flags} ${flags})
   else()
-    string(REGEX MATCHALL "-fPIC" flags "${flag_string}")
-    list(APPEND ${important_flags} ${flags})
+    if (NOT MINT)
+      string(REGEX MATCHALL "-fPIC" flags "${flag_string}")
+      list(APPEND ${important_flags} ${flags})
+    endif()
   endif()
   set(${important_flags} ${${important_flags}} PARENT_SCOPE)
 endfunction()
diff --git a/Tests/CMakeLists.txt b/Tests/CMakeLists.txt
index 101502fdd..0fdaf33ab 100644
--- a/Tests/CMakeLists.txt
+++ b/Tests/CMakeLists.txt
@@ -520,7 +520,11 @@ if(BUILD_TESTING)
 
   if (APPLE OR CMAKE_CXX_COMPILER_ID MATCHES "GNU")
     include(CheckCXXCompilerFlag)
-    check_cxx_compiler_flag(-fPIE run_pic_test)
+    if (MINT)
+      set(run_pic_test 0)
+    else()
+      check_cxx_compiler_flag(-fPIE run_pic_test)
+    endif()
   else()
     if (CMAKE_CXX_COMPILER_ID MATCHES "PGI"
         OR CMAKE_CXX_COMPILER_ID MATCHES "PathScale"
diff --git a/Tests/ExportImport/Import/A/CMakeLists.txt b/Tests/ExportImport/Import/A/CMakeLists.txt
index 4e8eac2e7..4b8fb452e 100644
--- a/Tests/ExportImport/Import/A/CMakeLists.txt
+++ b/Tests/ExportImport/Import/A/CMakeLists.txt
@@ -274,7 +274,11 @@ endif()
 
 if (APPLE OR CMAKE_CXX_COMPILER_ID MATCHES "GNU")
   include(CheckCXXCompilerFlag)
-  check_cxx_compiler_flag(-fPIE run_pic_test)
+  if (MINT)
+    set(run_pic_test 0)
+  else()
+    check_cxx_compiler_flag(-fPIE run_pic_test)
+  endif()
 else()
   if (CMAKE_CXX_COMPILER_ID MATCHES "PGI"
       OR CMAKE_CXX_COMPILER_ID MATCHES "PathScale"
