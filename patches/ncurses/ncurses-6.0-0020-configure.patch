diff -rupN ncurses-5.9.orig/misc/run_tic.in ncurses-5.9/misc/run_tic.in
--- ncurses-5.9.orig/misc/run_tic.in	2014-02-26 05:01:56.787000040 +0100
+++ ncurses-5.9/misc/run_tic.in	2014-02-26 05:20:31.697000033 +0100
@@ -108,9 +108,6 @@ export SHLIB_HOST
 TERMINFO=${DESTDIR}$ticdir ; export TERMINFO
 umask 022
 
-# Construct the name of the old (obsolete) pathname, e.g., /usr/lib/terminfo.
-TICDIR=`echo $TERMINFO | sed -e 's%/share/\([^/]*\)$%/lib/\1%'`
-
 # Parent directory may not exist, which would confuse the install for hashed
 # database.  Fix.
 PARENT=`echo "$TERMINFO" | sed -e 's%/[^/]*$%%'`
@@ -165,37 +162,4 @@ else
 fi
 fi
 
-# Make a symbolic link to provide compatibility with applications that expect
-# to find terminfo under /usr/lib.  That is, we'll _try_ to do that.  Not
-# all systems support symbolic links, and those that do provide a variety
-# of options for 'test'.
-if test "$TICDIR" != "$TERMINFO" ; then
-	( rm -f $TICDIR 2>/dev/null )
-	if ( cd $TICDIR 2>/dev/null )
-	then
-		cd $TICDIR
-		TICDIR=`pwd`
-		if test $TICDIR != $TERMINFO ; then
-			# Well, we tried.  Some systems lie to us, so the
-			# installer will have to double-check.
-			echo "Verify if $TICDIR and $TERMINFO are the same."
-			echo "The new terminfo is in $TERMINFO; the other should be a link to it."
-			echo "Otherwise, remove $TICDIR and link it to $TERMINFO."
-		fi
-	else
-		cd ${DESTDIR}$prefix
-		# Construct a symbolic link that only assumes $ticdir has the
-		# same $prefix as the other installed directories.
-		RELATIVE=`echo $ticdir|sed -e 's%^'$prefix'/%%'`
-		if test "$RELATIVE" != "$ticdir" ; then
-			RELATIVE=../`echo $ticdir|sed -e 's%^'$prefix'/%%' -e 's%^/%%'`
-		fi
-		if ( @LN_S@ $RELATIVE $TICDIR )
-		then
-			echo '** sym-linked '$TICDIR' for compatibility'
-		else
-			echo '** could not sym-link '$TICDIR' for compatibility'
-		fi
-	fi
-fi
 # vile:shmode
