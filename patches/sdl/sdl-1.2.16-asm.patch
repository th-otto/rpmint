diff -rupN a/include/symbols.h b/include/symbols.h
--- a/include/symbols.h	1970-01-01 01:00:00.000000000 +0100
+++ b/include/symbols.h	2023-09-17 14:50:06.554556705 +0200
@@ -0,0 +1,54 @@
+#ifndef __USER_LABEL_PREFIX__
+#define __USER_LABEL_PREFIX__ _
+#endif
+
+#ifndef __REGISTER_PREFIX__
+#define __REGISTER_PREFIX__
+#endif
+
+#ifndef __IMMEDIATE_PREFIX__
+#define __IMMEDIATE_PREFIX__ #
+#endif
+
+#define CONCAT1(a, b) CONCAT2(a, b)
+#define CONCAT2(a, b) a ## b
+
+/* Use the right prefix for global labels.  */
+
+#define SYM(x) CONCAT1 (__USER_LABEL_PREFIX__, x)
+
+#ifdef __ELF__
+#define FUNC(x) .type SYM(x),function
+#else
+/* The .proc pseudo-op is accepted, but ignored, by GAS.  We could just	
+   define this to the empty string for non-ELF systems, but defining it
+   to .proc means that the information is available to the assembler if
+   the need arises.  */
+#define FUNC(x) .proc
+#endif
+		
+#define REG(x) CONCAT1 (__REGISTER_PREFIX__, x)
+
+#define IMM(x) CONCAT1 (__IMMEDIATE_PREFIX__, x)
+
+#define d0 REG(d0)
+#define d1 REG(d1)
+#define d2 REG(d2)
+#define d3 REG(d3)
+#define d4 REG(d4)
+#define d5 REG(d5)
+#define d6 REG(d6)
+#define d7 REG(d7)
+#define a0 REG(a0)
+#define a1 REG(a1)
+#define a2 REG(a2)
+#define a3 REG(a3)
+#define a4 REG(a4)
+#define a5 REG(a5)
+#define a6 REG(a6)
+#define a7 REG(a7)
+#define fp REG(fp)
+#define sp REG(sp)
+#define pc REG(pc)
+
+#define sr REG(sr)
diff -rupN a/src/audio/mint/SDL_mintaudio_it.S b/src/audio/mint/SDL_mintaudio_it.S
--- a/src/audio/mint/SDL_mintaudio_it.S	2023-04-08 08:34:01.478558986 +0200
+++ b/src/audio/mint/SDL_mintaudio_it.S	2023-09-17 14:51:06.854506617 +0200
@@ -20,6 +20,8 @@
     slouken@libsdl.org
 */
 
+#include "symbols.h"
+
 /*
 	Audio interrupts
 
@@ -28,18 +30,18 @@
 
 	.text
 
-	.globl	_SDL_MintAudio_XbiosInterruptMeasureClock
-	.globl	_SDL_MintAudio_clocktics
+	.globl	SYM(SDL_MintAudio_XbiosInterruptMeasureClock)
+	.globl	SYM(SDL_MintAudio_clocktics)
 
-	.globl	_SDL_MintAudio_XbiosInterrupt
-	.globl	_SDL_MintAudio_Dma8Interrupt
-	.globl	_SDL_MintAudio_StfaInterrupt
+	.globl	SYM(SDL_MintAudio_XbiosInterrupt)
+	.globl	SYM(SDL_MintAudio_Dma8Interrupt)
+	.globl	SYM(SDL_MintAudio_StfaInterrupt)
 
-	.globl	_SDL_MintAudio_num_its
+	.globl	SYM(SDL_MintAudio_num_its)
 
 /*--- Xbios interrupt vector to measure Falcon external clock ---*/
 
-_SDL_MintAudio_XbiosInterruptMeasureClock:          /* 1 mS */
+SYM(SDL_MintAudio_XbiosInterruptMeasureClock):          /* 1 mS */
 
 	/* state DMA sound */
 #if defined(__mcoldfire__)
@@ -51,7 +53,7 @@ _SDL_MintAudio_XbiosInterruptMeasureCloc
 	btst	#0,0xFFFF8901:w
 #endif
 	beqs	SDL_MintAudio_EndIntMeasure
-	addql	#1,_SDL_MintAudio_clocktics
+	addql	#1,SYM(SDL_MintAudio_clocktics)
 SDL_MintAudio_EndIntMeasure:
 
 	/* Clear service bit */
@@ -69,8 +71,8 @@ SDL_MintAudio_EndIntMeasure:
 /*    Xbios, DMA 8 bits: need to set ISR on MFP */
 /*    STFA: do not touch MFP */
 
-_SDL_MintAudio_XbiosInterrupt:
-_SDL_MintAudio_Dma8Interrupt:
+SYM(SDL_MintAudio_XbiosInterrupt):
+SYM(SDL_MintAudio_Dma8Interrupt):
 #if defined(__mcoldfire__)
 	lea	sp@(-12),sp
 	moveml	d0-d1/a0,sp@
@@ -86,20 +88,20 @@ _SDL_MintAudio_Dma8Interrupt:
 	bclr	#5,0xfffffa0f:w
 #endif
 
-_SDL_MintAudio_StfaInterrupt:
-	move.l	_SDL_MintAudio_num_its,d0
+SYM(SDL_MintAudio_StfaInterrupt):
+	move.l	SYM(SDL_MintAudio_num_its),d0
 	addql	#1,d0
-	move.l	d0,_SDL_MintAudio_num_its
+	move.l	d0,SYM(SDL_MintAudio_num_its)
  
 	cmp.l	#5,d0
 	bmi.s	_SDL_MintAudio_nosilence
 
-	move.l	_SDL_MintAudio_itbuffer,d1
+	move.l	SYM(SDL_MintAudio_itbuffer),d1
 	beq.s	_SDL_MintAudio_nosilence
 	move.l	d1,a0
 
-	move.l	_SDL_MintAudio_itbuflen,d0
-	move.l	_SDL_MintAudio_itsilence,d1
+	move.l	SYM(SDL_MintAudio_itbuflen),d0
+	move.l	SYM(SDL_MintAudio_itsilence),d1
 _SDL_MintAudio_fillsilence:
 	move.l	d1,a0@+
 	subq.l	#1,d0
@@ -117,9 +119,9 @@ _SDL_MintAudio_nosilence:
 	.bss
 
 	.even
-	.comm	_SDL_MintAudio_clocktics,4
-	.comm	_SDL_MintAudio_num_its,4
+	.comm	SYM(SDL_MintAudio_clocktics),4
+	.comm	SYM(SDL_MintAudio_num_its),4
 
-	.comm	_SDL_MintAudio_itbuffer,4	/* Audio DMA buffer */
-	.comm	_SDL_MintAudio_itbuflen,4	/* Length in longword */
-	.comm	_SDL_MintAudio_itsilence,4	/* Silence value */
+	.comm	SYM(SDL_MintAudio_itbuffer),4	/* Audio DMA buffer */
+	.comm	SYM(SDL_MintAudio_itbuflen),4	/* Length in longword */
+	.comm	SYM(SDL_MintAudio_itsilence),4	/* Silence value */
diff -rupN a/src/video/ataricommon/SDL_ataric2p.S b/src/video/ataricommon/SDL_ataric2p.S
--- a/src/video/ataricommon/SDL_ataric2p.S	2023-04-08 08:34:01.498558952 +0200
+++ b/src/video/ataricommon/SDL_ataric2p.S	2023-09-17 14:50:06.554556705 +0200
@@ -20,6 +20,8 @@
     slouken@libsdl.org
 */
 
+#include "symbols.h"
+
 /*
 	Chunky to planar conversion routine
 	1 byte/pixel -> 4 or 8 bit planes
@@ -29,15 +31,15 @@
 	Mikael Kalms
 */
 
-	.globl	_SDL_Atari_C2pConvert
-	.globl	_SDL_Atari_C2pConvert8
-	.globl	_SDL_Atari_C2pConvert4
-	.globl	_SDL_Atari_C2pConvert4_pal
+	.globl	SYM(SDL_Atari_C2pConvert)
+	.globl	SYM(SDL_Atari_C2pConvert8)
+	.globl	SYM(SDL_Atari_C2pConvert4)
+	.globl	SYM(SDL_Atari_C2pConvert4_pal)
 
 /* ------------	Conversion C2P, 8 bits ------------ */
 
 	.text
-_SDL_Atari_C2pConvert8:
+SYM(SDL_Atari_C2pConvert8):
 #if !defined(__mcoldfire__)
 	movel	sp@(4),c2p_source
 	movel	sp@(8),c2p_dest
@@ -289,7 +291,7 @@ SDL_Atari_C2p8_nodblline:
 
 /* ------------	Conversion C2P, 4 bits ------------ */
 
-_SDL_Atari_C2pConvert4:
+SYM(SDL_Atari_C2pConvert4):
 #if !defined(__mcoldfire__)
 	movel	sp@(4),c2p_source
 	movel	sp@(8),c2p_dest
@@ -303,7 +305,7 @@ _SDL_Atari_C2pConvert4:
 
 	movel	c2p_source,a0
 	movel	c2p_dest,a1
-	lea	_SDL_Atari_table_c2p,a2
+	lea	SYM(SDL_Atari_table_c2p),a2
 	movel	#0x00070001,d3
 #if defined(__mc68020__)
 	moveq	#0,d0
@@ -401,14 +403,14 @@ c2p4_nodblligne:
 
 /* ------------	Conversion of a light palette in 4 bits ------------ */
 
-_SDL_Atari_C2pConvert4_pal:
+SYM(SDL_Atari_C2pConvert4_pal):
 #if !defined(__mcoldfire__)
 	/* a0 is a 256-word light palette */
 	movel	sp@(4),a0
 
 	moveml	d2-d3,sp@-
 
-	lea		_SDL_Atari_table_c2p,a1
+	lea		SYM(SDL_Atari_table_c2p),a1
 	movew	#255,d3
 c2p_pal_initbcl:
 	movew	a0@+,d0
@@ -436,8 +438,8 @@ c2p_pal_initbyte:
 	.bss
 
 	.even
-	.comm	_SDL_Atari_C2pConvert,4
-	.comm	_SDL_Atari_table_c2p,1024
+	.comm	SYM(SDL_Atari_C2pConvert),4
+	.comm	SYM(SDL_Atari_table_c2p),1024
 
 	.comm	c2p_source,4	/* Source framebuffer */
 	.comm	c2p_dest,4		/* Destination framebuffer */
diff -rupN a/src/video/ataricommon/SDL_atarieddi.S b/src/video/ataricommon/SDL_atarieddi.S
--- a/src/video/ataricommon/SDL_atarieddi.S	2023-04-08 08:34:01.498558952 +0200
+++ b/src/video/ataricommon/SDL_atarieddi.S	2023-09-17 14:50:06.554556705 +0200
@@ -20,6 +20,8 @@
     slouken@libsdl.org
 */
 
+#include "symbols.h"
+
 /*
  *	Read EdDI version
  *
@@ -28,11 +30,11 @@
 
 	.text
 
-	.globl	_Atari_get_EdDI_version
+	.globl	SYM(Atari_get_EdDI_version)
 
 /*--- Vector installer ---*/
 
-_Atari_get_EdDI_version:
+SYM(Atari_get_EdDI_version):
 #if defined(__mcoldfire__)
 	movel	sp@(4),a0
 	movel	a0,eddi_cookie
diff -rupN a/src/video/ataricommon/SDL_ikbdinterrupt.S b/src/video/ataricommon/SDL_ikbdinterrupt.S
--- a/src/video/ataricommon/SDL_ikbdinterrupt.S	2023-04-08 08:34:01.498558952 +0200
+++ b/src/video/ataricommon/SDL_ikbdinterrupt.S	2023-09-17 14:50:06.557890036 +0200
@@ -20,6 +20,8 @@
     slouken@libsdl.org
 */
 
+#include "symbols.h"
+
 /*
  *	IKBD 6301 interrupt routine
  *
@@ -28,20 +30,20 @@
 
 	.text
 
-	.globl	_SDL_AtariIkbdInstall
-	.globl	_SDL_AtariIkbdUninstall
+	.globl	SYM(SDL_AtariIkbdInstall)
+	.globl	SYM(SDL_AtariIkbdUninstall)
 
-	.globl	_SDL_AtariIkbd_keyboard
-	.globl	_SDL_AtariIkbd_mouseb
-	.globl	_SDL_AtariIkbd_mousex
-	.globl	_SDL_AtariIkbd_mousey
-	.globl	_SDL_AtariIkbd_joystick
+	.globl	SYM(SDL_AtariIkbd_keyboard)
+	.globl	SYM(SDL_AtariIkbd_mouseb)
+	.globl	SYM(SDL_AtariIkbd_mousex)
+	.globl	SYM(SDL_AtariIkbd_mousey)
+	.globl	SYM(SDL_AtariIkbd_joystick)
 
-	.globl	_SDL_AtariIkbd_enabled
+	.globl	SYM(SDL_AtariIkbd_enabled)
 
 /*--- Install our IKBD vector ---*/
 
-_SDL_AtariIkbdInstall:
+SYM(SDL_AtariIkbdInstall):
 #if defined(__mcoldfire__)
 	lea	sp@(-16),sp
 	moveml	d0-d1/a0-a1,sp@
@@ -106,12 +108,12 @@ _SDL_AtariIkbdInstall:
 
 #if defined(__mcoldfire__)
 	movel	#0xffff,d0
-	movew	d0,_SDL_AtariIkbd_enabled
+	movew	d0,SYM(SDL_AtariIkbd_enabled)
 
 	moveml	sp@,d0-d1/a0-a1
 	lea	sp@(16),sp
 #else
-	movew	#0xffff,_SDL_AtariIkbd_enabled
+	movew	#0xffff,SYM(SDL_AtariIkbd_enabled)
 
 	moveml	sp@+,d0-d1/a0-a1
 #endif
@@ -119,7 +121,7 @@ _SDL_AtariIkbdInstall:
 
 /*--- Uninstall our IKBD vector ---*/
 
-_SDL_AtariIkbdUninstall:
+SYM(SDL_AtariIkbdUninstall):
 	movel	a0,sp@-
 
 	| Disable interrupts
@@ -219,7 +221,7 @@ ikbd_yes_mouse:
 #else
 	andw	#3,d0
 #endif
-	movew	d0,_SDL_AtariIkbd_mouseb
+	movew	d0,SYM(SDL_AtariIkbd_mouseb)
 
 #if defined(__mcoldfire__)
 	movel	#ikbd_mousex,d0
@@ -244,7 +246,7 @@ ikbd_yes_joystick:
 
 ikbd_no_mouse:
 	moveb	d0,d1
-	lea		_SDL_AtariIkbd_keyboard,a0
+	lea		SYM(SDL_AtariIkbd_keyboard),a0
 #if defined(__mcoldfire__)
 	andl	#0x7f,d1
 	btst	#7,d0
@@ -307,14 +309,14 @@ ikbd_mousex:
 	moveb	0xfffffc02:w,d0
 	extw	d0
 #if defined(__mcoldfire__)
-	movew	_SDL_AtariIkbd_mousex,d1
+	movew	SYM(SDL_AtariIkbd_mousex),d1
 	addl	d1,d0
-	movew	d0,_SDL_AtariIkbd_mousex
+	movew	d0,SYM(SDL_AtariIkbd_mousex)
 
 	movel	#ikbd_mousey,d0
 	movel	d0,0x118:w
 #else
-	addw	d0,_SDL_AtariIkbd_mousex
+	addw	d0,SYM(SDL_AtariIkbd_mousex)
 
 	movel	#ikbd_mousey,0x118:w
 #endif
@@ -342,14 +344,14 @@ ikbd_mousey:
 	moveb	0xfffffc02:w,d0
 	extw	d0
 #if defined(__mcoldfire__)
-	movew	_SDL_AtariIkbd_mousey,d1
+	movew	SYM(SDL_AtariIkbd_mousey),d1
 	addl	d1,d0
-	movew	d0,_SDL_AtariIkbd_mousey
+	movew	d0,SYM(SDL_AtariIkbd_mousey)
 
 	movel	#ikbd,d0
 	movel	d0,0x118:w
 #else
-	addw	d0,_SDL_AtariIkbd_mousey
+	addw	d0,SYM(SDL_AtariIkbd_mousey)
 
 	movel	#ikbd,0x118:w
 #endif
@@ -376,14 +378,14 @@ ikbd_joystick:
 
 #if defined(__mcoldfire__)
 	moveb	0xfffffc02:w,d0
-	moveb	d0,_SDL_AtariIkbd_joystick+1
+	moveb	d0,SYM(SDL_AtariIkbd_joystick)+1
 
 	movel	#ikbd,d0
 	movel	d0,0x118:w
 
 	bra	ikbd_endit_stack
 #else
-	moveb	0xfffffc02:w,_SDL_AtariIkbd_joystick+1
+	moveb	0xfffffc02:w,SYM(SDL_AtariIkbd_joystick)+1
 
 	movel	#ikbd,0x118:w
 
@@ -393,14 +395,14 @@ ikbd_joystick:
 	.data
 	
 	.even
-_SDL_AtariIkbd_enabled:
+SYM(SDL_AtariIkbd_enabled):
 	.word	0
 
 	.bss
 
 	.even
-	.comm	_SDL_AtariIkbd_keyboard,128
-	.comm	_SDL_AtariIkbd_mousex,2
-	.comm	_SDL_AtariIkbd_mousey,2
-	.comm	_SDL_AtariIkbd_mouseb,2
-	.comm	_SDL_AtariIkbd_joystick,2
+	.comm	SYM(SDL_AtariIkbd_keyboard),128
+	.comm	SYM(SDL_AtariIkbd_mousex),2
+	.comm	SYM(SDL_AtariIkbd_mousey),2
+	.comm	SYM(SDL_AtariIkbd_mouseb),2
+	.comm	SYM(SDL_AtariIkbd_joystick),2
diff -rupN a/src/video/ataricommon/SDL_xbiosinterrupt.S b/src/video/ataricommon/SDL_xbiosinterrupt.S
--- a/src/video/ataricommon/SDL_xbiosinterrupt.S	2023-04-08 08:34:01.498558952 +0200
+++ b/src/video/ataricommon/SDL_xbiosinterrupt.S	2023-09-17 14:50:06.557890036 +0200
@@ -20,6 +20,8 @@
     slouken@libsdl.org
 */
 
+#include "symbols.h"
+
 /*
  *	XBIOS mouse & joystick vectors
  *
@@ -28,20 +30,20 @@
 
 	.text
 
-	.globl	_SDL_AtariXbios_Install
-	.globl	_SDL_AtariXbios_Restore
-	.globl	_SDL_AtariXbios_MouseVector
-	.globl	_SDL_AtariXbios_JoystickVector
-
-	.globl	_SDL_AtariXbios_mouselock
-	.globl	_SDL_AtariXbios_mouseb
-	.globl	_SDL_AtariXbios_mousex
-	.globl	_SDL_AtariXbios_mousey
-	.globl	_SDL_AtariXbios_joystick
+	.globl	SYM(SDL_AtariXbios_Install)
+	.globl	SYM(SDL_AtariXbios_Restore)
+	.globl	SYM(SDL_AtariXbios_MouseVector)
+	.globl	SYM(SDL_AtariXbios_JoystickVector)
+
+	.globl	SYM(SDL_AtariXbios_mouselock)
+	.globl	SYM(SDL_AtariXbios_mouseb)
+	.globl	SYM(SDL_AtariXbios_mousex)
+	.globl	SYM(SDL_AtariXbios_mousey)
+	.globl	SYM(SDL_AtariXbios_joystick)
 
 /*--- Vector installer ---*/
 
-_SDL_AtariXbios_Install:
+SYM(SDL_AtariXbios_Install):
 	movel	sp@(4),a0
 
 	/* Stop interrupts */
@@ -85,7 +87,7 @@ no_new_joystick_vector:
 
 /*--- Vector restorer ---*/
 
-_SDL_AtariXbios_Restore:
+SYM(SDL_AtariXbios_Restore):
 	movel	sp@(4),a0
 
 	/* Stop interrupts */
@@ -120,7 +122,7 @@ no_restore_joystick:
 	.ascii "XBRA"
 	.ascii "LSDL"
 	.comm	oldmousevector,4*1
-_SDL_AtariXbios_MouseVector:
+SYM(SDL_AtariXbios_MouseVector):
 #if defined(__mcoldfire__)
 	lea	sp@(-8),sp
 	moveml	d0-d1,sp@
@@ -135,32 +137,32 @@ _SDL_AtariXbios_MouseVector:
 #else
 	andw	#3,d0
 #endif
-	movew	d0,_SDL_AtariXbios_mouseb
+	movew	d0,SYM(SDL_AtariXbios_mouseb)
 
 	/* X movement */
 	moveb	a0@(1),d0
 	extw	d0
 #if defined(__mcoldfire__)
-	movew	_SDL_AtariXbios_mousex,d1
+	movew	SYM(SDL_AtariXbios_mousex),d1
 	addl	d1,d0
-	movew	d0,_SDL_AtariXbios_mousex
+	movew	d0,SYM(SDL_AtariXbios_mousex)
 #else
-	addw	d0,_SDL_AtariXbios_mousex
+	addw	d0,SYM(SDL_AtariXbios_mousex)
 #endif
 
 	/* Y movement */
 	moveb	a0@(2),d0
 	extw	d0
 #if defined(__mcoldfire__)
-	movew	_SDL_AtariXbios_mousey,d1
+	movew	SYM(SDL_AtariXbios_mousey),d1
 	addl	d1,d0
-	movew	d0,_SDL_AtariXbios_mousey
+	movew	d0,SYM(SDL_AtariXbios_mousey)
 #else
-	addw	d0,_SDL_AtariXbios_mousey
+	addw	d0,SYM(SDL_AtariXbios_mousey)
 #endif
 
 	/* Lock mouse position ? */
-	tstw	_SDL_AtariXbios_mouselock
+	tstw	SYM(SDL_AtariXbios_mouselock)
 	beq.s	no_mouse_lock
 	clrb	a0@(1)
 	clrb	a0@(2)
@@ -179,10 +181,10 @@ no_mouse_lock:
 
 	.data
 	.even
-	.comm	_SDL_AtariXbios_mouselock,2*1
-	.comm	_SDL_AtariXbios_mousex,2*1
-	.comm	_SDL_AtariXbios_mousey,2*1
-	.comm	_SDL_AtariXbios_mouseb,2*1
+	.comm	SYM(SDL_AtariXbios_mouselock),2*1
+	.comm	SYM(SDL_AtariXbios_mousex),2*1
+	.comm	SYM(SDL_AtariXbios_mousey),2*1
+	.comm	SYM(SDL_AtariXbios_mouseb),2*1
 
 /*--- Our joystick vector ---*/
 
@@ -191,7 +193,7 @@ no_mouse_lock:
 	.ascii "XBRA"
 	.ascii "LSDL"
 	.comm	oldjoystickvector,4*1
-_SDL_AtariXbios_JoystickVector:
+SYM(SDL_AtariXbios_JoystickVector):
 	movel	d0,sp@-
 
 	/* New joystick state */
@@ -201,7 +203,7 @@ _SDL_AtariXbios_JoystickVector:
 #else
 	andw	#0x8f,d0
 #endif
-	movew	d0,_SDL_AtariXbios_joystick
+	movew	d0,SYM(SDL_AtariXbios_joystick)
 
 	/* Jump through old vector */
 	movel	sp@+,d0
@@ -211,4 +213,4 @@ _SDL_AtariXbios_JoystickVector:
 
 	.data
 	.even
-	.comm	_SDL_AtariXbios_joystick,2*1
+	.comm	SYM(SDL_AtariXbios_joystick),2*1
diff -rupN a/src/video/xbios/SDL_xbios.h b/src/video/xbios/SDL_xbios.h
--- a/src/video/xbios/SDL_xbios.h	2023-04-08 08:34:01.518558914 +0200
+++ b/src/video/xbios/SDL_xbios.h	2023-09-17 14:50:06.557890036 +0200
@@ -152,4 +152,7 @@ void SDL_XBIOS_VideoInit_Milan(_THIS);
 /* SDL_xbios_ctpci.c */
 void SDL_XBIOS_VideoInit_Ctpci(_THIS);
 
+/* SDL_xbios_nova.c */
+void SDL_XBIOS_VideoInit_Nova(_THIS, void *cookie_nova);
+
 #endif /* _SDL_xbios_h */
diff -rupN a/src/video/xbios/SDL_xbios_nova.c b/src/video/xbios/SDL_xbios_nova.c
--- a/src/video/xbios/SDL_xbios_nova.c	2023-04-08 08:34:01.518558914 +0200
+++ b/src/video/xbios/SDL_xbios_nova.c	2023-09-17 14:50:06.557890036 +0200
@@ -266,10 +266,10 @@ static void NOVA_SetMode(_THIS, int num_
 	oldstack = (void *)Super(NULL);
 
 	__asm__ __volatile__ (
-			"moveql	#0,d0\n\t"
-			"movel	%0,a0\n\t"
-			"movel	%1,a1\n\t"
-			"jsr	a1@"
+			"moveql	#0,%%d0\n\t"
+			"movel	%0,%%a0\n\t"
+			"movel	%1,%%a1\n\t"
+			"jsr	%%a1@"
 		: /* no return value */
 		: /* input */
 			"g"(&NOVA_modes[num_mode]), "g"(NOVA_xcb->p_chres)
@@ -287,9 +287,9 @@ static void NOVA_SetScreen(_THIS, void *
 	oldstack = (void *)Super(NULL);
 
 	__asm__ __volatile__ (
-			"movel	%0,a0\n\t"
-			"movel	%1,a1\n\t"
-			"jsr	a1@"
+			"movel	%0,%%a0\n\t"
+			"movel	%1,%%a1\n\t"
+			"jsr	%%a1@"
 		: /* no return value */
 		: /* input */
 			"g"(screen), "g"(NOVA_xcb->p_setscr)
@@ -312,10 +312,10 @@ static void NOVA_SetColor(_THIS, int ind
 	oldstack = (void *)Super(NULL);
 
 	__asm__ __volatile__ (
-			"movel	%0,d0\n\t"
-			"movel	%1,a0\n\t"
-			"movel	%2,a1\n\t"
-			"jsr	a1@"
+			"movel	%0,%%d0\n\t"
+			"movel	%1,%%a0\n\t"
+			"movel	%2,%%a1\n\t"
+			"jsr	%%a1@"
 		: /* no return value */
 		: /* input */
 			"g"(index), "g"(color), "g"(NOVA_xcb->p_setcol)
