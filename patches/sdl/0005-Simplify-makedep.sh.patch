From b278176c160a1fd585f8c90dd6b3674923072a3f Mon Sep 17 00:00:00 2001
From: Thorsten Otto <admin@tho-otto.de>
Date: Tue, 26 Mar 2024 12:07:41 +0100
Subject: [PATCH 1/2] Simplify makedep.sh

---
 build-scripts/makedep.sh | 52 ++++++----------------------------------
 1 file changed, 7 insertions(+), 45 deletions(-)

diff --git a/build-scripts/makedep.sh b/build-scripts/makedep.sh
index 3b3863b4..2eb93e39 100755
--- a/build-scripts/makedep.sh
+++ b/build-scripts/makedep.sh
@@ -9,79 +9,41 @@ if test x"$INCLUDE" = x -o x"$SOURCES" = x -o x"$output" = x; then
 fi
 cache_prefix=".#$$"
 
-generate_var()
-{
-    echo $1 | sed -e 's|^.*/||' -e 's|\.|_|g'
-}
-
-search_deps()
-{
-    base=`echo $1 | sed 's|/[^/]*$||'`
-    grep '#include "' <$1 | sed -e 's|.*"\([^"]*\)".*|\1|' | \
-    while read file
-    do cache=${cache_prefix}_`generate_var $file`
-       if test -f $cache; then
-          : # We already ahve this cached
-       else
-           : >$cache
-           for path in $base `echo $INCLUDE | sed 's|-I||g'`
-           do dep="$path/$file"
-              if test -f "$dep"; then
-                 echo "	$dep \\" >>$cache
-                 search_deps $dep >>$cache
-                 break
-              fi
-           done
-       fi
-       cat $cache
-    done
-}
-
 :>${output}.new
 for src in $SOURCES
 do  echo "Generating dependencies for $src"
     ext=`echo $src | sed 's|.*\.\(.*\)|\1|'`
     obj=`echo $src | sed "s|^.*/\([^ ]*\)\..*|\1.lo|g"`
-    echo "\$(objects)/$obj: $src \\" >>${output}.new
+    echo "\$(objects)/$obj: $src" >>${output}.new
 
-    # No search to be done with Windows resource files
-    if test x"$ext" != x"rc"; then
-        search_deps $src | sort | uniq >>${output}.new
-    fi
     case $ext in
         c) cat >>${output}.new <<__EOF__
-
-	\$(LIBTOOL) --mode=compile \$(CC) \$(CFLAGS) \$(EXTRA_CFLAGS) -c $src  -o \$@
+	\$(LIBTOOL) --mode=compile \$(CC) \$(CFLAGS) \$(EXTRA_CFLAGS) -c \$< -o \$@
 
 __EOF__
         ;;
         cc) cat >>${output}.new <<__EOF__
-
-	\$(LIBTOOL) --mode=compile \$(CC) \$(CFLAGS) \$(EXTRA_CFLAGS) -c $src  -o \$@
+	\$(LIBTOOL) --mode=compile \$(CC) \$(CFLAGS) \$(EXTRA_CFLAGS) -c \$< -o \$@
 
 __EOF__
         ;;
         m) cat >>${output}.new <<__EOF__
-
-	\$(LIBTOOL) --mode=compile \$(CC) \$(CFLAGS) \$(EXTRA_CFLAGS) -c $src  -o \$@
+	\$(LIBTOOL) --mode=compile \$(CC) \$(CFLAGS) \$(EXTRA_CFLAGS) -c \$< -o \$@
 
 __EOF__
         ;;
         asm) cat >>${output}.new <<__EOF__
-
-	\$(LIBTOOL) --tag=CC --mode=compile \$(auxdir)/strip_fPIC.sh \$(NASM) -I\$(srcdir)/src/hermes/ $src -o \$@
+	\$(LIBTOOL) --tag=CC --mode=compile \$(auxdir)/strip_fPIC.sh \$(NASM) -I\$(srcdir)/src/hermes/ \$< -o \$@
 
 __EOF__
         ;;
         S) cat >>${output}.new <<__EOF__
-
-	\$(LIBTOOL)  --mode=compile \$(CC) \$(CFLAGS) \$(EXTRA_CFLAGS) -c $src  -o \$@
+	\$(LIBTOOL)  --mode=compile \$(CC) \$(CFLAGS) \$(EXTRA_CFLAGS) -c \$< -o \$@
 
 __EOF__
         ;;
         rc) cat >>${output}.new <<__EOF__
-
-	\$(LIBTOOL)  --tag=RC --mode=compile \$(WINDRES) $src -o \$@
+	\$(LIBTOOL)  --tag=RC --mode=compile \$(WINDRES) \$< -o \$@
 
 __EOF__
         ;;
-- 
2.41.0

