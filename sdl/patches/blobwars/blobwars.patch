diff -rupN blobwars-1.14/src/CReplayData.cpp blobwars-1.14.new/src/CReplayData.cpp
--- blobwars-1.14/src/CReplayData.cpp	2009-02-01 12:34:44.000000000 +0100
+++ blobwars-1.14.new/src/CReplayData.cpp	2023-12-03 14:37:56.491827173 +0100
@@ -33,7 +33,8 @@ ReplayData::~ReplayData()
 
 void ReplayData::printReplayInformation()
 {
-	tm *timeinfo = localtime(&header.randomSeed);
+	time_t t = header.randomSeed;
+	tm *timeinfo = localtime(&t);
 	printf("Recorded on : %s", asctime(timeinfo));
 	printf("Map         : %s\n", header.map);
 	printf("Score       : %d\n", header.score);
diff -rupN blobwars-1.14/src/makefile blobwars-1.14.new/src/makefile
--- blobwars-1.14/src/makefile	1970-01-01 01:00:00.000000000 +0100
+++ blobwars-1.14.new/src/makefile	2023-12-03 14:43:11.614711052 +0100
@@ -0,0 +1,106 @@
+AR				=	$(CROSS_PREFIX)ar
+
+CC				=	$(CROSS_PREFIX)gcc
+
+CXX			=	$(CROSS_PREFIX)g++
+CHMOD			=	chmod
+RANLIB		=	$(CROSS_PREFIX)ranlib
+RM				=	rm -f
+STRIP			=	$(CROSS_PREFIX)strip
+
+
+
+VERSION		=	1.14
+RELEASE		=	1
+USEPAK		=	1
+
+DATADIR		=	./
+DOCDIR		=	doc/
+LOCALEDIR	=	locale
+
+PROG			=	BlobWars
+PAKNAME		=	blobwars.pak
+
+CFLAGS		=	$(CPU_CFLAGS) -O2 -Wall -fomit-frame-pointer -fno-strict-aliasing `pkg-config --cflags sdl` -DVERSION=$(VERSION) -DRELEASE=$(RELEASE) -D_VER=\"$(VERSION)\"
+CFLAGS		+=	-DUSEPAK=$(USEPAK) -DPAKNAME=\"$(PAKNAME)\" -DPAKLOCATION=\"$(DATADIR)\"
+CFLAGS		+=	-DGAMEPLAYMANUAL=\"$(DOCDIR)index.html\" -DLOCALEDIR=\"$(LOCALEDIR)\"
+
+LIBS		=	`pkg-config --libs sdl SDL_mixer SDL_image SDL_ttf` -lz -lintl -liconv
+LDFLAGS         = -s
+
+
+OBJS			+=	CAudio.o
+OBJS			+=	CBoss.o
+OBJS			+=	CCollision.o CCutscene.o  CConfig.o
+OBJS			+=	CData.o
+OBJS			+=	CEffect.o CEngine.o CEntity.o
+OBJS			+=	CFileData.o
+OBJS			+=	CGame.o CGameData.o CGameObject.o CGraphics.o
+OBJS			+=	CHub.o
+OBJS			+=	CKeyboard.o
+OBJS			+=	CJoystick.o
+OBJS			+=	CLineDef.o
+OBJS			+=	CList.o
+OBJS			+=	CMap.o CMath.o
+OBJS			+=	CObjective.o
+OBJS			+=	CPak.o CParticle.o CPersistant.o CPersistData.o
+OBJS			+=	CRadarBlip.o CReplayData.o
+OBJS			+=	CSpawnPoint.o CSprite.o CSwitch.o
+OBJS			+=	CTeleporter.o CTrain.o CTrap.o
+OBJS			+=	CWeapon.o CWidget.o
+OBJS			+=	aquaBoss.o
+OBJS			+=	bosses.o bullets.o
+OBJS			+=	cutscene.o
+OBJS			+=	droidBoss.o
+OBJS			+=	effects.o enemies.o entities.o explosions.o
+OBJS			+=	finalBattle.o
+OBJS			+=	galdov.o game.o graphics.o
+OBJS			+=	hub.o
+OBJS			+=	info.o init.o intro.o items.o
+OBJS			+=	lineDefs.o loadSave.o
+OBJS			+=	map.o mapData.o mias.o mission.o
+OBJS			+=	objectives.o obstacles.o options.o
+OBJS			+=	particles.o player.o
+OBJS			+=	resources.o
+OBJS			+=	spawnPoints.o switches.o
+OBJS			+=	tankBoss.o teleporters.o title.o trains.o traps.o triggers.o
+OBJS			+=	weapons.o widgets.o
+
+GAMEOBJS		=	$(OBJS) main.o
+#MAPOBJS		=	$(OBJS) mapEditor.o
+PAKOBJS		=	CFileData.o pak.o
+
+#LOCALE_MO	=	$(patsubst %.po,%.mo,$(wildcard locale/*.po))
+
+
+
+#all:	$(PROG) pak $(LOCALE_MO)
+all:	$(PROG) pak
+
+
+%.o:	%.cpp %.h defs.h defines.h headers.h
+		$(CXX) $(CFLAGS) -c $< -o $@
+
+
+$(PROG):	$(GAMEOBJS)
+		$(CXX) $(CPU_CFLAGS) $(GAMEOBJS) -o $@ $(LDFLAGS) $(LIBS)
+
+
+pak:	$(PAKOBJS)
+		$(CXX) $(CPU_CFLAGS) $(PAKOBJS) -o $@ $(LDFLAGS) $(LIBS)
+
+
+#%.mo:	%.po
+#		msgfmt -c -o $@ $<
+
+
+#mapeditor:	$(MAPOBJS)
+#		$(CXX) $(CPU_CFLAGS) $(MAPOBJS) -o $@ $(LDFLAGS) $(LIBS)
+
+
+buildpak:
+		pak data gfx music sound $(PAKNAME)
+
+clean:
+#		$(RM) $(GAMEOBJS) mapEditor.o pak.o $(PROG) $(PAKNAME) pak mapeditor $(LOCALE_MO)
+		$(RM) $(GAMEOBJS) mapEditor.o pak.o $(PROG) $(PROG).db $(PAKNAME) pak pak.db mapeditor
diff -rupN blobwars-1.14/src/pak.cpp blobwars-1.14.new/src/pak.cpp
--- blobwars-1.14/src/pak.cpp	2009-02-01 12:34:44.000000000 +0100
+++ blobwars-1.14.new/src/pak.cpp	2023-12-03 14:27:01.892761403 +0100
@@ -20,7 +20,7 @@ Foundation, Inc., 59 Temple Place - Suit
 
 #include "pak.h"
 
-FILE *pak;
+static FILE *pak;
 int dirs = 0, files = 0;
 int totalFiles = 0;
 Bytef *buffer;
@@ -124,7 +124,7 @@ void recurseDirectory(const char *dirNam
 			{
 				printf("Couldn't open %s for reading!\n", filename);
 				closedir(dirp);
-				gzclose(pak);
+				fclose(pak);
 				exit(1);
 			}
 			
@@ -156,7 +156,7 @@ void recurseDirectory(const char *dirNam
 			{
 				printf("Couldn't open %s for reading!\n", filename);
 				closedir(dirp);
-				gzclose(pak);
+				fclose(pak);
 				exit(1);
 			}
 			else
