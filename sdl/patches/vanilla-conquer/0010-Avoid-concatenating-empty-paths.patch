From 4a7cec3aff19005c34c0163367e948b98ba67a1a Mon Sep 17 00:00:00 2001
From: Thorsten Otto <admin@tho-otto.de>
Date: Thu, 14 Mar 2024 15:28:37 +0100
Subject: [PATCH 10/40] Avoid concatenating empty paths

---
 common/paths_posix.cpp | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/common/paths_posix.cpp b/common/paths_posix.cpp
index 030fee1..044d44c 100644
--- a/common/paths_posix.cpp
+++ b/common/paths_posix.cpp
@@ -138,6 +138,7 @@ const char* PathsClass::Program_Path()
             path = (char*)malloc(size);
             if (!_NSGetExecutablePath(path, &size)) {
                 free(path);
+                ProgramPath = ".";
                 return ProgramPath.c_str();
             }
         }
@@ -159,12 +160,14 @@ const char* PathsClass::Program_Path()
         size_t size = sizeof(buffer1);
 
         if (sysctl(mib, (u_int)(sizeof(mib) / sizeof(mib[0])), path, &size, NULL, 0) != 0) {
+            ProgramPath = ".";
             return ProgramPath.c_str();
         }
 
         resolved = realpath(path, buffer);
 #endif
         if (!resolved) {
+            ProgramPath = ".";
             return ProgramPath.c_str();
         }
 
@@ -242,7 +245,9 @@ bool PathsClass::Is_Absolute(const char* path)
 
 std::string PathsClass::Concatenate_Paths(const char* path1, const char* path2)
 {
-    return std::string(path1) + SEP + path2;
+    if (path1 != NULL && *path1 != '\0')
+        return std::string(path1) + SEP + path2;
+    return std::string(path2);
 }
 
 std::string PathsClass::Argv_Path(const char* cmd_arg)
-- 
2.41.0

